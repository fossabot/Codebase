{"version":3,"sources":["../../../../../../../libs/movie/data-access/node_modules/websocket/lib/WebSocketServer.js"],"sourcesContent":["/************************************************************************\n *  Copyright 2010-2015 Brian McKelvey.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ***********************************************************************/\n\nvar extend = require('./utils').extend;\nvar utils = require('./utils');\nvar util = require('util');\nvar debug = require('debug')('websocket:server');\nvar EventEmitter = require('events').EventEmitter;\nvar WebSocketRequest = require('./WebSocketRequest');\n\nvar WebSocketServer = function WebSocketServer(config) {\n    // Superclass Constructor\n    EventEmitter.call(this);\n\n    this._handlers = {\n        upgrade: this.handleUpgrade.bind(this),\n        requestAccepted: this.handleRequestAccepted.bind(this),\n        requestResolved: this.handleRequestResolved.bind(this)\n    };\n    this.connections = [];\n    this.pendingRequests = [];\n    if (config) {\n        this.mount(config);\n    }\n};\n\nutil.inherits(WebSocketServer, EventEmitter);\n\nWebSocketServer.prototype.mount = function(config) {\n    this.config = {\n        // The http server instance to attach to.  Required.\n        httpServer: null,\n\n        // 64KiB max frame size.\n        maxReceivedFrameSize: 0x10000,\n\n        // 1MiB max message size, only applicable if\n        // assembleFragments is true\n        maxReceivedMessageSize: 0x100000,\n\n        // Outgoing messages larger than fragmentationThreshold will be\n        // split into multiple fragments.\n        fragmentOutgoingMessages: true,\n\n        // Outgoing frames are fragmented if they exceed this threshold.\n        // Default is 16KiB\n        fragmentationThreshold: 0x4000,\n\n        // If true, the server will automatically send a ping to all\n        // clients every 'keepaliveInterval' milliseconds.  The timer is\n        // reset on any received data from the client.\n        keepalive: true,\n\n        // The interval to send keepalive pings to connected clients if the\n        // connection is idle.  Any received data will reset the counter.\n        keepaliveInterval: 20000,\n\n        // If true, the server will consider any connection that has not\n        // received any data within the amount of time specified by\n        // 'keepaliveGracePeriod' after a keepalive ping has been sent to\n        // be dead, and will drop the connection.\n        // Ignored if keepalive is false.\n        dropConnectionOnKeepaliveTimeout: true,\n\n        // The amount of time to wait after sending a keepalive ping before\n        // closing the connection if the connected peer does not respond.\n        // Ignored if keepalive is false.\n        keepaliveGracePeriod: 10000,\n\n        // Whether to use native TCP keep-alive instead of WebSockets ping\n        // and pong packets.  Native TCP keep-alive sends smaller packets\n        // on the wire and so uses bandwidth more efficiently.  This may\n        // be more important when talking to mobile devices.\n        // If this value is set to true, then these values will be ignored:\n        //   keepaliveGracePeriod\n        //   dropConnectionOnKeepaliveTimeout\n        useNativeKeepalive: false,\n\n        // If true, fragmented messages will be automatically assembled\n        // and the full message will be emitted via a 'message' event.\n        // If false, each frame will be emitted via a 'frame' event and\n        // the application will be responsible for aggregating multiple\n        // fragmented frames.  Single-frame messages will emit a 'message'\n        // event in addition to the 'frame' event.\n        // Most users will want to leave this set to 'true'\n        assembleFragments: true,\n\n        // If this is true, websocket connections will be accepted\n        // regardless of the path and protocol specified by the client.\n        // The protocol accepted will be the first that was requested\n        // by the client.  Clients from any origin will be accepted.\n        // This should only be used in the simplest of cases.  You should\n        // probably leave this set to 'false' and inspect the request\n        // object to make sure it's acceptable before accepting it.\n        autoAcceptConnections: false,\n\n        // Whether or not the X-Forwarded-For header should be respected.\n        // It's important to set this to 'true' when accepting connections\n        // from untrusted clients, as a malicious client could spoof its\n        // IP address by simply setting this header.  It's meant to be added\n        // by a trusted proxy or other intermediary within your own\n        // infrastructure.\n        // See:  http://en.wikipedia.org/wiki/X-Forwarded-For\n        ignoreXForwardedFor: false,\n\n        // If this is true, 'cookie' headers are parsed and exposed as WebSocketRequest.cookies\n        parseCookies: true,\n\n        // If this is true, 'sec-websocket-extensions' headers are parsed and exposed as WebSocketRequest.requestedExtensions\n        parseExtensions: true,\n\n        // The Nagle Algorithm makes more efficient use of network resources\n        // by introducing a small delay before sending small packets so that\n        // multiple messages can be batched together before going onto the\n        // wire.  This however comes at the cost of latency, so the default\n        // is to disable it.  If you don't need low latency and are streaming\n        // lots of small messages, you can change this to 'false'\n        disableNagleAlgorithm: true,\n\n        // The number of milliseconds to wait after sending a close frame\n        // for an acknowledgement to come back before giving up and just\n        // closing the socket.\n        closeTimeout: 5000\n    };\n    extend(this.config, config);\n\n    if (this.config.httpServer) {\n        if (!Array.isArray(this.config.httpServer)) {\n            this.config.httpServer = [this.config.httpServer];\n        }\n        var upgradeHandler = this._handlers.upgrade;\n        this.config.httpServer.forEach(function(httpServer) {\n            httpServer.on('upgrade', upgradeHandler);\n        });\n    }\n    else {\n        throw new Error('You must specify an httpServer on which to mount the WebSocket server.');\n    }\n};\n\nWebSocketServer.prototype.unmount = function() {\n    var upgradeHandler = this._handlers.upgrade;\n    this.config.httpServer.forEach(function(httpServer) {\n        httpServer.removeListener('upgrade', upgradeHandler);\n    });\n};\n\nWebSocketServer.prototype.closeAllConnections = function() {\n    this.connections.forEach(function(connection) {\n        connection.close();\n    });\n    this.pendingRequests.forEach(function(request) {\n        process.nextTick(function() {\n          request.reject(503); // HTTP 503 Service Unavailable\n        });\n    });\n};\n\nWebSocketServer.prototype.broadcast = function(data) {\n    if (Buffer.isBuffer(data)) {\n        this.broadcastBytes(data);\n    }\n    else if (typeof(data.toString) === 'function') {\n        this.broadcastUTF(data);\n    }\n};\n\nWebSocketServer.prototype.broadcastUTF = function(utfData) {\n    this.connections.forEach(function(connection) {\n        connection.sendUTF(utfData);\n    });\n};\n\nWebSocketServer.prototype.broadcastBytes = function(binaryData) {\n    this.connections.forEach(function(connection) {\n        connection.sendBytes(binaryData);\n    });\n};\n\nWebSocketServer.prototype.shutDown = function() {\n    this.unmount();\n    this.closeAllConnections();\n};\n\nWebSocketServer.prototype.handleUpgrade = function(request, socket) {\n    var self = this;\n    var wsRequest = new WebSocketRequest(socket, request, this.config);\n    try {\n        wsRequest.readHandshake();\n    }\n    catch(e) {\n        wsRequest.reject(\n            e.httpCode ? e.httpCode : 400,\n            e.message,\n            e.headers\n        );\n        debug('Invalid handshake: %s', e.message);\n        this.emit('upgradeError', e);\n        return;\n    }\n\n    this.pendingRequests.push(wsRequest);\n\n    wsRequest.once('requestAccepted', this._handlers.requestAccepted);\n    wsRequest.once('requestResolved', this._handlers.requestResolved);\n    socket.once('close', function () {\n        self._handlers.requestResolved(wsRequest);\n    });\n\n    if (!this.config.autoAcceptConnections && utils.eventEmitterListenerCount(this, 'request') > 0) {\n        this.emit('request', wsRequest);\n    }\n    else if (this.config.autoAcceptConnections) {\n        wsRequest.accept(wsRequest.requestedProtocols[0], wsRequest.origin);\n    }\n    else {\n        wsRequest.reject(404, 'No handler is configured to accept the connection.');\n    }\n};\n\nWebSocketServer.prototype.handleRequestAccepted = function(connection) {\n    var self = this;\n    connection.once('close', function(closeReason, description) {\n        self.handleConnectionClose(connection, closeReason, description);\n    });\n    this.connections.push(connection);\n    this.emit('connect', connection);\n};\n\nWebSocketServer.prototype.handleConnectionClose = function(connection, closeReason, description) {\n    var index = this.connections.indexOf(connection);\n    if (index !== -1) {\n        this.connections.splice(index, 1);\n    }\n    this.emit('close', connection, closeReason, description);\n};\n\nWebSocketServer.prototype.handleRequestResolved = function(request) {\n    var index = this.pendingRequests.indexOf(request);\n    if (index !== -1) { this.pendingRequests.splice(index, 1); }\n};\n\nmodule.exports = WebSocketServer;\n"],"names":["extend","require","utils","util","debug","EventEmitter","WebSocketRequest","WebSocketServer","config","call","_handlers","upgrade","handleUpgrade","bind","requestAccepted","handleRequestAccepted","requestResolved","handleRequestResolved","connections","pendingRequests","mount","inherits","prototype","httpServer","maxReceivedFrameSize","maxReceivedMessageSize","fragmentOutgoingMessages","fragmentationThreshold","keepalive","keepaliveInterval","dropConnectionOnKeepaliveTimeout","keepaliveGracePeriod","useNativeKeepalive","assembleFragments","autoAcceptConnections","ignoreXForwardedFor","parseCookies","parseExtensions","disableNagleAlgorithm","closeTimeout","Array","isArray","upgradeHandler","forEach","on","Error","unmount","removeListener","closeAllConnections","connection","close","request","process","nextTick","reject","broadcast","data","Buffer","isBuffer","broadcastBytes","toString","broadcastUTF","utfData","sendUTF","binaryData","sendBytes","shutDown","socket","self","wsRequest","readHandshake","e","httpCode","message","headers","emit","push","once","eventEmitterListenerCount","accept","requestedProtocols","origin","closeReason","description","handleConnectionClose","index","indexOf","splice","module","exports"],"mappings":"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"}