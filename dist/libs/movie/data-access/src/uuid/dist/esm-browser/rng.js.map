{"version":3,"sources":["../../../../../../../../libs/movie/data-access/node_modules/uuid/dist/esm-browser/rng.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}"],"names":["rng","getRandomValues","crypto","bind","msCrypto","Error","rnds8","Uint8Array"],"mappings":";kBAKwBA,GAAG;SAAHA,GAAG,GAAG,CAAC;IAC7B,EAA8E,AAA9E,4EAA8E;IAC9E,EAAE,GAAGC,eAAe,EAAE,CAAC;QACrB,EAAkG,AAAlG,gGAAkG;QAClG,EAAiE,AAAjE,+DAAiE;QACjEA,eAAe,GAAG,MAAM,CAACC,MAAM,KAAK,CAAW,cAAIA,MAAM,CAACD,eAAe,IAAIC,MAAM,CAACD,eAAe,CAACE,IAAI,CAACD,MAAM,KAAK,MAAM,CAACE,QAAQ,KAAK,CAAW,cAAI,MAAM,CAACA,QAAQ,CAACH,eAAe,KAAK,CAAU,aAAIG,QAAQ,CAACH,eAAe,CAACE,IAAI,CAACC,QAAQ;QAE/O,EAAE,GAAGH,eAAe,EAAE,CAAC;YACrB,KAAK,CAAC,GAAG,CAACI,KAAK,CAAC,CAA0G;QAC5H,CAAC;IACH,CAAC;IAED,MAAM,CAACJ,eAAe,CAACK,KAAK;AAC9B,CAAC;AAlBD,EAA6F,AAA7F,2FAA6F;AAC7F,EAA6F,AAA7F,2FAA6F;AAC7F,EAAmC,AAAnC,iCAAmC;AACnC,GAAG,CAACL,eAAe;AACnB,GAAG,CAACK,KAAK,GAAG,GAAG,CAACC,UAAU,CAAC,EAAE"}