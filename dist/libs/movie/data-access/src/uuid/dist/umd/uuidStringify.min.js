"use strict";
!function(e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).uuidStringify = t();
}(void 0, function() {
    "use strict";
    var e1 = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
    function t1(t) {
        return "string" == typeof t && e1.test(t);
    }
    for(var i = [], n1 = 0; n1 < 256; ++n1)i.push((n1 + 256).toString(16).substr(1));
    return function(e) {
        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, f = (i[e[n + 0]] + i[e[n + 1]] + i[e[n + 2]] + i[e[n + 3]] + "-" + i[e[n + 4]] + i[e[n + 5]] + "-" + i[e[n + 6]] + i[e[n + 7]] + "-" + i[e[n + 8]] + i[e[n + 9]] + "-" + i[e[n + 10]] + i[e[n + 11]] + i[e[n + 12]] + i[e[n + 13]] + i[e[n + 14]] + i[e[n + 15]]).toLowerCase();
        if (!t1(f)) throw TypeError("Stringified UUID is invalid");
        return f;
    };
});

//# sourceMappingURL=uuidStringify.min.js.map