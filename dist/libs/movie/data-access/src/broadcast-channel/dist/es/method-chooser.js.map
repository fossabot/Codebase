{"version":3,"sources":["../../../../../../../../libs/movie/data-access/node_modules/broadcast-channel/dist/es/method-chooser.js"],"sourcesContent":["import NativeMethod from './methods/native.js';\nimport IndexeDbMethod from './methods/indexed-db.js';\nimport LocalstorageMethod from './methods/localstorage.js';\nimport SimulateMethod from './methods/simulate.js';\nimport { isNode } from './util'; // order is important\n\nvar METHODS = [NativeMethod, // fastest\nIndexeDbMethod, LocalstorageMethod];\n/**\n * The NodeMethod is loaded lazy\n * so it will not get bundled in browser-builds\n */\n\nif (isNode) {\n  /**\n   * we use the non-transpiled code for nodejs\n   * because it runs faster\n   */\n  var NodeMethod = require('../../src/methods/' + // use this hack so that browserify and others\n  // do not import the node-method by default\n  // when bundling.\n  'node.js');\n  /**\n   * this will be false for webpackbuilds\n   * which will shim the node-method with an empty object {}\n   */\n\n\n  if (typeof NodeMethod.canBeUsed === 'function') {\n    METHODS.push(NodeMethod);\n  }\n}\n\nexport function chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean); // directly chosen\n\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return SimulateMethod;\n    }\n\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage is been chosen\n   */\n\n\n  if (!options.webWorkerSupport && !isNode) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed();\n  });\n  if (!useMethod) throw new Error('No useable methode found:' + JSON.stringify(METHODS.map(function (m) {\n    return m.type;\n  })));else return useMethod;\n}"],"names":["chooseMethod","METHODS","NativeMethod","IndexeDbMethod","LocalstorageMethod","isNode","NodeMethod","require","canBeUsed","push","options","chooseMethods","concat","methods","filter","Boolean","type","SimulateMethod","ret","find","m","Error","webWorkerSupport","useMethod","method","JSON","stringify","map"],"mappings":";QAiCgBA,YAAY,GAAZA,YAAY;AAjCH,GAAqB,CAArB,SAAqB;AACnB,GAAyB,CAAzB,YAAyB;AACrB,GAA2B,CAA3B,eAA2B;AAC/B,GAAuB,CAAvB,WAAuB;AAC3B,GAAQ,CAAR,KAAQ;AAE/B,GAAG,CAACC,OAAO,GAAG,CAACC;IAAAA,SAAY;IAC3BC,YAAc;IAAEC,eAAkB;AAAA,CAAC;AACnC,EAGG,AAHH;;;CAGG,AAHH,EAGG,CAEH,EAAE,EAAEC,KAAM,SAAE,CAAC;IACX,EAGG,AAHH;;;GAGG,AAHH,EAGG,CACH,GAAG,CAACC,UAAU,GAAGC,OAAO,CAAC,CAAoB,sBAC7C,EAA2C,AAA3C,yCAA2C;IAC3C,EAAiB,AAAjB,eAAiB;IACjB,CAAS;IACT,EAGG,AAHH;;;GAGG,AAHH,EAGG,CAGH,EAAE,EAAE,MAAM,CAACD,UAAU,CAACE,SAAS,KAAK,CAAU,WAAE,CAAC;QAC/CP,OAAO,CAACQ,IAAI,CAACH,UAAU;IACzB,CAAC;AACH,CAAC;SAEeN,YAAY,CAACU,OAAO,EAAE,CAAC;IACrC,GAAG,CAACC,aAAa,GAAG,CAAC,CAAC,CAACC,MAAM,CAACF,OAAO,CAACG,OAAO,EAAEZ,OAAO,EAAEa,MAAM,CAACC,OAAO,EAAG,CAAkB,AAAlB,EAAkB,AAAlB,gBAAkB;IAE3F,EAAE,EAAEL,OAAO,CAACM,IAAI,EAAE,CAAC;QACjB,EAAE,EAAEN,OAAO,CAACM,IAAI,KAAK,CAAU,WAAE,CAAC;YAChC,EAA8C,AAA9C,4CAA8C;YAC9C,MAAM,CAACC,WAAc;QACvB,CAAC;QAED,GAAG,CAACC,GAAG,GAAGP,aAAa,CAACQ,IAAI,CAAC,QAAQ,CAAEC,CAAC,EAAE,CAAC;YACzC,MAAM,CAACA,CAAC,CAACJ,IAAI,KAAKN,OAAO,CAACM,IAAI;QAChC,CAAC;QACD,EAAE,GAAGE,GAAG,EAAE,KAAK,CAAC,GAAG,CAACG,KAAK,CAAC,CAAc,gBAAGX,OAAO,CAACM,IAAI,GAAG,CAAY;aAAO,MAAM,CAACE,GAAG;IACzF,CAAC;IACD,EAGG,AAHH;;;GAGG,AAHH,EAGG,CAGH,EAAE,GAAGR,OAAO,CAACY,gBAAgB,KAAKjB,KAAM,SAAE,CAAC;QACzCM,aAAa,GAAGA,aAAa,CAACG,MAAM,CAAC,QAAQ,CAAEM,CAAC,EAAE,CAAC;YACjD,MAAM,CAACA,CAAC,CAACJ,IAAI,KAAK,CAAK;QACzB,CAAC;IACH,CAAC;IAED,GAAG,CAACO,SAAS,GAAGZ,aAAa,CAACQ,IAAI,CAAC,QAAQ,CAAEK,MAAM,EAAE,CAAC;QACpD,MAAM,CAACA,MAAM,CAAChB,SAAS;IACzB,CAAC;IACD,EAAE,GAAGe,SAAS,EAAE,KAAK,CAAC,GAAG,CAACF,KAAK,CAAC,CAA2B,6BAAGI,IAAI,CAACC,SAAS,CAACzB,OAAO,CAAC0B,GAAG,CAAC,QAAQ,CAAEP,CAAC,EAAE,CAAC;QACrG,MAAM,CAACA,CAAC,CAACJ,IAAI;IACf,CAAC;SAAS,MAAM,CAACO,SAAS;AAC5B,CAAC"}