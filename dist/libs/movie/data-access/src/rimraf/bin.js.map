{"version":3,"sources":["../../../../../../libs/movie/data-access/node_modules/rimraf/bin.js"],"sourcesContent":["#!/usr/bin/env node\n\nconst rimraf = require('./')\n\nconst path = require('path')\n\nconst isRoot = arg => /^(\\/|[a-zA-Z]:\\\\)$/.test(path.resolve(arg))\nconst filterOutRoot = arg => {\n  const ok = preserveRoot === false || !isRoot(arg)\n  if (!ok) {\n    console.error(`refusing to remove ${arg}`)\n    console.error('Set --no-preserve-root to allow this')\n  }\n  return ok\n}\n\nlet help = false\nlet dashdash = false\nlet noglob = false\nlet preserveRoot = true\nconst args = process.argv.slice(2).filter(arg => {\n  if (dashdash)\n    return !!arg\n  else if (arg === '--')\n    dashdash = true\n  else if (arg === '--no-glob' || arg === '-G')\n    noglob = true\n  else if (arg === '--glob' || arg === '-g')\n    noglob = false\n  else if (arg.match(/^(-+|\\/)(h(elp)?|\\?)$/))\n    help = true\n  else if (arg === '--preserve-root')\n    preserveRoot = true\n  else if (arg === '--no-preserve-root')\n    preserveRoot = false\n  else\n    return !!arg\n}).filter(arg => !preserveRoot || filterOutRoot(arg))\n\nconst go = n => {\n  if (n >= args.length)\n    return\n  const options = noglob ? { glob: false } : {}\n  rimraf(args[n], options, er => {\n    if (er)\n      throw er\n    go(n+1)\n  })\n}\n\nif (help || args.length === 0) {\n  // If they didn't ask for help, then this is not a \"success\"\n  const log = help ? console.log : console.error\n  log('Usage: rimraf <path> [<path> ...]')\n  log('')\n  log('  Deletes all files and folders at \"path\" recursively.')\n  log('')\n  log('Options:')\n  log('')\n  log('  -h, --help          Display this usage info')\n  log('  -G, --no-glob       Do not expand glob patterns in arguments')\n  log('  -g, --glob          Expand glob patterns in arguments (default)')\n  log('  --preserve-root     Do not remove \\'/\\' (default)')\n  log('  --no-preserve-root  Do not treat \\'/\\' specially')\n  log('  --                  Stop parsing flags')\n  process.exit(help ? 0 : 1)\n} else\n  go(0)\n"],"names":["rimraf","require","path","isRoot","arg","test","resolve","filterOutRoot","ok","preserveRoot","console","error","help","dashdash","noglob","args","process","argv","slice","filter","match","go","n","length","options","glob","er","log","exit"],"mappings":";;AAEA,KAAK,CAACA,MAAM,GAAGC,OAAO,CAAC,CAAI;AAE3B,KAAK,CAACC,IAAI,GAAGD,OAAO,CAAC,CAAM;AAE3B,KAAK,CAACE,MAAM,IAAGC,GAAG,wBAAyBC,IAAI,CAACH,IAAI,CAACI,OAAO,CAACF,GAAG;;AAChE,KAAK,CAACG,aAAa,IAAGH,GAAG,GAAI,CAAC;IAC5B,KAAK,CAACI,EAAE,GAAGC,YAAY,KAAK,KAAK,KAAKN,MAAM,CAACC,GAAG;IAChD,EAAE,GAAGI,EAAE,EAAE,CAAC;QACRE,OAAO,CAACC,KAAK,EAAE,mBAAmB,EAAEP,GAAG;QACvCM,OAAO,CAACC,KAAK,CAAC,CAAsC;IACtD,CAAC;IACD,MAAM,CAACH,EAAE;AACX,CAAC;AAED,GAAG,CAACI,IAAI,GAAG,KAAK;AAChB,GAAG,CAACC,QAAQ,GAAG,KAAK;AACpB,GAAG,CAACC,MAAM,GAAG,KAAK;AAClB,GAAG,CAACL,YAAY,GAAG,IAAI;AACvB,KAAK,CAACM,IAAI,GAAGC,OAAO,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,EAAEC,MAAM,EAACf,GAAG,GAAI,CAAC;IAChD,EAAE,EAAES,QAAQ,EACV,MAAM,GAAGT,GAAG;SACT,EAAE,EAAEA,GAAG,KAAK,CAAI,KACnBS,QAAQ,GAAG,IAAI;SACZ,EAAE,EAAET,GAAG,KAAK,CAAW,cAAIA,GAAG,KAAK,CAAI,KAC1CU,MAAM,GAAG,IAAI;SACV,EAAE,EAAEV,GAAG,KAAK,CAAQ,WAAIA,GAAG,KAAK,CAAI,KACvCU,MAAM,GAAG,KAAK;SACX,EAAE,EAAEV,GAAG,CAACgB,KAAK,2BAChBR,IAAI,GAAG,IAAI;SACR,EAAE,EAAER,GAAG,KAAK,CAAiB,kBAChCK,YAAY,GAAG,IAAI;SAChB,EAAE,EAAEL,GAAG,KAAK,CAAoB,qBACnCK,YAAY,GAAG,KAAK;SAEpB,MAAM,GAAGL,GAAG;AAChB,CAAC,EAAEe,MAAM,EAACf,GAAG,IAAKK,YAAY,IAAIF,aAAa,CAACH,GAAG;;AAEnD,KAAK,CAACiB,EAAE,IAAGC,CAAC,GAAI,CAAC;IACf,EAAE,EAAEA,CAAC,IAAIP,IAAI,CAACQ,MAAM,EAClB,MAAM;IACR,KAAK,CAACC,OAAO,GAAGV,MAAM,GAAG,CAAC;QAACW,IAAI,EAAE,KAAK;IAAC,CAAC,GAAG,CAAC,CAAC;IAC7CzB,MAAM,CAACe,IAAI,CAACO,CAAC,GAAGE,OAAO,GAAEE,EAAE,GAAI,CAAC;QAC9B,EAAE,EAAEA,EAAE,EACJ,KAAK,CAACA,EAAE;QACVL,EAAE,CAACC,CAAC,GAAC,CAAC;IACR,CAAC;AACH,CAAC;AAED,EAAE,EAAEV,IAAI,IAAIG,IAAI,CAACQ,MAAM,KAAK,CAAC,EAAE,CAAC;IAC9B,EAA4D,AAA5D,0DAA4D;IAC5D,KAAK,CAACI,GAAG,GAAGf,IAAI,GAAGF,OAAO,CAACiB,GAAG,GAAGjB,OAAO,CAACC,KAAK;IAC9CgB,GAAG,CAAC,CAAmC;IACvCA,GAAG,CAAC,CAAE;IACNA,GAAG,CAAC,CAAwD;IAC5DA,GAAG,CAAC,CAAE;IACNA,GAAG,CAAC,CAAU;IACdA,GAAG,CAAC,CAAE;IACNA,GAAG,CAAC,CAA+C;IACnDA,GAAG,CAAC,CAAgE;IACpEA,GAAG,CAAC,CAAmE;IACvEA,GAAG,CAAC,CAAqD;IACzDA,GAAG,CAAC,CAAoD;IACxDA,GAAG,CAAC,CAA0C;IAC9CX,OAAO,CAACY,IAAI,CAAChB,IAAI,GAAG,CAAC,GAAG,CAAC;AAC3B,CAAC,MACCS,EAAE,CAAC,CAAC"}