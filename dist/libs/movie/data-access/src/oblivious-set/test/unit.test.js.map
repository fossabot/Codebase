{"version":3,"sources":["../../../../../../../libs/movie/data-access/node_modules/oblivious-set/test/unit.test.ts"],"sourcesContent":["import AsyncTestUtil from 'async-test-util';\nimport * as assert from 'assert';\n\nimport {\n    ObliviousSet\n} from '../src/index';\n\ndescribe('unit.test.js', () => {\n    it('create, add, has, get, clear', () => {\n        const set = new ObliviousSet(100);\n        set.add('foobar');\n        const has = set.has('foobar');\n        assert.ok(has);\n\n        set.clear();\n        const hasAfter = set.has('foobar');\n        assert.strictEqual(false, hasAfter);\n    });\n    it('.removeTooOldValues() should clear the old values when a new one is given', async () => {\n        const set = new ObliviousSet(100);\n        set.add('foobar');\n        assert.ok(set.has('foobar'));\n\n        await AsyncTestUtil.wait(200);\n        set.add('foobar2');\n        await AsyncTestUtil.wait(100);\n\n        const has = set.has('foobar');\n\n        assert.strictEqual(false, has);\n    });\n    it('.removeTooOldValues() should NOT clear to young values when a new one is given', async () => {\n        const set = new ObliviousSet(500);\n        set.add('foobar');\n        assert.ok(set.has('foobar'));\n\n        await AsyncTestUtil.wait(50);\n        set.add('foobar2');\n        assert.ok(set.has('foobar'));\n    });\n    it('should clear the value after its ttl', async () => {\n        const set = new ObliviousSet(100);\n        set.add('foobar');\n\n        await AsyncTestUtil.wait(200);\n        set.add('foobar2');\n        await AsyncTestUtil.wait(100);\n\n        const has = set.has('foobar');\n        assert.strictEqual(false, has);\n    });\n});\n"],"names":["assert","describe","it","set","ObliviousSet","add","has","ok","clear","hasAfter","strictEqual","AsyncTestUtil","wait"],"mappings":";AAA0B,GAAiB,CAAjB,cAAiB;AAC/BA,GAAM,CAANA,MAAM;AAIX,GAAc,CAAd,MAAc;AAErBC,QAAQ,CAAC,CAAc,mBAAQ,CAAC;IAC5BC,EAAE,CAAC,CAA8B,mCAAQ,CAAC;QACtC,KAAK,CAACC,GAAG,GAAG,GAAG,CAACC,MAAY,cAAC,GAAG;QAChCD,GAAG,CAACE,GAAG,CAAC,CAAQ;QAChB,KAAK,CAACC,GAAG,GAAGH,GAAG,CAACG,GAAG,CAAC,CAAQ;QAC5BN,MAAM,CAACO,EAAE,CAACD,GAAG;QAEbH,GAAG,CAACK,KAAK;QACT,KAAK,CAACC,QAAQ,GAAGN,GAAG,CAACG,GAAG,CAAC,CAAQ;QACjCN,MAAM,CAACU,WAAW,CAAC,KAAK,EAAED,QAAQ;IACtC,CAAC;IACDP,EAAE,CAAC,CAA2E,sFAAc,CAAC;QACzF,KAAK,CAACC,GAAG,GAAG,GAAG,CAACC,MAAY,cAAC,GAAG;QAChCD,GAAG,CAACE,GAAG,CAAC,CAAQ;QAChBL,MAAM,CAACO,EAAE,CAACJ,GAAG,CAACG,GAAG,CAAC,CAAQ;QAE1B,KAAK,CAACK,cAAa,SAACC,IAAI,CAAC,GAAG;QAC5BT,GAAG,CAACE,GAAG,CAAC,CAAS;QACjB,KAAK,CAACM,cAAa,SAACC,IAAI,CAAC,GAAG;QAE5B,KAAK,CAACN,GAAG,GAAGH,GAAG,CAACG,GAAG,CAAC,CAAQ;QAE5BN,MAAM,CAACU,WAAW,CAAC,KAAK,EAAEJ,GAAG;IACjC,CAAC;IACDJ,EAAE,CAAC,CAAgF,2FAAc,CAAC;QAC9F,KAAK,CAACC,GAAG,GAAG,GAAG,CAACC,MAAY,cAAC,GAAG;QAChCD,GAAG,CAACE,GAAG,CAAC,CAAQ;QAChBL,MAAM,CAACO,EAAE,CAACJ,GAAG,CAACG,GAAG,CAAC,CAAQ;QAE1B,KAAK,CAACK,cAAa,SAACC,IAAI,CAAC,EAAE;QAC3BT,GAAG,CAACE,GAAG,CAAC,CAAS;QACjBL,MAAM,CAACO,EAAE,CAACJ,GAAG,CAACG,GAAG,CAAC,CAAQ;IAC9B,CAAC;IACDJ,EAAE,CAAC,CAAsC,iDAAc,CAAC;QACpD,KAAK,CAACC,GAAG,GAAG,GAAG,CAACC,MAAY,cAAC,GAAG;QAChCD,GAAG,CAACE,GAAG,CAAC,CAAQ;QAEhB,KAAK,CAACM,cAAa,SAACC,IAAI,CAAC,GAAG;QAC5BT,GAAG,CAACE,GAAG,CAAC,CAAS;QACjB,KAAK,CAACM,cAAa,SAACC,IAAI,CAAC,GAAG;QAE5B,KAAK,CAACN,GAAG,GAAGH,GAAG,CAACG,GAAG,CAAC,CAAQ;QAC5BN,MAAM,CAACU,WAAW,CAAC,KAAK,EAAEJ,GAAG;IACjC,CAAC;AACL,CAAC"}