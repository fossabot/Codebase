{"version":3,"sources":["../../../../../../../libs/movie/data-access/node_modules/type/lib/to-short-string.js"],"sourcesContent":["\"use strict\";\n\nvar safeToString = require(\"./safe-to-string\");\n\nvar reNewLine = /[\\n\\r\\u2028\\u2029]/g;\n\nmodule.exports = function (value) {\n\tvar string = safeToString(value);\n\tif (string === null) return \"<Non-coercible to string value>\";\n\t// Trim if too long\n\tif (string.length > 100) string = string.slice(0, 99) + \"â€¦\";\n\t// Replace eventual new lines\n\tstring = string.replace(reNewLine, function (char) {\n\t\tswitch (char) {\n\t\t\tcase \"\\n\":\n\t\t\t\treturn \"\\\\n\";\n\t\t\tcase \"\\r\":\n\t\t\t\treturn \"\\\\r\";\n\t\t\tcase \"\\u2028\":\n\t\t\t\treturn \"\\\\u2028\";\n\t\t\tcase \"\\u2029\":\n\t\t\t\treturn \"\\\\u2029\";\n\t\t\t/* istanbul ignore next */\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unexpected character\");\n\t\t}\n\t});\n\treturn string;\n};\n"],"names":["safeToString","require","reNewLine","module","exports","value","string","length","slice","replace","char","Error"],"mappings":"AAAA,CAAY;AAEZ,GAAG,CAACA,YAAY,GAAGC,OAAO,CAAC,CAAkB;AAE7C,GAAG,CAACC,SAAS;AAEbC,MAAM,CAACC,OAAO,GAAG,QAAQ,CAAEC,KAAK,EAAE,CAAC;IAClC,GAAG,CAACC,MAAM,GAAGN,YAAY,CAACK,KAAK;IAC/B,EAAE,EAAEC,MAAM,KAAK,IAAI,EAAE,MAAM,CAAC,CAAiC;IAC7D,EAAmB,AAAnB,iBAAmB;IACnB,EAAE,EAAEA,MAAM,CAACC,MAAM,GAAG,GAAG,EAAED,MAAM,GAAGA,MAAM,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,IAAI,CAAG;IAC3D,EAA6B,AAA7B,2BAA6B;IAC7BF,MAAM,GAAGA,MAAM,CAACG,OAAO,CAACP,SAAS,EAAE,QAAQ,CAAEQ,IAAI,EAAE,CAAC;QACnD,MAAM,CAAEA,IAAI;YACX,IAAI,CAAC,CAAI;gBACR,MAAM,CAAC,CAAK;YACb,IAAI,CAAC,CAAI;gBACR,MAAM,CAAC,CAAK;YACb,IAAI,CAAC,CAAQ;gBACZ,MAAM,CAAC,CAAS;YACjB,IAAI,CAAC,CAAQ;gBACZ,MAAM,CAAC,CAAS;YACjB,EAA0B,AAA1B,sBAA0B,AAA1B,EAA0B;gBAEzB,KAAK,CAAC,GAAG,CAACC,KAAK,CAAC,CAAsB;;IAEzC,CAAC;IACD,MAAM,CAACL,MAAM;AACd,CAAC"}