{"version":3,"sources":["../../../../../../../../libs/movie/data-access/node_modules/type/test/date/ensure.js"],"sourcesContent":["\"use strict\";\n\nvar assert     = require(\"chai\").assert\n  , ensureDate = require(\"../../date/ensure\");\n\ndescribe(\"date/ensure\", function () {\n\tit(\"Should return input value\", function () {\n\t\tvar value = new Date();\n\t\tassert.equal(ensureDate(value), value);\n\t});\n\tit(\"Should crash on invalid value\", function () {\n\t\ttry {\n\t\t\tensureDate(null);\n\t\t\tthrow new Error(\"Unexpected\");\n\t\t} catch (error) {\n\t\t\tassert.equal(error.name, \"TypeError\");\n\t\t\tassert(error.message.includes(\"is not a date object\"));\n\t\t}\n\t});\n});\n"],"names":["assert","require","ensureDate","describe","it","value","Date","equal","Error","error","name","message","includes"],"mappings":"AAAA,CAAY;AAEZ,GAAG,CAACA,MAAM,GAAOC,OAAO,CAAC,CAAM,OAAED,MAAM,EACnCE,UAAU,GAAGD,OAAO,CAAC,CAAmB;AAE5CE,QAAQ,CAAC,CAAa,cAAE,QAAQ,GAAI,CAAC;IACpCC,EAAE,CAAC,CAA2B,4BAAE,QAAQ,GAAI,CAAC;QAC5C,GAAG,CAACC,KAAK,GAAG,GAAG,CAACC,IAAI;QACpBN,MAAM,CAACO,KAAK,CAACL,UAAU,CAACG,KAAK,GAAGA,KAAK;IACtC,CAAC;IACDD,EAAE,CAAC,CAA+B,gCAAE,QAAQ,GAAI,CAAC;QAChD,GAAG,CAAC,CAAC;YACJF,UAAU,CAAC,IAAI;YACf,KAAK,CAAC,GAAG,CAACM,KAAK,CAAC,CAAY;QAC7B,CAAC,CAAC,KAAK,EAAEC,KAAK,EAAE,CAAC;YAChBT,MAAM,CAACO,KAAK,CAACE,KAAK,CAACC,IAAI,EAAE,CAAW;YACpCV,MAAM,CAACS,KAAK,CAACE,OAAO,CAACC,QAAQ,CAAC,CAAsB;QACrD,CAAC;IACF,CAAC;AACF,CAAC"}