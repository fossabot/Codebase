{"version":3,"sources":["../../../../../../../../libs/movie/data-access/node_modules/type/test/time-value/ensure.js"],"sourcesContent":["\"use strict\";\n\nvar assert          = require(\"chai\").assert\n  , ensureTimeValue = require(\"../../time-value/ensure\");\n\ndescribe(\"time-value/ensure\", function () {\n\tit(\"Should return coerced value\", function () { assert.equal(ensureTimeValue(\"12.23\"), 12); });\n\tit(\"Should crash on no value\", function () {\n\t\ttry {\n\t\t\tensureTimeValue(\"foo\");\n\t\t\tthrow new Error(\"Unexpected\");\n\t\t} catch (error) {\n\t\t\tassert.equal(error.name, \"TypeError\");\n\t\t\tassert.equal(error.message, \"foo is not a time value\");\n\t\t}\n\t});\n});\n"],"names":["assert","require","ensureTimeValue","describe","it","equal","Error","error","name","message"],"mappings":"AAAA,CAAY;AAEZ,GAAG,CAACA,MAAM,GAAYC,OAAO,CAAC,CAAM,OAAED,MAAM,EACxCE,eAAe,GAAGD,OAAO,CAAC,CAAyB;AAEvDE,QAAQ,CAAC,CAAmB,oBAAE,QAAQ,GAAI,CAAC;IAC1CC,EAAE,CAAC,CAA6B,8BAAE,QAAQ,GAAI,CAAC;QAACJ,MAAM,CAACK,KAAK,CAACH,eAAe,CAAC,CAAO,SAAG,EAAE;IAAG,CAAC;IAC7FE,EAAE,CAAC,CAA0B,2BAAE,QAAQ,GAAI,CAAC;QAC3C,GAAG,CAAC,CAAC;YACJF,eAAe,CAAC,CAAK;YACrB,KAAK,CAAC,GAAG,CAACI,KAAK,CAAC,CAAY;QAC7B,CAAC,CAAC,KAAK,EAAEC,KAAK,EAAE,CAAC;YAChBP,MAAM,CAACK,KAAK,CAACE,KAAK,CAACC,IAAI,EAAE,CAAW;YACpCR,MAAM,CAACK,KAAK,CAACE,KAAK,CAACE,OAAO,EAAE,CAAyB;QACtD,CAAC;IACF,CAAC;AACF,CAAC"}