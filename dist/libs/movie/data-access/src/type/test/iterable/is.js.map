{"version":3,"sources":["../../../../../../../../libs/movie/data-access/node_modules/type/test/iterable/is.js"],"sourcesContent":["\"use strict\";\n\nvar assert     = require(\"chai\").assert\n  , isIterable = require(\"../../iterable/is\");\n\ndescribe(\"iterable/is\", function () {\n\tit(\"Should return true on array\", function () { assert.equal(isIterable([]), true); });\n\tit(\"Should return true on arguments\", function () {\n\t\tassert.equal(isIterable((function () { return arguments; })()), true);\n\t});\n\tit(\"Should by default return false on string\", function () {\n\t\tassert.equal(isIterable(\"foo\"), false);\n\t});\n\tit(\"Should accept strings if specified\", function () {\n\t\tassert.equal(isIterable(\"foo\", { allowString: true }), true);\n\t});\n\n\tit(\"Should support denyEmpty option\", function () {\n\t\tassert.equal(isIterable([], { denyEmpty: true }), false);\n\t\tassert.equal(isIterable([null], { denyEmpty: true }), true);\n\t\tassert.equal(isIterable(\"\", { allowString: true, denyEmpty: true }), false);\n\t\tassert.equal(isIterable(\"foo\", { allowString: true, denyEmpty: true }), true);\n\t});\n\n\tif (typeof Set === \"function\") {\n\t\tit(\"Should return true on set\", function () { assert.equal(isIterable(new Set()), true); });\n\t}\n\tif (typeof Map === \"function\") {\n\t\tit(\"Should return true on set\", function () { assert.equal(isIterable(new Map()), true); });\n\t}\n\n\tit(\"Should return false on plain object\", function () { assert.equal(isIterable({}), false); });\n\tit(\"Should return false on function\", function () {\n\t\tassert.equal(isIterable(function () { return true; }), false);\n\t});\n\n\tif (typeof Object.create === \"function\") {\n\t\tit(\"Should return false on object with no prototype\", function () {\n\t\t\tassert.equal(isIterable(Object.create(null)), false);\n\t\t});\n\t}\n\tit(\"Should return false on string\", function () { assert.equal(isIterable(\"foo\"), false); });\n\tit(\"Should return false on empty string\", function () { assert.equal(isIterable(\"\"), false); });\n\tit(\"Should return false on number\", function () { assert.equal(isIterable(123), false); });\n\tit(\"Should return false on NaN\", function () { assert.equal(isIterable(NaN), false); });\n\tit(\"Should return false on boolean\", function () { assert.equal(isIterable(true), false); });\n\tif (typeof Symbol === \"function\") {\n\t\tit(\"Should return false on symbol\", function () {\n\t\t\tassert.equal(isIterable(Symbol(\"foo\")), false);\n\t\t});\n\t}\n\n\tit(\"Should return false on null\", function () { assert.equal(isIterable(null), false); });\n\tit(\"Should return false on undefined\", function () {\n\t\tassert.equal(isIterable(void 0), false);\n\t});\n});\n"],"names":["assert","require","isIterable","describe","it","equal","arguments","allowString","denyEmpty","Set","Map","Object","create","NaN","Symbol"],"mappings":"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"}