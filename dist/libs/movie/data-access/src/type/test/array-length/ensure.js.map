{"version":3,"sources":["../../../../../../../../libs/movie/data-access/node_modules/type/test/array-length/ensure.js"],"sourcesContent":["\"use strict\";\n\nvar assert            = require(\"chai\").assert\n  , ensureArrayLength = require(\"../../array-length/ensure\");\n\ndescribe(\"array-length/ensure\", function () {\n\tit(\"Should return coerced value\", function () {\n\t\tassert.equal(ensureArrayLength(\"12.23\"), 12);\n\t});\n\tit(\"Should crash on no value\", function () {\n\t\ttry {\n\t\t\tensureArrayLength(-20);\n\t\t\tthrow new Error(\"Unexpected\");\n\t\t} catch (error) {\n\t\t\tassert.equal(error.name, \"TypeError\");\n\t\t\tassert.equal(error.message, \"-20 is not a valid array length\");\n\t\t}\n\t});\n});\n"],"names":["assert","require","ensureArrayLength","describe","it","equal","Error","error","name","message"],"mappings":"AAAA,CAAY;AAEZ,GAAG,CAACA,MAAM,GAAcC,OAAO,CAAC,CAAM,OAAED,MAAM,EAC1CE,iBAAiB,GAAGD,OAAO,CAAC,CAA2B;AAE3DE,QAAQ,CAAC,CAAqB,sBAAE,QAAQ,GAAI,CAAC;IAC5CC,EAAE,CAAC,CAA6B,8BAAE,QAAQ,GAAI,CAAC;QAC9CJ,MAAM,CAACK,KAAK,CAACH,iBAAiB,CAAC,CAAO,SAAG,EAAE;IAC5C,CAAC;IACDE,EAAE,CAAC,CAA0B,2BAAE,QAAQ,GAAI,CAAC;QAC3C,GAAG,CAAC,CAAC;YACJF,iBAAiB,EAAE,EAAE;YACrB,KAAK,CAAC,GAAG,CAACI,KAAK,CAAC,CAAY;QAC7B,CAAC,CAAC,KAAK,EAAEC,KAAK,EAAE,CAAC;YAChBP,MAAM,CAACK,KAAK,CAACE,KAAK,CAACC,IAAI,EAAE,CAAW;YACpCR,MAAM,CAACK,KAAK,CAACE,KAAK,CAACE,OAAO,EAAE,CAAiC;QAC9D,CAAC;IACF,CAAC;AACF,CAAC"}