{"version":3,"sources":["../../../../../../../../libs/movie/data-access/node_modules/type/test/natural-number/ensure.js"],"sourcesContent":["\"use strict\";\n\nvar assert              = require(\"chai\").assert\n  , ensureNaturalNumber = require(\"../../natural-number/ensure\");\n\ndescribe(\"natural-number/ensure\", function () {\n\tit(\"Should return coerced value\", function () {\n\t\tassert.equal(ensureNaturalNumber(\"12.23\"), 12);\n\t});\n\tit(\"Should crash on no value\", function () {\n\t\ttry {\n\t\t\tensureNaturalNumber(-20);\n\t\t\tthrow new Error(\"Unexpected\");\n\t\t} catch (error) {\n\t\t\tassert.equal(error.name, \"TypeError\");\n\t\t\tassert.equal(error.message, \"-20 is not a natural number\");\n\t\t}\n\t});\n});\n"],"names":["assert","require","ensureNaturalNumber","describe","it","equal","Error","error","name","message"],"mappings":"AAAA,CAAY;AAEZ,GAAG,CAACA,MAAM,GAAgBC,OAAO,CAAC,CAAM,OAAED,MAAM,EAC5CE,mBAAmB,GAAGD,OAAO,CAAC,CAA6B;AAE/DE,QAAQ,CAAC,CAAuB,wBAAE,QAAQ,GAAI,CAAC;IAC9CC,EAAE,CAAC,CAA6B,8BAAE,QAAQ,GAAI,CAAC;QAC9CJ,MAAM,CAACK,KAAK,CAACH,mBAAmB,CAAC,CAAO,SAAG,EAAE;IAC9C,CAAC;IACDE,EAAE,CAAC,CAA0B,2BAAE,QAAQ,GAAI,CAAC;QAC3C,GAAG,CAAC,CAAC;YACJF,mBAAmB,EAAE,EAAE;YACvB,KAAK,CAAC,GAAG,CAACI,KAAK,CAAC,CAAY;QAC7B,CAAC,CAAC,KAAK,EAAEC,KAAK,EAAE,CAAC;YAChBP,MAAM,CAACK,KAAK,CAACE,KAAK,CAACC,IAAI,EAAE,CAAW;YACpCR,MAAM,CAACK,KAAK,CAACE,KAAK,CAACE,OAAO,EAAE,CAA6B;QAC1D,CAAC;IACF,CAAC;AACF,CAAC"}