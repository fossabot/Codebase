{"version":3,"sources":["../../../../../../../../libs/movie/data-access/node_modules/type/test/promise/ensure.js"],"sourcesContent":["\"use strict\";\n\nvar assert        = require(\"chai\").assert\n  , ensurePromise = require(\"../../promise/ensure\");\n\ndescribe(\"promise/ensure\", function () {\n\tit(\"Should return input value\", function () {\n\t\tvar value = Promise.resolve();\n\t\tassert.equal(ensurePromise(value), value);\n\t});\n\tit(\"Should crash on no value\", function () {\n\t\ttry {\n\t\t\tensurePromise({});\n\t\t\tthrow new Error(\"Unexpected\");\n\t\t} catch (error) {\n\t\t\tassert.equal(error.name, \"TypeError\");\n\t\t\tassert.equal(error.message, \"[object Object] is not a promise\");\n\t\t}\n\t});\n});\n"],"names":["assert","require","ensurePromise","describe","it","value","Promise","resolve","equal","Error","error","name","message"],"mappings":"AAAA,CAAY;AAEZ,GAAG,CAACA,MAAM,GAAUC,OAAO,CAAC,CAAM,OAAED,MAAM,EACtCE,aAAa,GAAGD,OAAO,CAAC,CAAsB;AAElDE,QAAQ,CAAC,CAAgB,iBAAE,QAAQ,GAAI,CAAC;IACvCC,EAAE,CAAC,CAA2B,4BAAE,QAAQ,GAAI,CAAC;QAC5C,GAAG,CAACC,KAAK,GAAGC,OAAO,CAACC,OAAO;QAC3BP,MAAM,CAACQ,KAAK,CAACN,aAAa,CAACG,KAAK,GAAGA,KAAK;IACzC,CAAC;IACDD,EAAE,CAAC,CAA0B,2BAAE,QAAQ,GAAI,CAAC;QAC3C,GAAG,CAAC,CAAC;YACJF,aAAa,CAAC,CAAC,CAAC;YAChB,KAAK,CAAC,GAAG,CAACO,KAAK,CAAC,CAAY;QAC7B,CAAC,CAAC,KAAK,EAAEC,KAAK,EAAE,CAAC;YAChBV,MAAM,CAACQ,KAAK,CAACE,KAAK,CAACC,IAAI,EAAE,CAAW;YACpCX,MAAM,CAACQ,KAAK,CAACE,KAAK,CAACE,OAAO,EAAE,CAAkC;QAC/D,CAAC;IACF,CAAC;AACF,CAAC"}