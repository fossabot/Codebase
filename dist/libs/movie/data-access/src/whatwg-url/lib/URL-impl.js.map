{"version":3,"sources":["../../../../../../../libs/movie/data-access/node_modules/whatwg-url/lib/URL-impl.js"],"sourcesContent":["\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n"],"names":["usm","require","exports","implementation","URLImpl","href","serializeURL","_url","v","parsedURL","basicURLParse","TypeError","origin","serializeURLOrigin","protocol","scheme","url","stateOverride","username","cannotHaveAUsernamePasswordPort","setTheUsername","password","setThePassword","host","port","serializeHost","serializeInteger","cannotBeABaseURL","hostname","pathname","path","length","join","search","query","input","substring","hash","fragment","toJSON","constructorArgs","base","parsedBase","undefined","baseURL"],"mappings":"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"}