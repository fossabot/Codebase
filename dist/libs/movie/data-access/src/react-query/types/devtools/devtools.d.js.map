{"version":3,"sources":["../../../../../../../../libs/movie/data-access/node_modules/react-query/types/devtools/devtools.d.ts"],"sourcesContent":["import React from 'react';\ninterface DevtoolsOptions {\n    /**\n     * Set this true if you want the dev tools to default to being open\n     */\n    initialIsOpen?: boolean;\n    /**\n     * Use this to add props to the panel. For example, you can add className, style (merge and override default style), etc.\n     */\n    panelProps?: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n    /**\n     * Use this to add props to the close button. For example, you can add className, style (merge and override default style), onClick (extend default handler), etc.\n     */\n    closeButtonProps?: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n    /**\n     * Use this to add props to the toggle button. For example, you can add className, style (merge and override default style), onClick (extend default handler), etc.\n     */\n    toggleButtonProps?: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n    /**\n     * The position of the React Query logo to open and close the devtools panel.\n     * Defaults to 'bottom-left'.\n     */\n    position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n    /**\n     * Use this to render the devtools inside a different type of container element for a11y purposes.\n     * Any string which corresponds to a valid intrinsic JSX element is allowed.\n     * Defaults to 'aside'.\n     */\n    containerElement?: string | any;\n}\ninterface DevtoolsPanelOptions {\n    /**\n     * The standard React style object used to style a component with inline styles\n     */\n    style?: React.CSSProperties;\n    /**\n     * The standard React className property used to style a component with classes\n     */\n    className?: string;\n    /**\n     * A boolean variable indicating whether the panel is open or closed\n     */\n    isOpen?: boolean;\n    /**\n     * A function that toggles the open and close state of the panel\n     */\n    setIsOpen: (isOpen: boolean) => void;\n    /**\n     * Handles the opening and closing the devtools panel\n     */\n    handleDragStart: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n}\nexport declare function ReactQueryDevtools({ initialIsOpen, panelProps, closeButtonProps, toggleButtonProps, position, containerElement: Container, }: DevtoolsOptions): React.ReactElement | null;\nexport declare const ReactQueryDevtoolsPanel: React.ForwardRefExoticComponent<DevtoolsPanelOptions & React.RefAttributes<HTMLDivElement>>;\nexport {};\n"],"names":[],"mappings":";AAAkB,GAAO,CAAP,MAAO"}