{"version":3,"sources":["../../../../../../../../libs/movie/data-access/node_modules/react-query/types/core/queriesObserver.d.ts"],"sourcesContent":["import { QueryObserverOptions, QueryObserverResult } from './types';\nimport { QueryClient } from './queryClient';\nimport { NotifyOptions } from './queryObserver';\nimport { Subscribable } from './subscribable';\ndeclare type QueriesObserverListener = (result: QueryObserverResult[]) => void;\nexport declare class QueriesObserver extends Subscribable<QueriesObserverListener> {\n    private client;\n    private result;\n    private queries;\n    private observers;\n    private observersMap;\n    constructor(client: QueryClient, queries?: QueryObserverOptions[]);\n    protected onSubscribe(): void;\n    protected onUnsubscribe(): void;\n    destroy(): void;\n    setQueries(queries: QueryObserverOptions[], notifyOptions?: NotifyOptions): void;\n    getCurrentResult(): QueryObserverResult[];\n    getOptimisticResult(queries: QueryObserverOptions[]): QueryObserverResult[];\n    private findMatchingObservers;\n    private getObserver;\n    private updateObservers;\n    private onUpdate;\n    private notify;\n}\nexport {};\n"],"names":[],"mappings":";AAG6B,GAAgB,CAAhB,aAAgB"}