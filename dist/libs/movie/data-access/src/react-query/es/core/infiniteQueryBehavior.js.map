{"version":3,"sources":["../../../../../../../../libs/movie/data-access/node_modules/react-query/es/core/infiniteQueryBehavior.js"],"sourcesContent":["import { isCancelable } from './retryer';\nimport { getAbortController } from './utils';\nexport function infiniteQueryBehavior() {\n  return {\n    onFetch: function onFetch(context) {\n      context.fetchFn = function () {\n        var _context$fetchOptions, _context$fetchOptions2, _context$fetchOptions3, _context$fetchOptions4, _context$state$data, _context$state$data2;\n\n        var refetchPage = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.refetchPage;\n        var fetchMore = (_context$fetchOptions3 = context.fetchOptions) == null ? void 0 : (_context$fetchOptions4 = _context$fetchOptions3.meta) == null ? void 0 : _context$fetchOptions4.fetchMore;\n        var pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;\n        var isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'forward';\n        var isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'backward';\n        var oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];\n        var oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];\n        var abortController = getAbortController();\n        var abortSignal = abortController == null ? void 0 : abortController.signal;\n        var newPageParams = oldPageParams;\n        var cancelled = false; // Get query function\n\n        var queryFn = context.options.queryFn || function () {\n          return Promise.reject('Missing queryFn');\n        };\n\n        var buildNewPages = function buildNewPages(pages, param, page, previous) {\n          newPageParams = previous ? [param].concat(newPageParams) : [].concat(newPageParams, [param]);\n          return previous ? [page].concat(pages) : [].concat(pages, [page]);\n        }; // Create function to fetch a page\n\n\n        var fetchPage = function fetchPage(pages, manual, param, previous) {\n          if (cancelled) {\n            return Promise.reject('Cancelled');\n          }\n\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages);\n          }\n\n          var queryFnContext = {\n            queryKey: context.queryKey,\n            signal: abortSignal,\n            pageParam: param,\n            meta: context.meta\n          };\n          var queryFnResult = queryFn(queryFnContext);\n          var promise = Promise.resolve(queryFnResult).then(function (page) {\n            return buildNewPages(pages, param, page, previous);\n          });\n\n          if (isCancelable(queryFnResult)) {\n            var promiseAsAny = promise;\n            promiseAsAny.cancel = queryFnResult.cancel;\n          }\n\n          return promise;\n        };\n\n        var promise; // Fetch first page?\n\n        if (!oldPages.length) {\n          promise = fetchPage([]);\n        } // Fetch next page?\n        else if (isFetchingNextPage) {\n            var manual = typeof pageParam !== 'undefined';\n            var param = manual ? pageParam : getNextPageParam(context.options, oldPages);\n            promise = fetchPage(oldPages, manual, param);\n          } // Fetch previous page?\n          else if (isFetchingPreviousPage) {\n              var _manual = typeof pageParam !== 'undefined';\n\n              var _param = _manual ? pageParam : getPreviousPageParam(context.options, oldPages);\n\n              promise = fetchPage(oldPages, _manual, _param, true);\n            } // Refetch pages\n            else {\n                (function () {\n                  newPageParams = [];\n                  var manual = typeof context.options.getNextPageParam === 'undefined';\n                  var shouldFetchFirstPage = refetchPage && oldPages[0] ? refetchPage(oldPages[0], 0, oldPages) : true; // Fetch first page\n\n                  promise = shouldFetchFirstPage ? fetchPage([], manual, oldPageParams[0]) : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0])); // Fetch remaining pages\n\n                  var _loop = function _loop(i) {\n                    promise = promise.then(function (pages) {\n                      var shouldFetchNextPage = refetchPage && oldPages[i] ? refetchPage(oldPages[i], i, oldPages) : true;\n\n                      if (shouldFetchNextPage) {\n                        var _param2 = manual ? oldPageParams[i] : getNextPageParam(context.options, pages);\n\n                        return fetchPage(pages, manual, _param2);\n                      }\n\n                      return Promise.resolve(buildNewPages(pages, oldPageParams[i], oldPages[i]));\n                    });\n                  };\n\n                  for (var i = 1; i < oldPages.length; i++) {\n                    _loop(i);\n                  }\n                })();\n              }\n\n        var finalPromise = promise.then(function (pages) {\n          return {\n            pages: pages,\n            pageParams: newPageParams\n          };\n        });\n        var finalPromiseAsAny = finalPromise;\n\n        finalPromiseAsAny.cancel = function () {\n          cancelled = true;\n          abortController == null ? void 0 : abortController.abort();\n\n          if (isCancelable(promise)) {\n            promise.cancel();\n          }\n        };\n\n        return finalPromise;\n      };\n    }\n  };\n}\nexport function getNextPageParam(options, pages) {\n  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);\n}\nexport function getPreviousPageParam(options, pages) {\n  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);\n}\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\n\nexport function hasNextPage(options, pages) {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    var nextPageParam = getNextPageParam(options, pages);\n    return typeof nextPageParam !== 'undefined' && nextPageParam !== null && nextPageParam !== false;\n  }\n}\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\n\nexport function hasPreviousPage(options, pages) {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    var previousPageParam = getPreviousPageParam(options, pages);\n    return typeof previousPageParam !== 'undefined' && previousPageParam !== null && previousPageParam !== false;\n  }\n}"],"names":["infiniteQueryBehavior","getNextPageParam","getPreviousPageParam","hasNextPage","hasPreviousPage","onFetch","context","fetchFn","_context$fetchOptions","_context$fetchOptions2","_context$fetchOptions3","_context$fetchOptions4","_context$state$data","_context$state$data2","refetchPage","fetchOptions","meta","fetchMore","pageParam","isFetchingNextPage","direction","isFetchingPreviousPage","oldPages","state","data","pages","oldPageParams","pageParams","abortController","getAbortController","abortSignal","signal","newPageParams","cancelled","queryFn","options","Promise","reject","buildNewPages","param","page","previous","concat","fetchPage","manual","length","resolve","queryFnContext","queryKey","queryFnResult","promise","then","isCancelable","promiseAsAny","cancel","_manual","_param","shouldFetchFirstPage","_loop","i","shouldFetchNextPage","_param2","finalPromise","finalPromiseAsAny","abort","Array","isArray","nextPageParam","previousPageParam"],"mappings":"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"}