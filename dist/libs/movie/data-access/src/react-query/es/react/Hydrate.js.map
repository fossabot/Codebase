{"version":3,"sources":["../../../../../../../../libs/movie/data-access/node_modules/react-query/es/react/Hydrate.js"],"sourcesContent":["import React from 'react';\nimport { hydrate } from '../core';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useHydrate(state, options) {\n  var queryClient = useQueryClient();\n  var optionsRef = React.useRef(options);\n  optionsRef.current = options; // Running hydrate again with the same queries is safe,\n  // it wont overwrite or initialize existing queries,\n  // relying on useMemo here is only a performance optimization.\n  // hydrate can and should be run *during* render here for SSR to work properly\n\n  React.useMemo(function () {\n    if (state) {\n      hydrate(queryClient, state, optionsRef.current);\n    }\n  }, [queryClient, state]);\n}\nexport var Hydrate = function Hydrate(_ref) {\n  var children = _ref.children,\n      options = _ref.options,\n      state = _ref.state;\n  useHydrate(state, options);\n  return children;\n};"],"names":["useHydrate","state","options","queryClient","useQueryClient","optionsRef","React","useRef","current","useMemo","hydrate","Hydrate","_ref","children"],"mappings":";QAGgBA,UAAU,GAAVA,UAAU;;AAHR,GAAO,CAAP,MAAO;AACD,GAAS,CAAT,KAAS;AACF,GAAuB,CAAvB,oBAAuB;SACtCA,UAAU,CAACC,KAAK,EAAEC,OAAO,EAAE,CAAC;IAC1C,GAAG,CAACC,WAAW,OAAGC,oBAAc;IAChC,GAAG,CAACC,UAAU,GAAGC,MAAK,SAACC,MAAM,CAACL,OAAO;IACrCG,UAAU,CAACG,OAAO,GAAGN,OAAO,CAAE,CAAuD,AAAvD,EAAuD,AAAvD,qDAAuD;IACrF,EAAoD,AAApD,kDAAoD;IACpD,EAA8D,AAA9D,4DAA8D;IAC9D,EAA8E,AAA9E,4EAA8E;IAE9EI,MAAK,SAACG,OAAO,CAAC,QAAQ,GAAI,CAAC;QACzB,EAAE,EAAER,KAAK,EAAE,CAAC;gBACVS,KAAO,UAACP,WAAW,EAAEF,KAAK,EAAEI,UAAU,CAACG,OAAO;QAChD,CAAC;IACH,CAAC,EAAE,CAACL;QAAAA,WAAW;QAAEF,KAAK;IAAA,CAAC;AACzB,CAAC;AACM,GAAG,CAACU,OAAO,GAAG,QAAQ,CAACA,OAAO,CAACC,IAAI,EAAE,CAAC;IAC3C,GAAG,CAACC,QAAQ,GAAGD,IAAI,CAACC,QAAQ,EACxBX,OAAO,GAAGU,IAAI,CAACV,OAAO,EACtBD,KAAK,GAAGW,IAAI,CAACX,KAAK;IACtBD,UAAU,CAACC,KAAK,EAAEC,OAAO;IACzB,MAAM,CAACW,QAAQ;AACjB,CAAC;QANUF,OAAO,GAAPA,OAAO"}