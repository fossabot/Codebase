"use strict";
!function(e, n) {
    "object" == typeof exports && "undefined" != typeof module ? n(exports) : "function" == typeof define && define.amd ? define([
        "exports"
    ], n) : n((e = e || self).ReactQueryBroadcastQueryClientExperimental = {});
}(void 0, function(e1) {
    "use strict";
    function n2(e) {
        return e || (e = 0), new Promise(function(n) {
            return setTimeout(n, e);
        });
    }
    function t1() {
        return Math.random().toString(36).substring(2);
    }
    var r1 = 0, o1 = 0;
    function s1() {
        var e = (new Date).getTime();
        return e === r1 ? 1000 * e + ++o1 : (r1 = e, o1 = 0, 1000 * e);
    }
    var i1 = "[object process]" === Object.prototype.toString.call("undefined" != typeof process ? process : 0);
    var a1 = {
        create: function(e2) {
            var n = {
                messagesCallback: null,
                bc: new BroadcastChannel(e2),
                subFns: []
            };
            return n.bc.onmessage = function(e) {
                n.messagesCallback && n.messagesCallback(e.data);
            }, n;
        },
        close: function(e) {
            e.bc.close(), e.subFns = [];
        },
        onMessage: function(e, n) {
            e.messagesCallback = n;
        },
        postMessage: function(e, n) {
            e.bc.postMessage(n, !1);
        },
        canBeUsed: function() {
            if (i1 && "undefined" == typeof window) return !1;
            if ("function" == typeof BroadcastChannel) {
                if (BroadcastChannel._pubkey) throw new Error("BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill");
                return !0;
            }
            return !1;
        },
        type: "native",
        averageResponseTime: function() {
            return 150;
        },
        microSeconds: s1
    }, u1 = function(e) {
        var n = new Set, t = new Map;
        this.has = n.has.bind(n), this.add = function(r2) {
            t.set(r2, c()), n.add(r2), (function() {
                var r = c() - e, o = n[Symbol.iterator]();
                for(;;){
                    var s = o.next().value;
                    if (!s) return;
                    if (!(t.get(s) < r)) return;
                    t.delete(s), n.delete(s);
                }
            })();
        }, this.clear = function() {
            n.clear(), t.clear();
        };
    };
    function c() {
        return (new Date).getTime();
    }
    function d() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, n = JSON.parse(JSON.stringify(e));
        return void 0 === n.webWorkerSupport && (n.webWorkerSupport = !0), n.idb || (n.idb = {}), n.idb.ttl || (n.idb.ttl = 45000), n.idb.fallbackInterval || (n.idb.fallbackInterval = 150), e.idb && "function" == typeof e.idb.onclose && (n.idb.onclose = e.idb.onclose), n.localstorage || (n.localstorage = {}), n.localstorage.removeTimeout || (n.localstorage.removeTimeout = 60000), e.methods && (n.methods = e.methods), n.node || (n.node = {}), n.node.ttl || (n.node.ttl = 120000), void 0 === n.node.useFastPath && (n.node.useFastPath = !0), n;
    }
    function l() {
        if ("undefined" != typeof indexedDB) return indexedDB;
        if ("undefined" != typeof window) {
            if (void 0 !== window.mozIndexedDB) return window.mozIndexedDB;
            if (void 0 !== window.webkitIndexedDB) return window.webkitIndexedDB;
            if (void 0 !== window.msIndexedDB) return window.msIndexedDB;
        }
        return !1;
    }
    function f(e3, n) {
        var t2 = e3.transaction("messages").objectStore("messages"), r = [];
        return new Promise(function(e4) {
            (function() {
                try {
                    var e = IDBKeyRange.bound(n + 1, 1 / 0);
                    return t2.openCursor(e);
                } catch (e) {
                    return t2.openCursor();
                }
            })().onsuccess = function(t) {
                var o = t.target.result;
                o ? o.value.id < n + 1 ? o.continue(n + 1) : (r.push(o.value), o.continue()) : e4(r);
            };
        });
    }
    function m(e5, n3) {
        return (function(e6, n4) {
            var t = (new Date).getTime() - n4, r3 = e6.transaction("messages").objectStore("messages"), o = [];
            return new Promise(function(e) {
                r3.openCursor().onsuccess = function(n) {
                    var r = n.target.result;
                    if (r) {
                        var s = r.value;
                        if (!(s.time < t)) return void e(o);
                        o.push(s), r.continue();
                    } else e(o);
                };
            });
        })(e5, n3).then(function(n5) {
            return Promise.all(n5.map(function(n6) {
                return (function(e7, n) {
                    var t = e7.transaction([
                        "messages"
                    ], "readwrite").objectStore("messages").delete(n);
                    return new Promise(function(e) {
                        t.onsuccess = function() {
                            return e();
                        };
                    });
                })(e5, n6.id);
            }));
        });
    }
    function h(e8) {
        return e8.closed ? Promise.resolve() : e8.messagesCallback ? f(e8.db, e8.lastCursorId).then(function(n7) {
            return n7.filter(function(e) {
                return !!e;
            }).map(function(n) {
                return n.id > e8.lastCursorId && (e8.lastCursorId = n.id), n;
            }).filter(function(n8) {
                return (function(e, n) {
                    return e.uuid !== n.uuid && !n.eMIs.has(e.id) && !(e.data.time < n.messagesCallbackTime);
                })(n8, e8);
            }).sort(function(e, n) {
                return e.time - n.time;
            }).forEach(function(n) {
                e8.messagesCallback && (e8.eMIs.add(n.id), e8.messagesCallback(n.data));
            }), Promise.resolve();
        }) : Promise.resolve();
    }
    var p = {
        create: function(e9, r) {
            return r = d(r), (function(e10) {
                var n9 = "pubkey.broadcast-channel-0-" + e10, t = l().open(n9, 1);
                return t.onupgradeneeded = function(e) {
                    e.target.result.createObjectStore("messages", {
                        keyPath: "id",
                        autoIncrement: !0
                    });
                }, new Promise(function(e11, n) {
                    t.onerror = function(e) {
                        return n(e);
                    }, t.onsuccess = function() {
                        e11(t.result);
                    };
                });
            })(e9).then(function(o) {
                var s = {
                    closed: !1,
                    lastCursorId: 0,
                    channelName: e9,
                    options: r,
                    uuid: t1(),
                    eMIs: new u1(2 * r.idb.ttl),
                    writeBlockPromise: Promise.resolve(),
                    messagesCallback: null,
                    readQueuePromises: [],
                    db: o
                };
                return o.onclose = function() {
                    s.closed = !0, r.idb.onclose && r.idb.onclose();
                }, (function e(t) {
                    if (t.closed) return;
                    h(t).then(function() {
                        return n2(t.options.idb.fallbackInterval);
                    }).then(function() {
                        return e(t);
                    });
                })(s), s;
            });
        },
        close: function(e) {
            e.closed = !0, e.db.close();
        },
        onMessage: function(e, n, t) {
            e.messagesCallbackTime = t, e.messagesCallback = n, h(e);
        },
        postMessage: function(e12, n10) {
            return e12.writeBlockPromise = e12.writeBlockPromise.then(function() {
                return (function(e13, n11, t) {
                    var r = {
                        uuid: n11,
                        time: (new Date).getTime(),
                        data: t
                    }, o = e13.transaction([
                        "messages"
                    ], "readwrite");
                    return new Promise(function(e14, n) {
                        o.oncomplete = function() {
                            return e14();
                        }, o.onerror = function(e) {
                            return n(e);
                        }, o.objectStore("messages").add(r);
                    });
                })(e12.db, e12.uuid, n10);
            }).then(function() {
                var n, t;
                0 === (n = 0, t = 10, Math.floor(Math.random() * (t - n + 1) + n)) && m(e12.db, e12.options.idb.ttl);
            }), e12.writeBlockPromise;
        },
        canBeUsed: function() {
            return !i1 && !!l();
        },
        type: "idb",
        averageResponseTime: function(e) {
            return 2 * e.idb.fallbackInterval;
        },
        microSeconds: s1
    };
    function v() {
        var e;
        if ("undefined" == typeof window) return null;
        try {
            e = window.localStorage, e = window["ie8-eventlistener/storage"] || window.localStorage;
        } catch (e15) {}
        return e;
    }
    function g(e) {
        return "pubkey.broadcastChannel-" + e;
    }
    function b() {
        if (i1) return !1;
        var e = v();
        if (!e) return !1;
        try {
            var n = "__broadcastchannel_check";
            e.setItem(n, "works"), e.removeItem(n);
        } catch (e16) {
            return !1;
        }
        return !0;
    }
    var y = {
        create: function(e17, n12) {
            if (n12 = d(n12), !b()) throw new Error("BroadcastChannel: localstorage cannot be used");
            var r4 = t1(), o = new u1(n12.localstorage.removeTimeout), s = {
                channelName: e17,
                uuid: r4,
                eMIs: o
            };
            return s.listener = (function(e18, n) {
                var t = g(e18), r = function(e) {
                    e.key === t && n(JSON.parse(e.newValue));
                };
                return window.addEventListener("storage", r), r;
            })(e17, function(e) {
                s.messagesCallback && e.uuid !== r4 && e.token && !o.has(e.token) && (e.data.time && e.data.time < s.messagesCallbackTime || (o.add(e.token), s.messagesCallback(e.data)));
            }), s;
        },
        close: function(e) {
            var n;
            n = e.listener, window.removeEventListener("storage", n);
        },
        onMessage: function(e, n, t) {
            e.messagesCallbackTime = t, e.messagesCallback = n;
        },
        postMessage: function(e, r) {
            return new Promise(function(o) {
                n2().then(function() {
                    var n = g(e.channelName), s = {
                        token: t1(),
                        time: (new Date).getTime(),
                        data: r,
                        uuid: e.uuid
                    }, i = JSON.stringify(s);
                    v().setItem(n, i);
                    var a = document.createEvent("Event");
                    a.initEvent("storage", !0, !0), a.key = n, a.newValue = i, window.dispatchEvent(a), o();
                });
            });
        },
        canBeUsed: b,
        type: "localstorage",
        averageResponseTime: function() {
            var e = navigator.userAgent.toLowerCase();
            return e.includes("safari") && !e.includes("chrome") ? 240 : 120;
        },
        microSeconds: s1
    }, w = s1, k = new Set;
    var C = {
        create: function(e) {
            var n = {
                name: e,
                messagesCallback: null
            };
            return k.add(n), n;
        },
        close: function(e) {
            k.delete(e);
        },
        onMessage: function(e, n) {
            e.messagesCallback = n;
        },
        postMessage: function(e19, n13) {
            return new Promise(function(t) {
                return setTimeout(function() {
                    Array.from(k).filter(function(n) {
                        return n.name === e19.name;
                    }).filter(function(n) {
                        return n !== e19;
                    }).filter(function(e) {
                        return !!e.messagesCallback;
                    }).forEach(function(e) {
                        return e.messagesCallback(n13);
                    }), t();
                }, 5);
            });
        },
        canBeUsed: function() {
            return !0;
        },
        type: "simulate",
        averageResponseTime: function() {
            return 5;
        },
        microSeconds: w
    }, _ = [
        a1,
        p,
        y
    ];
    if (i1) {
        var P = require("../../src/methods/node.js");
        "function" == typeof P.canBeUsed && _.push(P);
    }
    var M = function(e20, n14) {
        var t3, r5, o;
        this.name = e20, this.options = d(n14), this.method = (function(e21) {
            var n15 = [].concat(e21.methods, _).filter(Boolean);
            if (e21.type) {
                if ("simulate" === e21.type) return C;
                var t = n15.find(function(n) {
                    return n.type === e21.type;
                });
                if (t) return t;
                throw new Error("method-type " + e21.type + " not found");
            }
            e21.webWorkerSupport || i1 || (n15 = n15.filter(function(e) {
                return "idb" !== e.type;
            }));
            var r = n15.find(function(e) {
                return e.canBeUsed();
            });
            if (r) return r;
            throw new Error("No useable methode found:" + JSON.stringify(_.map(function(e) {
                return e.type;
            })));
        })(this.options), this._iL = !1, this._onML = null, this._addEL = {
            message: [],
            internal: []
        }, this._befC = [], this._prepP = null, r5 = (t3 = this).method.create(t3.name, t3.options), (o = r5) && "function" == typeof o.then ? (t3._prepP = r5, r5.then(function(e) {
            t3._state = e;
        })) : t3._state = r5;
    };
    function S(e, n, t) {
        var r = {
            time: e.method.microSeconds(),
            type: n,
            data: t
        };
        return (e._prepP ? e._prepP : Promise.resolve()).then(function() {
            return e.method.postMessage(e._state, r);
        });
    }
    function B(e) {
        return e._addEL.message.length > 0 || e._addEL.internal.length > 0;
    }
    function E(e22, n16, t4) {
        e22._addEL[n16].push(t4), (function(e23) {
            if (!e23._iL && B(e23)) {
                var n17 = function(n) {
                    e23._addEL[n.type].forEach(function(e) {
                        n.time >= e.time && e.fn(n.data);
                    });
                }, t = e23.method.microSeconds();
                e23._prepP ? e23._prepP.then(function() {
                    e23._iL = !0, e23.method.onMessage(e23._state, n17, t);
                }) : (e23._iL = !0, e23.method.onMessage(e23._state, n17, t));
            }
        })(e22);
    }
    function L(e24, n19, t) {
        e24._addEL[n19] = e24._addEL[n19].filter(function(e) {
            return e !== t;
        }), (function(e) {
            if (e._iL && !B(e)) {
                e._iL = !1;
                var n = e.method.microSeconds();
                e.method.onMessage(e._state, null, n);
            }
        })(e24);
    }
    M._pubkey = !0, M.prototype = {
        postMessage: function(e) {
            if (this.closed) throw new Error("BroadcastChannel.postMessage(): Cannot post message after channel has closed");
            return S(this, "message", e);
        },
        postInternal: function(e) {
            return S(this, "internal", e);
        },
        set onmessage (e){
            var n1 = {
                time: this.method.microSeconds(),
                fn: e
            };
            L(this, "message", this._onML), e && "function" == typeof e ? (this._onML = n1, E(this, "message", n1)) : this._onML = null;
        },
        addEventListener: function(e, n) {
            E(this, e, {
                time: this.method.microSeconds(),
                fn: n
            });
        },
        removeEventListener: function(e25, n) {
            L(this, e25, this._addEL[e25].find(function(e) {
                return e.fn === n;
            }));
        },
        close: function() {
            var e26 = this;
            if (!this.closed) {
                this.closed = !0;
                var n = this._prepP ? this._prepP : Promise.resolve();
                return this._onML = null, this._addEL.message = [], n.then(function() {
                    return Promise.all(e26._befC.map(function(e) {
                        return e();
                    }));
                }).then(function() {
                    return e26.method.close(e26._state);
                });
            }
        },
        get type () {
            return this.method.type;
        }
    }, e1.broadcastQueryClient = function(e27) {
        var n20 = e27.queryClient, t5 = e27.broadcastChannel, r6 = !1, o2 = new M(void 0 === t5 ? "react-query" : t5, {
            webWorkerSupport: !1
        }), s2 = n20.getQueryCache();
        n20.getQueryCache().subscribe(function(e) {
            var n;
            if (!r6 && (null == e ? void 0 : e.query)) {
                var t = e.query, s = t.queryHash, i = t.queryKey, a = t.state;
                "queryUpdated" === e.type && "success" === (null == (n = e.action) ? void 0 : n.type) && o2.postMessage({
                    type: "queryUpdated",
                    queryHash: s,
                    queryKey: i,
                    state: a
                }), "queryRemoved" === e.type && o2.postMessage({
                    type: "queryRemoved",
                    queryHash: s,
                    queryKey: i
                });
            }
        }), o2.onmessage = function(e) {
            (null == e ? void 0 : e.type) && (r6 = !0, (function() {
                var t = e.type, r = e.queryHash, o = e.queryKey, i = e.state;
                if ("queryUpdated" === t) {
                    var a = s2.get(r);
                    if (a) return void a.setState(i);
                    s2.build(n20, {
                        queryKey: o,
                        queryHash: r
                    }, i);
                } else if ("queryRemoved" === t) {
                    var u = s2.get(r);
                    u && s2.remove(u);
                }
            })(), r6 = !1);
        };
    }, Object.defineProperty(e1, "__esModule", {
        value: !0
    });
}); //# sourceMappingURL=broadcastQueryClient-experimental.production.min.js.map

//# sourceMappingURL=broadcastQueryClient-experimental.production.min.js.map