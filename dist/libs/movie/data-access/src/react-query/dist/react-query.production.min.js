"use strict";
!function(t, e) {
    "object" == typeof exports && "undefined" != typeof module ? e(exports, require("react")) : "function" == typeof define && define.amd ? define([
        "exports",
        "react"
    ], e) : e((t = t || self).ReactQuery = {}, t.React);
}(void 0, function(t1, e1) {
    "use strict";
    var n1 = "default" in e1 ? e1.default : e1;
    function r1(t, e) {
        t.prototype = Object.create(e.prototype), t.prototype.constructor = t, t.__proto__ = e;
    }
    var i1 = function() {
        function t2() {
            this.listeners = [];
        }
        var e2 = t2.prototype;
        return e2.subscribe = function(t3) {
            var e = this, n = t3 || function() {};
            return this.listeners.push(n), this.onSubscribe(), function() {
                e.listeners = e.listeners.filter(function(t) {
                    return t !== n;
                }), e.onUnsubscribe();
            };
        }, e2.hasListeners = function() {
            return this.listeners.length > 0;
        }, e2.onSubscribe = function() {}, e2.onUnsubscribe = function() {}, t2;
    }();
    function u1() {
        return (u1 = Object.assign || function(t) {
            for(var e = 1; e < arguments.length; e++){
                var n = arguments[e];
                for(var r in n)Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
            }
            return t;
        }).apply(this, arguments);
    }
    var s1 = "undefined" == typeof window;
    function o1() {}
    function a1(t) {
        return "number" == typeof t && t >= 0 && t !== 1 / 0;
    }
    function c1(t) {
        return Array.isArray(t) ? t : [
            t
        ];
    }
    function l1(t4, e) {
        return t4.filter(function(t) {
            return -1 === e.indexOf(t);
        });
    }
    function h1(t, e) {
        return Math.max(t + (e || 0) - Date.now(), 0);
    }
    function f1(t, e, n) {
        return R1(t) ? "function" == typeof e ? u1({}, n, {
            queryKey: t,
            queryFn: e
        }) : u1({}, e, {
            queryKey: t
        }) : t;
    }
    function d1(t, e, n) {
        return R1(t) ? [
            u1({}, e, {
                queryKey: t
            }),
            n
        ] : [
            t || {},
            e
        ];
    }
    function v1(t5, e3) {
        var n = t5.active, r = t5.exact, i = t5.fetching, u = t5.inactive, s = t5.predicate, o = t5.queryKey, a = t5.stale;
        if (R1(o)) {
            if (r) {
                if (e3.queryHash !== y1(o, e3.options)) return !1;
            } else if (!b1(e3.queryKey, o)) return !1;
        }
        var c = function(t, e) {
            return !0 === t && !0 === e || null == t && null == e ? "all" : !1 === t && !1 === e ? "none" : (null != t ? t : !e) ? "active" : "inactive";
        }(n, u);
        if ("none" === c) return !1;
        if ("all" !== c) {
            var l = e3.isActive();
            if ("active" === c && !l) return !1;
            if ("inactive" === c && l) return !1;
        }
        return ("boolean" != typeof a || e3.isStale() === a) && ("boolean" != typeof i || e3.isFetching() === i) && !(s && !s(e3));
    }
    function p1(t, e) {
        var n = t.exact, r = t.fetching, i = t.predicate, u = t.mutationKey;
        if (R1(u)) {
            if (!e.options.mutationKey) return !1;
            if (n) {
                if (m1(e.options.mutationKey) !== m1(u)) return !1;
            } else if (!b1(e.options.mutationKey, u)) return !1;
        }
        return ("boolean" != typeof r || "loading" === e.state.status === r) && !(i && !i(e));
    }
    function y1(t, e) {
        return ((null == e ? void 0 : e.queryKeyHashFn) || m1)(t);
    }
    function m1(t6) {
        var e4, n2 = c1(t6);
        return e4 = n2, JSON.stringify(e4, function(t7, e) {
            return O1(e) ? Object.keys(e).sort().reduce(function(t, n) {
                return t[n] = e[n], t;
            }, {}) : e;
        });
    }
    function b1(t8, e5) {
        return (function t(e, n) {
            if (e === n) return !0;
            if (typeof e != typeof n) return !1;
            if (e && n && "object" == typeof e && "object" == typeof n) return !Object.keys(n).some(function(r) {
                return !t(e[r], n[r]);
            });
            return !1;
        })(c1(t8), c1(e5));
    }
    function g1(t, e) {
        if (t === e) return t;
        var n = Array.isArray(t) && Array.isArray(e);
        if (n || O1(t) && O1(e)) {
            for(var r = n ? t.length : Object.keys(t).length, i = n ? e : Object.keys(e), u = i.length, s = n ? [] : {}, o = 0, a = 0; a < u; a++){
                var c = n ? a : i[a];
                s[c] = g1(t[c], e[c]), s[c] === t[c] && o++;
            }
            return r === u && o === r ? t : s;
        }
        return e;
    }
    function O1(t) {
        if (!C1(t)) return !1;
        var e = t.constructor;
        if (void 0 === e) return !0;
        var n = e.prototype;
        return !!C1(n) && !!n.hasOwnProperty("isPrototypeOf");
    }
    function C1(t) {
        return "[object Object]" === Object.prototype.toString.call(t);
    }
    function R1(t) {
        return "string" == typeof t || Array.isArray(t);
    }
    function P1(t9) {
        Promise.resolve().then(t9).catch(function(t) {
            return setTimeout(function() {
                throw t;
            });
        });
    }
    function q1() {
        if ("function" == typeof AbortController) return new AbortController;
    }
    var S1 = new (function(t10) {
        function e6() {
            var e7;
            return (e7 = t10.call(this) || this).setup = function(t) {
                var e;
                if (!s1 && (null == (e = window) ? void 0 : e.addEventListener)) {
                    var n = function() {
                        return t();
                    };
                    return window.addEventListener("visibilitychange", n, !1), window.addEventListener("focus", n, !1), function() {
                        window.removeEventListener("visibilitychange", n), window.removeEventListener("focus", n);
                    };
                }
            }, e7;
        }
        r1(e6, t10);
        var n3 = e6.prototype;
        return n3.onSubscribe = function() {
            this.cleanup || this.setEventListener(this.setup);
        }, n3.onUnsubscribe = function() {
            var t;
            this.hasListeners() || (null == (t = this.cleanup) || t.call(this), this.cleanup = void 0);
        }, n3.setEventListener = function(t11) {
            var e, n = this;
            this.setup = t11, null == (e = this.cleanup) || e.call(this), this.cleanup = t11(function(t) {
                "boolean" == typeof t ? n.setFocused(t) : n.onFocus();
            });
        }, n3.setFocused = function(t) {
            this.focused = t, t && this.onFocus();
        }, n3.onFocus = function() {
            this.listeners.forEach(function(t) {
                t();
            });
        }, n3.isFocused = function() {
            return "boolean" == typeof this.focused ? this.focused : "undefined" == typeof document || [
                void 0,
                "visible",
                "prerender"
            ].includes(document.visibilityState);
        }, e6;
    }(i1)), Q1 = new (function(t12) {
        function e8() {
            var e9;
            return (e9 = t12.call(this) || this).setup = function(t) {
                var e;
                if (!s1 && (null == (e = window) ? void 0 : e.addEventListener)) {
                    var n = function() {
                        return t();
                    };
                    return window.addEventListener("online", n, !1), window.addEventListener("offline", n, !1), function() {
                        window.removeEventListener("online", n), window.removeEventListener("offline", n);
                    };
                }
            }, e9;
        }
        r1(e8, t12);
        var n4 = e8.prototype;
        return n4.onSubscribe = function() {
            this.cleanup || this.setEventListener(this.setup);
        }, n4.onUnsubscribe = function() {
            var t;
            this.hasListeners() || (null == (t = this.cleanup) || t.call(this), this.cleanup = void 0);
        }, n4.setEventListener = function(t13) {
            var e, n = this;
            this.setup = t13, null == (e = this.cleanup) || e.call(this), this.cleanup = t13(function(t) {
                "boolean" == typeof t ? n.setOnline(t) : n.onOnline();
            });
        }, n4.setOnline = function(t) {
            this.online = t, t && this.onOnline();
        }, n4.onOnline = function() {
            this.listeners.forEach(function(t) {
                t();
            });
        }, n4.isOnline = function() {
            return "boolean" == typeof this.online ? this.online : "undefined" == typeof navigator || void 0 === navigator.onLine || navigator.onLine;
        }, e8;
    }(i1));
    function E1(t) {
        return Math.min(1000 * Math.pow(2, t), 30000);
    }
    function F(t) {
        return "function" == typeof (null == t ? void 0 : t.cancel);
    }
    var M = function(t) {
        this.revert = null == t ? void 0 : t.revert, this.silent = null == t ? void 0 : t.silent;
    };
    function w(t) {
        return t instanceof M;
    }
    var x = function(t14) {
        var e10, n, r2, i2, u = this, s = !1;
        this.abort = t14.abort, this.cancel = function(t) {
            return null == e10 ? void 0 : e10(t);
        }, this.cancelRetry = function() {
            s = !0;
        }, this.continueRetry = function() {
            s = !1;
        }, this.continue = function() {
            return null == n ? void 0 : n();
        }, this.failureCount = 0, this.isPaused = !1, this.isResolved = !1, this.isTransportCancelable = !1, this.promise = new Promise(function(t, e) {
            r2 = t, i2 = e;
        });
        var o2 = function(e) {
            u.isResolved || (u.isResolved = !0, null == t14.onSuccess || t14.onSuccess(e), null == n || n(), r2(e));
        }, a = function(e) {
            u.isResolved || (u.isResolved = !0, null == t14.onError || t14.onError(e), null == n || n(), i2(e));
        };
        !function r() {
            if (!u.isResolved) {
                var i3;
                try {
                    i3 = t14.fn();
                } catch (t15) {
                    i3 = Promise.reject(t15);
                }
                e10 = function(t) {
                    if (!u.isResolved && (a(new M(t)), null == u.abort || u.abort(), F(i3))) try {
                        i3.cancel();
                    } catch (t17) {}
                }, u.isTransportCancelable = F(i3), Promise.resolve(i3).then(o2).catch(function(e11) {
                    var i, o;
                    if (!u.isResolved) {
                        var c, l = null != (i = t14.retry) ? i : 3, h = null != (o = t14.retryDelay) ? o : E1, f = "function" == typeof h ? h(u.failureCount, e11) : h, d = !0 === l || "number" == typeof l && u.failureCount < l || "function" == typeof l && l(u.failureCount, e11);
                        if (!s && d) u.failureCount++, null == t14.onFail || t14.onFail(u.failureCount, e11), (c = f, new Promise(function(t) {
                            setTimeout(t, c);
                        })).then(function() {
                            if (!S1.isFocused() || !Q1.isOnline()) return new Promise(function(e) {
                                n = e, u.isPaused = !0, null == t14.onPause || t14.onPause();
                            }).then(function() {
                                n = void 0, u.isPaused = !1, null == t14.onContinue || t14.onContinue();
                            });
                        }).then(function() {
                            s ? a(e11) : r();
                        });
                        else a(e11);
                    }
                });
            }
        }();
    }, A = new (function() {
        function t18() {
            this.queue = [], this.transactions = 0, this.notifyFn = function(t) {
                t();
            }, this.batchNotifyFn = function(t) {
                t();
            };
        }
        var e12 = t18.prototype;
        return e12.batch = function(t) {
            var e;
            this.transactions++;
            try {
                e = t();
            } finally{
                this.transactions--, this.transactions || this.flush();
            }
            return e;
        }, e12.schedule = function(t) {
            var e = this;
            this.transactions ? this.queue.push(t) : P1(function() {
                e.notifyFn(t);
            });
        }, e12.batchCalls = function(t) {
            var e = this;
            return function() {
                for(var n = arguments.length, r = new Array(n), i = 0; i < n; i++)r[i] = arguments[i];
                e.schedule(function() {
                    t.apply(void 0, r);
                });
            };
        }, e12.flush = function() {
            var t = this, e13 = this.queue;
            this.queue = [], e13.length && P1(function() {
                t.batchNotifyFn(function() {
                    e13.forEach(function(e) {
                        t.notifyFn(e);
                    });
                });
            });
        }, e12.setNotifyFunction = function(t) {
            this.notifyFn = t;
        }, e12.setBatchNotifyFunction = function(t) {
            this.batchNotifyFn = t;
        }, t18;
    }()), D = console;
    function U() {
        return D;
    }
    var I = function() {
        function t19(t) {
            this.abortSignalConsumed = !1, this.hadObservers = !1, this.defaultOptions = t.defaultOptions, this.setOptions(t.options), this.observers = [], this.cache = t.cache, this.queryKey = t.queryKey, this.queryHash = t.queryHash, this.initialState = t.state || this.getDefaultState(this.options), this.state = this.initialState, this.meta = t.meta, this.scheduleGc();
        }
        var e14 = t19.prototype;
        return e14.setOptions = function(t) {
            var e;
            this.options = u1({}, this.defaultOptions, t), this.meta = null == t ? void 0 : t.meta, this.cacheTime = Math.max(this.cacheTime || 0, null != (e = this.options.cacheTime) ? e : 300000);
        }, e14.setDefaultOptions = function(t) {
            this.defaultOptions = t;
        }, e14.scheduleGc = function() {
            var t = this;
            this.clearGcTimeout(), a1(this.cacheTime) && (this.gcTimeout = setTimeout(function() {
                t.optionalRemove();
            }, this.cacheTime));
        }, e14.clearGcTimeout = function() {
            clearTimeout(this.gcTimeout), this.gcTimeout = void 0;
        }, e14.optionalRemove = function() {
            this.observers.length || (this.state.isFetching ? this.hadObservers && this.scheduleGc() : this.cache.remove(this));
        }, e14.setData = function(t20, e15) {
            var n, r, i = this.state.data, u = function(t, e) {
                return "function" == typeof t ? t(e) : t;
            }(t20, i);
            return (null == (n = (r = this.options).isDataEqual) ? void 0 : n.call(r, i, u)) ? u = i : !1 !== this.options.structuralSharing && (u = g1(i, u)), this.dispatch({
                data: u,
                type: "success",
                dataUpdatedAt: null == e15 ? void 0 : e15.updatedAt
            }), u;
        }, e14.setState = function(t, e) {
            this.dispatch({
                type: "setState",
                state: t,
                setStateOptions: e
            });
        }, e14.cancel = function(t) {
            var e, n = this.promise;
            return null == (e = this.retryer) || e.cancel(t), n ? n.then(o1).catch(o1) : Promise.resolve();
        }, e14.destroy = function() {
            this.clearGcTimeout(), this.cancel({
                silent: !0
            });
        }, e14.reset = function() {
            this.destroy(), this.setState(this.initialState);
        }, e14.isActive = function() {
            return this.observers.some(function(t) {
                return !1 !== t.options.enabled;
            });
        }, e14.isFetching = function() {
            return this.state.isFetching;
        }, e14.isStale = function() {
            return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(function(t) {
                return t.getCurrentResult().isStale;
            });
        }, e14.isStaleByTime = function(t) {
            return void 0 === t && (t = 0), this.state.isInvalidated || !this.state.dataUpdatedAt || !h1(this.state.dataUpdatedAt, t);
        }, e14.onFocus = function() {
            var t21, e = this.observers.find(function(t) {
                return t.shouldFetchOnWindowFocus();
            });
            e && e.refetch(), null == (t21 = this.retryer) || t21.continue();
        }, e14.onOnline = function() {
            var t22, e = this.observers.find(function(t) {
                return t.shouldFetchOnReconnect();
            });
            e && e.refetch(), null == (t22 = this.retryer) || t22.continue();
        }, e14.addObserver = function(t) {
            -1 === this.observers.indexOf(t) && (this.observers.push(t), this.hadObservers = !0, this.clearGcTimeout(), this.cache.notify({
                type: "observerAdded",
                query: this,
                observer: t
            }));
        }, e14.removeObserver = function(t) {
            -1 !== this.observers.indexOf(t) && (this.observers = this.observers.filter(function(e) {
                return e !== t;
            }), this.observers.length || (this.retryer && (this.retryer.isTransportCancelable || this.abortSignalConsumed ? this.retryer.cancel({
                revert: !0
            }) : this.retryer.cancelRetry()), this.cacheTime ? this.scheduleGc() : this.cache.remove(this)), this.cache.notify({
                type: "observerRemoved",
                query: this,
                observer: t
            }));
        }, e14.getObserversCount = function() {
            return this.observers.length;
        }, e14.invalidate = function() {
            this.state.isInvalidated || this.dispatch({
                type: "invalidate"
            });
        }, e14.fetch = function(t23, e) {
            var n, r, i, u = this;
            if (this.state.isFetching) {
                if (this.state.dataUpdatedAt && (null == e ? void 0 : e.cancelRefetch)) this.cancel({
                    silent: !0
                });
                else if (this.promise) {
                    var s;
                    return null == (s = this.retryer) || s.continueRetry(), this.promise;
                }
            }
            if (t23 && this.setOptions(t23), !this.options.queryFn) {
                var o = this.observers.find(function(t) {
                    return t.options.queryFn;
                });
                o && this.setOptions(o.options);
            }
            var a = c1(this.queryKey), l = q1(), h = {
                queryKey: a,
                pageParam: void 0,
                meta: this.meta
            };
            Object.defineProperty(h, "signal", {
                enumerable: !0,
                get: function() {
                    if (l) return u.abortSignalConsumed = !0, l.signal;
                }
            });
            var f, d, v = {
                fetchOptions: e,
                options: this.options,
                queryKey: a,
                state: this.state,
                fetchFn: function() {
                    return u.options.queryFn ? (u.abortSignalConsumed = !1, u.options.queryFn(h)) : Promise.reject("Missing queryFn");
                },
                meta: this.meta
            };
            (null == (n = this.options.behavior) ? void 0 : n.onFetch) && (null == (f = this.options.behavior) || f.onFetch(v));
            (this.revertState = this.state, this.state.isFetching && this.state.fetchMeta === (null == (r = v.fetchOptions) ? void 0 : r.meta)) || this.dispatch({
                type: "fetch",
                meta: null == (d = v.fetchOptions) ? void 0 : d.meta
            });
            return this.retryer = new x({
                fn: v.fetchFn,
                abort: null == l || null == (i = l.abort) ? void 0 : i.bind(l),
                onSuccess: function(t) {
                    u.setData(t), null == u.cache.config.onSuccess || u.cache.config.onSuccess(t, u), 0 === u.cacheTime && u.optionalRemove();
                },
                onError: function(t) {
                    w(t) && t.silent || u.dispatch({
                        type: "error",
                        error: t
                    }), w(t) || (null == u.cache.config.onError || u.cache.config.onError(t, u), U().error(t)), 0 === u.cacheTime && u.optionalRemove();
                },
                onFail: function() {
                    u.dispatch({
                        type: "failed"
                    });
                },
                onPause: function() {
                    u.dispatch({
                        type: "pause"
                    });
                },
                onContinue: function() {
                    u.dispatch({
                        type: "continue"
                    });
                },
                retry: v.options.retry,
                retryDelay: v.options.retryDelay
            }), this.promise = this.retryer.promise, this.promise;
        }, e14.dispatch = function(t) {
            var e16 = this;
            this.state = this.reducer(this.state, t), A.batch(function() {
                e16.observers.forEach(function(e) {
                    e.onQueryUpdate(t);
                }), e16.cache.notify({
                    query: e16,
                    type: "queryUpdated",
                    action: t
                });
            });
        }, e14.getDefaultState = function(t) {
            var e = "function" == typeof t.initialData ? t.initialData() : t.initialData, n = void 0 !== t.initialData ? "function" == typeof t.initialDataUpdatedAt ? t.initialDataUpdatedAt() : t.initialDataUpdatedAt : 0, r = void 0 !== e;
            return {
                data: e,
                dataUpdateCount: 0,
                dataUpdatedAt: r ? null != n ? n : Date.now() : 0,
                error: null,
                errorUpdateCount: 0,
                errorUpdatedAt: 0,
                fetchFailureCount: 0,
                fetchMeta: null,
                isFetching: !1,
                isInvalidated: !1,
                isPaused: !1,
                status: r ? "success" : "idle"
            };
        }, e14.reducer = function(t, e) {
            var n, r;
            switch(e.type){
                case "failed":
                    return u1({}, t, {
                        fetchFailureCount: t.fetchFailureCount + 1
                    });
                case "pause":
                    return u1({}, t, {
                        isPaused: !0
                    });
                case "continue":
                    return u1({}, t, {
                        isPaused: !1
                    });
                case "fetch":
                    return u1({}, t, {
                        fetchFailureCount: 0,
                        fetchMeta: null != (n = e.meta) ? n : null,
                        isFetching: !0,
                        isPaused: !1
                    }, !t.dataUpdatedAt && {
                        error: null,
                        status: "loading"
                    });
                case "success":
                    return u1({}, t, {
                        data: e.data,
                        dataUpdateCount: t.dataUpdateCount + 1,
                        dataUpdatedAt: null != (r = e.dataUpdatedAt) ? r : Date.now(),
                        error: null,
                        fetchFailureCount: 0,
                        isFetching: !1,
                        isInvalidated: !1,
                        isPaused: !1,
                        status: "success"
                    });
                case "error":
                    var i = e.error;
                    return w(i) && i.revert && this.revertState ? u1({}, this.revertState) : u1({}, t, {
                        error: i,
                        errorUpdateCount: t.errorUpdateCount + 1,
                        errorUpdatedAt: Date.now(),
                        fetchFailureCount: t.fetchFailureCount + 1,
                        isFetching: !1,
                        isPaused: !1,
                        status: "error"
                    });
                case "invalidate":
                    return u1({}, t, {
                        isInvalidated: !0
                    });
                case "setState":
                    return u1({}, t, e.state);
                default:
                    return t;
            }
        }, t19;
    }(), T = function(t24) {
        function e17(e) {
            var n;
            return (n = t24.call(this) || this).config = e || {}, n.queries = [], n.queriesMap = {}, n;
        }
        r1(e17, t24);
        var n5 = e17.prototype;
        return n5.build = function(t, e, n) {
            var r, i = e.queryKey, u = null != (r = e.queryHash) ? r : y1(i, e), s = this.get(u);
            return s || (s = new I({
                cache: this,
                queryKey: i,
                queryHash: u,
                options: t.defaultQueryOptions(e),
                state: n,
                defaultOptions: t.getQueryDefaults(i),
                meta: e.meta
            }), this.add(s)), s;
        }, n5.add = function(t) {
            this.queriesMap[t.queryHash] || (this.queriesMap[t.queryHash] = t, this.queries.push(t), this.notify({
                type: "queryAdded",
                query: t
            }));
        }, n5.remove = function(t) {
            var e18 = this.queriesMap[t.queryHash];
            e18 && (t.destroy(), this.queries = this.queries.filter(function(e) {
                return e !== t;
            }), e18 === t && delete this.queriesMap[t.queryHash], this.notify({
                type: "queryRemoved",
                query: t
            }));
        }, n5.clear = function() {
            var t = this;
            A.batch(function() {
                t.queries.forEach(function(e) {
                    t.remove(e);
                });
            });
        }, n5.get = function(t) {
            return this.queriesMap[t];
        }, n5.getAll = function() {
            return this.queries;
        }, n5.find = function(t25, e) {
            var n = d1(t25, e)[0];
            return void 0 === n.exact && (n.exact = !0), this.queries.find(function(t) {
                return v1(n, t);
            });
        }, n5.findAll = function(t26, e) {
            var n = d1(t26, e)[0];
            return Object.keys(n).length > 0 ? this.queries.filter(function(t) {
                return v1(n, t);
            }) : this.queries;
        }, n5.notify = function(t) {
            var e19 = this;
            A.batch(function() {
                e19.listeners.forEach(function(e) {
                    e(t);
                });
            });
        }, n5.onFocus = function() {
            var t27 = this;
            A.batch(function() {
                t27.queries.forEach(function(t) {
                    t.onFocus();
                });
            });
        }, n5.onOnline = function() {
            var t28 = this;
            A.batch(function() {
                t28.queries.forEach(function(t) {
                    t.onOnline();
                });
            });
        }, e17;
    }(i1), K = function() {
        function t29(t) {
            this.options = u1({}, t.defaultOptions, t.options), this.mutationId = t.mutationId, this.mutationCache = t.mutationCache, this.observers = [], this.state = t.state || L(), this.meta = t.meta;
        }
        var e20 = t29.prototype;
        return e20.setState = function(t) {
            this.dispatch({
                type: "setState",
                state: t
            });
        }, e20.addObserver = function(t) {
            -1 === this.observers.indexOf(t) && this.observers.push(t);
        }, e20.removeObserver = function(t) {
            this.observers = this.observers.filter(function(e) {
                return e !== t;
            });
        }, e20.cancel = function() {
            return this.retryer ? (this.retryer.cancel(), this.retryer.promise.then(o1).catch(o1)) : Promise.resolve();
        }, e20.continue = function() {
            return this.retryer ? (this.retryer.continue(), this.retryer.promise) : this.execute();
        }, e20.execute = function() {
            var t30, e = this, n6 = "loading" === this.state.status, r = Promise.resolve();
            return n6 || (this.dispatch({
                type: "loading",
                variables: this.options.variables
            }), r = r.then(function() {
                null == e.mutationCache.config.onMutate || e.mutationCache.config.onMutate(e.state.variables, e);
            }).then(function() {
                return null == e.options.onMutate ? void 0 : e.options.onMutate(e.state.variables);
            }).then(function(t) {
                t !== e.state.context && e.dispatch({
                    type: "loading",
                    context: t,
                    variables: e.state.variables
                });
            })), r.then(function() {
                return e.executeMutation();
            }).then(function(n) {
                t30 = n, null == e.mutationCache.config.onSuccess || e.mutationCache.config.onSuccess(t30, e.state.variables, e.state.context, e);
            }).then(function() {
                return null == e.options.onSuccess ? void 0 : e.options.onSuccess(t30, e.state.variables, e.state.context);
            }).then(function() {
                return null == e.options.onSettled ? void 0 : e.options.onSettled(t30, null, e.state.variables, e.state.context);
            }).then(function() {
                return e.dispatch({
                    type: "success",
                    data: t30
                }), t30;
            }).catch(function(t) {
                return null == e.mutationCache.config.onError || e.mutationCache.config.onError(t, e.state.variables, e.state.context, e), U().error(t), Promise.resolve().then(function() {
                    return null == e.options.onError ? void 0 : e.options.onError(t, e.state.variables, e.state.context);
                }).then(function() {
                    return null == e.options.onSettled ? void 0 : e.options.onSettled(void 0, t, e.state.variables, e.state.context);
                }).then(function() {
                    throw e.dispatch({
                        type: "error",
                        error: t
                    }), t;
                });
            });
        }, e20.executeMutation = function() {
            var t, e = this;
            return this.retryer = new x({
                fn: function() {
                    return e.options.mutationFn ? e.options.mutationFn(e.state.variables) : Promise.reject("No mutationFn found");
                },
                onFail: function() {
                    e.dispatch({
                        type: "failed"
                    });
                },
                onPause: function() {
                    e.dispatch({
                        type: "pause"
                    });
                },
                onContinue: function() {
                    e.dispatch({
                        type: "continue"
                    });
                },
                retry: null != (t = this.options.retry) ? t : 0,
                retryDelay: this.options.retryDelay
            }), this.retryer.promise;
        }, e20.dispatch = function(t31) {
            var e21 = this;
            this.state = (function(t, e) {
                switch(e.type){
                    case "failed":
                        return u1({}, t, {
                            failureCount: t.failureCount + 1
                        });
                    case "pause":
                        return u1({}, t, {
                            isPaused: !0
                        });
                    case "continue":
                        return u1({}, t, {
                            isPaused: !1
                        });
                    case "loading":
                        return u1({}, t, {
                            context: e.context,
                            data: void 0,
                            error: null,
                            isPaused: !1,
                            status: "loading",
                            variables: e.variables
                        });
                    case "success":
                        return u1({}, t, {
                            data: e.data,
                            error: null,
                            status: "success",
                            isPaused: !1
                        });
                    case "error":
                        return u1({}, t, {
                            data: void 0,
                            error: e.error,
                            failureCount: t.failureCount + 1,
                            isPaused: !1,
                            status: "error"
                        });
                    case "setState":
                        return u1({}, t, e.state);
                    default:
                        return t;
                }
            })(this.state, t31), A.batch(function() {
                e21.observers.forEach(function(e) {
                    e.onMutationUpdate(t31);
                }), e21.mutationCache.notify(e21);
            });
        }, t29;
    }();
    function L() {
        return {
            context: void 0,
            data: void 0,
            error: null,
            failureCount: 0,
            isPaused: !1,
            status: "idle",
            variables: void 0
        };
    }
    var j = function(t32) {
        function e22(e) {
            var n;
            return (n = t32.call(this) || this).config = e || {}, n.mutations = [], n.mutationId = 0, n;
        }
        r1(e22, t32);
        var n7 = e22.prototype;
        return n7.build = function(t, e, n) {
            var r = new K({
                mutationCache: this,
                mutationId: ++this.mutationId,
                options: t.defaultMutationOptions(e),
                state: n,
                defaultOptions: e.mutationKey ? t.getMutationDefaults(e.mutationKey) : void 0,
                meta: e.meta
            });
            return this.add(r), r;
        }, n7.add = function(t) {
            this.mutations.push(t), this.notify(t);
        }, n7.remove = function(t) {
            this.mutations = this.mutations.filter(function(e) {
                return e !== t;
            }), t.cancel(), this.notify(t);
        }, n7.clear = function() {
            var t = this;
            A.batch(function() {
                t.mutations.forEach(function(e) {
                    t.remove(e);
                });
            });
        }, n7.getAll = function() {
            return this.mutations;
        }, n7.find = function(t) {
            return void 0 === t.exact && (t.exact = !0), this.mutations.find(function(e) {
                return p1(t, e);
            });
        }, n7.findAll = function(t) {
            return this.mutations.filter(function(e) {
                return p1(t, e);
            });
        }, n7.notify = function(t) {
            var e23 = this;
            A.batch(function() {
                e23.listeners.forEach(function(e) {
                    e(t);
                });
            });
        }, n7.onFocus = function() {
            this.resumePausedMutations();
        }, n7.onOnline = function() {
            this.resumePausedMutations();
        }, n7.resumePausedMutations = function() {
            var t33 = this.mutations.filter(function(t) {
                return t.state.isPaused;
            });
            return A.batch(function() {
                return t33.reduce(function(t, e) {
                    return t.then(function() {
                        return e.continue().catch(o1);
                    });
                }, Promise.resolve());
            });
        }, e22;
    }(i1);
    function H() {
        return {
            onFetch: function(t34) {
                t34.fetchFn = function() {
                    var e24, n8, r3, i5, u2, s2, o3, a = null == (e24 = t34.fetchOptions) || null == (n8 = e24.meta) ? void 0 : n8.refetchPage, c = null == (r3 = t34.fetchOptions) || null == (i5 = r3.meta) ? void 0 : i5.fetchMore, l = null == c ? void 0 : c.pageParam, h = "forward" === (null == c ? void 0 : c.direction), f = "backward" === (null == c ? void 0 : c.direction), d = (null == (u2 = t34.state.data) ? void 0 : u2.pages) || [], v = (null == (s2 = t34.state.data) ? void 0 : s2.pageParams) || [], p = q1(), y = null == p ? void 0 : p.signal, m = v, b = !1, g = t34.options.queryFn || function() {
                        return Promise.reject("Missing queryFn");
                    }, O = function(t, e, n, r) {
                        return m = r ? [
                            e
                        ].concat(m) : [].concat(m, [
                            e
                        ]), r ? [
                            n
                        ].concat(t) : [].concat(t, [
                            n
                        ]);
                    }, C = function(e, n, r, i) {
                        if (b) return Promise.reject("Cancelled");
                        if (void 0 === r && !n && e.length) return Promise.resolve(e);
                        var u = {
                            queryKey: t34.queryKey,
                            signal: y,
                            pageParam: r,
                            meta: t34.meta
                        }, s = g(u), o = Promise.resolve(s).then(function(t) {
                            return O(e, r, t, i);
                        });
                        F(s) && (o.cancel = s.cancel);
                        return o;
                    };
                    if (d.length) if (h) {
                        var R = void 0 !== l, P = R ? l : k(t34.options, d);
                        o3 = C(d, R, P);
                    } else if (f) {
                        var S = void 0 !== l, Q = S ? l : N(t34.options, d);
                        o3 = C(d, S, Q, !0);
                    } else !function() {
                        m = [];
                        var e = void 0 === t34.options.getNextPageParam, n9 = !a || !d[0] || a(d[0], 0, d);
                        o3 = n9 ? C([], e, v[0]) : Promise.resolve(O([], v[0], d[0]));
                        for(var r4 = function(n) {
                            o3 = o3.then(function(r) {
                                if (!a || !d[n] || a(d[n], n, d)) {
                                    var i = e ? v[n] : k(t34.options, r);
                                    return C(r, e, i);
                                }
                                return Promise.resolve(O(r, v[n], d[n]));
                            });
                        }, i6 = 1; i6 < d.length; i6++)r4(i6);
                    }();
                    else o3 = C([]);
                    var E = o3.then(function(t) {
                        return {
                            pages: t,
                            pageParams: m
                        };
                    });
                    return E.cancel = function() {
                        b = !0, null == p || p.abort(), F(o3) && o3.cancel();
                    }, E;
                };
            }
        };
    }
    function k(t, e) {
        return null == t.getNextPageParam ? void 0 : t.getNextPageParam(e[e.length - 1], e);
    }
    function N(t, e) {
        return null == t.getPreviousPageParam ? void 0 : t.getPreviousPageParam(e[0], e);
    }
    function B(t, e) {
        if (t.getNextPageParam && Array.isArray(e)) {
            var n = k(t, e);
            return null != n && !1 !== n;
        }
    }
    function _(t, e) {
        if (t.getPreviousPageParam && Array.isArray(e)) {
            var n = N(t, e);
            return null != n && !1 !== n;
        }
    }
    var G = function() {
        function t35(t) {
            void 0 === t && (t = {}), this.queryCache = t.queryCache || new T, this.mutationCache = t.mutationCache || new j, this.defaultOptions = t.defaultOptions || {}, this.queryDefaults = [], this.mutationDefaults = [];
        }
        var e25 = t35.prototype;
        return e25.mount = function() {
            var t = this;
            this.unsubscribeFocus = S1.subscribe(function() {
                S1.isFocused() && Q1.isOnline() && (t.mutationCache.onFocus(), t.queryCache.onFocus());
            }), this.unsubscribeOnline = Q1.subscribe(function() {
                S1.isFocused() && Q1.isOnline() && (t.mutationCache.onOnline(), t.queryCache.onOnline());
            });
        }, e25.unmount = function() {
            var t, e;
            null == (t = this.unsubscribeFocus) || t.call(this), null == (e = this.unsubscribeOnline) || e.call(this);
        }, e25.isFetching = function(t, e) {
            var n = d1(t, e)[0];
            return n.fetching = !0, this.queryCache.findAll(n).length;
        }, e25.isMutating = function(t) {
            return this.mutationCache.findAll(u1({}, t, {
                fetching: !0
            })).length;
        }, e25.getQueryData = function(t, e) {
            var n;
            return null == (n = this.queryCache.find(t, e)) ? void 0 : n.state.data;
        }, e25.getQueriesData = function(t36) {
            return this.getQueryCache().findAll(t36).map(function(t) {
                return [
                    t.queryKey,
                    t.state.data
                ];
            });
        }, e25.setQueryData = function(t, e, n) {
            var r = f1(t), i = this.defaultQueryOptions(r);
            return this.queryCache.build(this, i).setData(e, n);
        }, e25.setQueriesData = function(t37, e, n) {
            var r = this;
            return A.batch(function() {
                return r.getQueryCache().findAll(t37).map(function(t) {
                    var i = t.queryKey;
                    return [
                        i,
                        r.setQueryData(i, e, n)
                    ];
                });
            });
        }, e25.getQueryState = function(t, e) {
            var n;
            return null == (n = this.queryCache.find(t, e)) ? void 0 : n.state;
        }, e25.removeQueries = function(t38, e) {
            var n = d1(t38, e)[0], r = this.queryCache;
            A.batch(function() {
                r.findAll(n).forEach(function(t) {
                    r.remove(t);
                });
            });
        }, e25.resetQueries = function(t39, e, n) {
            var r = this, i = d1(t39, e, n), s = i[0], o = i[1], a = this.queryCache, c = u1({}, s, {
                active: !0
            });
            return A.batch(function() {
                return a.findAll(s).forEach(function(t) {
                    t.reset();
                }), r.refetchQueries(c, o);
            });
        }, e25.cancelQueries = function(t40, e, n) {
            var r = this, i = d1(t40, e, n), u = i[0], s = i[1], a = void 0 === s ? {} : s;
            void 0 === a.revert && (a.revert = !0);
            var c = A.batch(function() {
                return r.queryCache.findAll(u).map(function(t) {
                    return t.cancel(a);
                });
            });
            return Promise.all(c).then(o1).catch(o1);
        }, e25.invalidateQueries = function(t41, e, n) {
            var r, i, s, o = this, a = d1(t41, e, n), c = a[0], l = a[1], h = u1({}, c, {
                active: null == (r = null != (i = c.refetchActive) ? i : c.active) || r,
                inactive: null != (s = c.refetchInactive) && s
            });
            return A.batch(function() {
                return o.queryCache.findAll(c).forEach(function(t) {
                    t.invalidate();
                }), o.refetchQueries(h, l);
            });
        }, e25.refetchQueries = function(t42, e, n) {
            var r = this, i = d1(t42, e, n), s = i[0], a = i[1], c = A.batch(function() {
                return r.queryCache.findAll(s).map(function(t) {
                    return t.fetch(void 0, u1({}, a, {
                        meta: {
                            refetchPage: null == s ? void 0 : s.refetchPage
                        }
                    }));
                });
            }), l = Promise.all(c).then(o1);
            return (null == a ? void 0 : a.throwOnError) || (l = l.catch(o1)), l;
        }, e25.fetchQuery = function(t, e, n) {
            var r = f1(t, e, n), i = this.defaultQueryOptions(r);
            void 0 === i.retry && (i.retry = !1);
            var u = this.queryCache.build(this, i);
            return u.isStaleByTime(i.staleTime) ? u.fetch(i) : Promise.resolve(u.state.data);
        }, e25.prefetchQuery = function(t, e, n) {
            return this.fetchQuery(t, e, n).then(o1).catch(o1);
        }, e25.fetchInfiniteQuery = function(t, e, n) {
            var r = f1(t, e, n);
            return r.behavior = H(), this.fetchQuery(r);
        }, e25.prefetchInfiniteQuery = function(t, e, n) {
            return this.fetchInfiniteQuery(t, e, n).then(o1).catch(o1);
        }, e25.cancelMutations = function() {
            var t43 = this, e = A.batch(function() {
                return t43.mutationCache.getAll().map(function(t) {
                    return t.cancel();
                });
            });
            return Promise.all(e).then(o1).catch(o1);
        }, e25.resumePausedMutations = function() {
            return this.getMutationCache().resumePausedMutations();
        }, e25.executeMutation = function(t) {
            return this.mutationCache.build(this, t).execute();
        }, e25.getQueryCache = function() {
            return this.queryCache;
        }, e25.getMutationCache = function() {
            return this.mutationCache;
        }, e25.getDefaultOptions = function() {
            return this.defaultOptions;
        }, e25.setDefaultOptions = function(t) {
            this.defaultOptions = t;
        }, e25.setQueryDefaults = function(t, e26) {
            var n = this.queryDefaults.find(function(e) {
                return m1(t) === m1(e.queryKey);
            });
            n ? n.defaultOptions = e26 : this.queryDefaults.push({
                queryKey: t,
                defaultOptions: e26
            });
        }, e25.getQueryDefaults = function(t) {
            var e27;
            return t ? null == (e27 = this.queryDefaults.find(function(e) {
                return b1(t, e.queryKey);
            })) ? void 0 : e27.defaultOptions : void 0;
        }, e25.setMutationDefaults = function(t, e28) {
            var n = this.mutationDefaults.find(function(e) {
                return m1(t) === m1(e.mutationKey);
            });
            n ? n.defaultOptions = e28 : this.mutationDefaults.push({
                mutationKey: t,
                defaultOptions: e28
            });
        }, e25.getMutationDefaults = function(t) {
            var e29;
            return t ? null == (e29 = this.mutationDefaults.find(function(e) {
                return b1(t, e.mutationKey);
            })) ? void 0 : e29.defaultOptions : void 0;
        }, e25.defaultQueryOptions = function(t) {
            if (null == t ? void 0 : t._defaulted) return t;
            var e = u1({}, this.defaultOptions.queries, this.getQueryDefaults(null == t ? void 0 : t.queryKey), t, {
                _defaulted: !0
            });
            return !e.queryHash && e.queryKey && (e.queryHash = y1(e.queryKey, e)), e;
        }, e25.defaultQueryObserverOptions = function(t) {
            return this.defaultQueryOptions(t);
        }, e25.defaultMutationOptions = function(t) {
            return (null == t ? void 0 : t._defaulted) ? t : u1({}, this.defaultOptions.mutations, this.getMutationDefaults(null == t ? void 0 : t.mutationKey), t, {
                _defaulted: !0
            });
        }, e25.clear = function() {
            this.queryCache.clear(), this.mutationCache.clear();
        }, t35;
    }(), W = function(t44) {
        function e30(e, n) {
            var r;
            return (r = t44.call(this) || this).client = e, r.options = n, r.trackedProps = [], r.previousSelectError = null, r.bindMethods(), r.setOptions(n), r;
        }
        r1(e30, t44);
        var n10 = e30.prototype;
        return n10.bindMethods = function() {
            this.remove = this.remove.bind(this), this.refetch = this.refetch.bind(this);
        }, n10.onSubscribe = function() {
            1 === this.listeners.length && (this.currentQuery.addObserver(this), J(this.currentQuery, this.options) && this.executeFetch(), this.updateTimers());
        }, n10.onUnsubscribe = function() {
            this.listeners.length || this.destroy();
        }, n10.shouldFetchOnReconnect = function() {
            return t = this.currentQuery, !1 !== (e = this.options).enabled && ("always" === e.refetchOnReconnect || !1 !== e.refetchOnReconnect && V(t, e));
            var t, e;
        }, n10.shouldFetchOnWindowFocus = function() {
            return t = this.currentQuery, !1 !== (e = this.options).enabled && ("always" === e.refetchOnWindowFocus || !1 !== e.refetchOnWindowFocus && V(t, e));
            var t, e;
        }, n10.destroy = function() {
            this.listeners = [], this.clearTimers(), this.currentQuery.removeObserver(this);
        }, n10.setOptions = function(t, e) {
            var n = this.options, r = this.currentQuery;
            if (this.options = this.client.defaultQueryObserverOptions(t), void 0 !== this.options.enabled && "boolean" != typeof this.options.enabled) throw new Error("Expected enabled to be a boolean");
            this.options.queryKey || (this.options.queryKey = n.queryKey), this.updateQuery();
            var i = this.hasListeners();
            i && z(this.currentQuery, r, this.options, n) && this.executeFetch(), this.updateResult(e), !i || this.currentQuery === r && this.options.enabled === n.enabled && this.options.staleTime === n.staleTime || this.updateStaleTimeout();
            var u = this.computeRefetchInterval();
            !i || this.currentQuery === r && this.options.enabled === n.enabled && u === this.currentRefetchInterval || this.updateRefetchInterval(u);
        }, n10.getOptimisticResult = function(t) {
            var e = this.client.defaultQueryObserverOptions(t), n = this.client.getQueryCache().build(this.client, e);
            return this.createResult(n, e);
        }, n10.getCurrentResult = function() {
            return this.currentResult;
        }, n10.trackResult = function(t45, e31) {
            var n = this, r = {}, i = function(t) {
                n.trackedProps.includes(t) || n.trackedProps.push(t);
            };
            return Object.keys(t45).forEach(function(e) {
                Object.defineProperty(r, e, {
                    configurable: !1,
                    enumerable: !0,
                    get: function() {
                        return i(e), t45[e];
                    }
                });
            }), (e31.useErrorBoundary || e31.suspense) && i("error"), r;
        }, n10.getNextResult = function(t) {
            var e32 = this;
            return new Promise(function(n, r) {
                var i = e32.subscribe(function(e) {
                    e.isFetching || (i(), e.isError && (null == t ? void 0 : t.throwOnError) ? r(e.error) : n(e));
                });
            });
        }, n10.getCurrentQuery = function() {
            return this.currentQuery;
        }, n10.remove = function() {
            this.client.getQueryCache().remove(this.currentQuery);
        }, n10.refetch = function(t) {
            return this.fetch(u1({}, t, {
                meta: {
                    refetchPage: null == t ? void 0 : t.refetchPage
                }
            }));
        }, n10.fetchOptimistic = function(t) {
            var e = this, n = this.client.defaultQueryObserverOptions(t), r = this.client.getQueryCache().build(this.client, n);
            return r.fetch().then(function() {
                return e.createResult(r, n);
            });
        }, n10.fetch = function(t) {
            var e = this;
            return this.executeFetch(t).then(function() {
                return e.updateResult(), e.currentResult;
            });
        }, n10.executeFetch = function(t) {
            this.updateQuery();
            var e = this.currentQuery.fetch(this.options, t);
            return (null == t ? void 0 : t.throwOnError) || (e = e.catch(o1)), e;
        }, n10.updateStaleTimeout = function() {
            var t = this;
            if (this.clearStaleTimeout(), !s1 && !this.currentResult.isStale && a1(this.options.staleTime)) {
                var e = h1(this.currentResult.dataUpdatedAt, this.options.staleTime) + 1;
                this.staleTimeoutId = setTimeout(function() {
                    t.currentResult.isStale || t.updateResult();
                }, e);
            }
        }, n10.computeRefetchInterval = function() {
            var t;
            return "function" == typeof this.options.refetchInterval ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : null != (t = this.options.refetchInterval) && t;
        }, n10.updateRefetchInterval = function(t) {
            var e = this;
            this.clearRefetchInterval(), this.currentRefetchInterval = t, !s1 && !1 !== this.options.enabled && a1(this.currentRefetchInterval) && 0 !== this.currentRefetchInterval && (this.refetchIntervalId = setInterval(function() {
                (e.options.refetchIntervalInBackground || S1.isFocused()) && e.executeFetch();
            }, this.currentRefetchInterval));
        }, n10.updateTimers = function() {
            this.updateStaleTimeout(), this.updateRefetchInterval(this.computeRefetchInterval());
        }, n10.clearTimers = function() {
            this.clearStaleTimeout(), this.clearRefetchInterval();
        }, n10.clearStaleTimeout = function() {
            clearTimeout(this.staleTimeoutId), this.staleTimeoutId = void 0;
        }, n10.clearRefetchInterval = function() {
            clearInterval(this.refetchIntervalId), this.refetchIntervalId = void 0;
        }, n10.createResult = function(t, e) {
            var n, r = this.currentQuery, i = this.options, u = this.currentResult, s = this.currentResultState, o = this.currentResultOptions, a = t !== r, c = a ? t.state : this.currentQueryInitialState, l = a ? this.currentResult : this.previousQueryResult, h = t.state, f = h.dataUpdatedAt, d = h.error, v = h.errorUpdatedAt, p = h.isFetching, y = h.status, m = !1, b = !1;
            if (e.optimisticResults) {
                var O = this.hasListeners(), C = !O && J(t, e), R = O && z(t, r, e, i);
                (C || R) && (p = !0, f || (y = "loading"));
            }
            if (e.keepPreviousData && !h.dataUpdateCount && (null == l ? void 0 : l.isSuccess) && "error" !== y) n = l.data, f = l.dataUpdatedAt, y = l.status, m = !0;
            else if (e.select && void 0 !== h.data) {
                var P;
                if (u && h.data === (null == s ? void 0 : s.data) && e.select === (null == (P = this.previousSelect) ? void 0 : P.fn) && !this.previousSelectError) n = this.previousSelect.result;
                else try {
                    n = e.select(h.data), !1 !== e.structuralSharing && (n = g1(null == u ? void 0 : u.data, n)), this.previousSelect = {
                        fn: e.select,
                        result: n
                    }, this.previousSelectError = null;
                } catch (t) {
                    U().error(t), d = t, this.previousSelectError = t, v = Date.now(), y = "error";
                }
            } else n = h.data;
            if (void 0 !== e.placeholderData && void 0 === n && ("loading" === y || "idle" === y)) {
                var q;
                if ((null == u ? void 0 : u.isPlaceholderData) && e.placeholderData === (null == o ? void 0 : o.placeholderData)) q = u.data;
                else if (q = "function" == typeof e.placeholderData ? e.placeholderData() : e.placeholderData, e.select && void 0 !== q) try {
                    q = e.select(q), !1 !== e.structuralSharing && (q = g1(null == u ? void 0 : u.data, q)), this.previousSelectError = null;
                } catch (t) {
                    U().error(t), d = t, this.previousSelectError = t, v = Date.now(), y = "error";
                }
                void 0 !== q && (y = "success", n = q, b = !0);
            }
            return {
                status: y,
                isLoading: "loading" === y,
                isSuccess: "success" === y,
                isError: "error" === y,
                isIdle: "idle" === y,
                data: n,
                dataUpdatedAt: f,
                error: d,
                errorUpdatedAt: v,
                failureCount: h.fetchFailureCount,
                isFetched: h.dataUpdateCount > 0 || h.errorUpdateCount > 0,
                isFetchedAfterMount: h.dataUpdateCount > c.dataUpdateCount || h.errorUpdateCount > c.errorUpdateCount,
                isFetching: p,
                isRefetching: p && "loading" !== y,
                isLoadingError: "error" === y && 0 === h.dataUpdatedAt,
                isPlaceholderData: b,
                isPreviousData: m,
                isRefetchError: "error" === y && 0 !== h.dataUpdatedAt,
                isStale: V(t, e),
                refetch: this.refetch,
                remove: this.remove
            };
        }, n10.shouldNotifyListeners = function(t46, e) {
            if (!e) return !0;
            var n11 = this.options, r5 = n11.notifyOnChangeProps, i = n11.notifyOnChangePropsExclusions;
            if (!r5 && !i) return !0;
            if ("tracked" === r5 && !this.trackedProps.length) return !0;
            var u = "tracked" === r5 ? this.trackedProps : r5;
            return Object.keys(t46).some(function(n) {
                var r = n, s = t46[r] !== e[r], o = null == u ? void 0 : u.some(function(t) {
                    return t === n;
                }), a = null == i ? void 0 : i.some(function(t) {
                    return t === n;
                });
                return s && !a && (!u || o);
            });
        }, n10.updateResult = function(t47) {
            var e33 = this.currentResult;
            if (this.currentResult = this.createResult(this.currentQuery, this.options), this.currentResultState = this.currentQuery.state, this.currentResultOptions = this.options, !function(t, e) {
                if (t && !e || e && !t) return !1;
                for(var n in t)if (t[n] !== e[n]) return !1;
                return !0;
            }(this.currentResult, e33)) {
                var n12 = {
                    cache: !0
                };
                !1 !== (null == t47 ? void 0 : t47.listeners) && this.shouldNotifyListeners(this.currentResult, e33) && (n12.listeners = !0), this.notify(u1({}, n12, t47));
            }
        }, n10.updateQuery = function() {
            var t = this.client.getQueryCache().build(this.client, this.options);
            if (t !== this.currentQuery) {
                var e = this.currentQuery;
                this.currentQuery = t, this.currentQueryInitialState = t.state, this.previousQueryResult = this.currentResult, this.hasListeners() && (null == e || e.removeObserver(this), t.addObserver(this));
            }
        }, n10.onQueryUpdate = function(t) {
            var e = {};
            "success" === t.type ? e.onSuccess = !0 : "error" !== t.type || w(t.error) || (e.onError = !0), this.updateResult(e), this.hasListeners() && this.updateTimers();
        }, n10.notify = function(t48) {
            var e = this;
            A.batch(function() {
                t48.onSuccess ? (null == e.options.onSuccess || e.options.onSuccess(e.currentResult.data), null == e.options.onSettled || e.options.onSettled(e.currentResult.data, null)) : t48.onError && (null == e.options.onError || e.options.onError(e.currentResult.error), null == e.options.onSettled || e.options.onSettled(void 0, e.currentResult.error)), t48.listeners && e.listeners.forEach(function(t) {
                    t(e.currentResult);
                }), t48.cache && e.client.getQueryCache().notify({
                    query: e.currentQuery,
                    type: "observerResultsUpdated"
                });
            });
        }, e30;
    }(i1);
    function J(t49, e34) {
        return (function(t, e) {
            return !(!1 === e.enabled || t.state.dataUpdatedAt || "error" === t.state.status && !1 === e.retryOnMount);
        })(t49, e34) || (function(t, e) {
            return !1 !== e.enabled && t.state.dataUpdatedAt > 0 && ("always" === e.refetchOnMount || !1 !== e.refetchOnMount && V(t, e));
        })(t49, e34);
    }
    function z(t, e, n, r) {
        return !1 !== n.enabled && (t !== e || !1 === r.enabled) && (!n.suspense || "error" !== t.state.status) && V(t, n);
    }
    function V(t, e) {
        return t.isStaleByTime(e.staleTime);
    }
    var X = function(t50) {
        function e35(e, n) {
            var r;
            return (r = t50.call(this) || this).client = e, r.queries = [], r.result = [], r.observers = [], r.observersMap = {}, n && r.setQueries(n), r;
        }
        r1(e35, t50);
        var n13 = e35.prototype;
        return n13.onSubscribe = function() {
            var t = this;
            1 === this.listeners.length && this.observers.forEach(function(e) {
                e.subscribe(function(n) {
                    t.onUpdate(e, n);
                });
            });
        }, n13.onUnsubscribe = function() {
            this.listeners.length || this.destroy();
        }, n13.destroy = function() {
            this.listeners = [], this.observers.forEach(function(t) {
                t.destroy();
            });
        }, n13.setQueries = function(t, e) {
            this.queries = t, this.updateObservers(e);
        }, n13.getCurrentResult = function() {
            return this.result;
        }, n13.getOptimisticResult = function(t51) {
            return this.findMatchingObservers(t51).map(function(t) {
                return t.observer.getOptimisticResult(t.defaultedQueryOptions);
            });
        }, n13.findMatchingObservers = function(t52) {
            var e36 = this, n14 = this.observers, r6 = t52.map(function(t) {
                return e36.client.defaultQueryObserverOptions(t);
            }), i = r6.flatMap(function(t) {
                var e37 = n14.find(function(e) {
                    return e.options.queryHash === t.queryHash;
                });
                return null != e37 ? [
                    {
                        defaultedQueryOptions: t,
                        observer: e37
                    }
                ] : [];
            }), u = i.map(function(t) {
                return t.defaultedQueryOptions.queryHash;
            }), s = r6.filter(function(t) {
                return !u.includes(t.queryHash);
            }), o = n14.filter(function(t) {
                return !i.some(function(e) {
                    return e.observer === t;
                });
            }), a = s.map(function(t, n) {
                if (t.keepPreviousData) {
                    var r = o[n];
                    if (void 0 !== r) return {
                        defaultedQueryOptions: t,
                        observer: r
                    };
                }
                return {
                    defaultedQueryOptions: t,
                    observer: e36.getObserver(t)
                };
            });
            return i.concat(a).sort(function(t, e) {
                return r6.indexOf(t.defaultedQueryOptions) - r6.indexOf(e.defaultedQueryOptions);
            });
        }, n13.getObserver = function(t) {
            var e = this.client.defaultQueryObserverOptions(t), n = this.observersMap[e.queryHash];
            return null != n ? n : new W(this.client, e);
        }, n13.updateObservers = function(t53) {
            var e38 = this;
            A.batch(function() {
                var n15 = e38.observers, r = e38.findMatchingObservers(e38.queries);
                r.forEach(function(e) {
                    return e.observer.setOptions(e.defaultedQueryOptions, t53);
                });
                var i = r.map(function(t) {
                    return t.observer;
                }), u = Object.fromEntries(i.map(function(t) {
                    return [
                        t.options.queryHash,
                        t
                    ];
                })), s = i.map(function(t) {
                    return t.getCurrentResult();
                }), o = i.some(function(t, e) {
                    return t !== n15[e];
                });
                (n15.length !== i.length || o) && (e38.observers = i, e38.observersMap = u, e38.result = s, e38.hasListeners() && (l1(n15, i).forEach(function(t) {
                    t.destroy();
                }), l1(i, n15).forEach(function(t) {
                    t.subscribe(function(n) {
                        e38.onUpdate(t, n);
                    });
                }), e38.notify()));
            });
        }, n13.onUpdate = function(t54, e39) {
            var n16 = this.observers.indexOf(t54);
            -1 !== n16 && (this.result = (function(t, e, n) {
                var r = t.slice(0);
                return r[e] = n, r;
            })(this.result, n16, e39), this.notify());
        }, n13.notify = function() {
            var t = this;
            A.batch(function() {
                t.listeners.forEach(function(e) {
                    e(t.result);
                });
            });
        }, e35;
    }(i1), Y = function(t55) {
        function e40(e, n) {
            return t55.call(this, e, n) || this;
        }
        r1(e40, t55);
        var n17 = e40.prototype;
        return n17.bindMethods = function() {
            t55.prototype.bindMethods.call(this), this.fetchNextPage = this.fetchNextPage.bind(this), this.fetchPreviousPage = this.fetchPreviousPage.bind(this);
        }, n17.setOptions = function(e, n) {
            t55.prototype.setOptions.call(this, u1({}, e, {
                behavior: H()
            }), n);
        }, n17.getOptimisticResult = function(e) {
            return e.behavior = H(), t55.prototype.getOptimisticResult.call(this, e);
        }, n17.fetchNextPage = function(t) {
            var e;
            return this.fetch({
                cancelRefetch: null == (e = null == t ? void 0 : t.cancelRefetch) || e,
                throwOnError: null == t ? void 0 : t.throwOnError,
                meta: {
                    fetchMore: {
                        direction: "forward",
                        pageParam: null == t ? void 0 : t.pageParam
                    }
                }
            });
        }, n17.fetchPreviousPage = function(t) {
            var e;
            return this.fetch({
                cancelRefetch: null == (e = null == t ? void 0 : t.cancelRefetch) || e,
                throwOnError: null == t ? void 0 : t.throwOnError,
                meta: {
                    fetchMore: {
                        direction: "backward",
                        pageParam: null == t ? void 0 : t.pageParam
                    }
                }
            });
        }, n17.createResult = function(e, n) {
            var r, i, s, o, a, c, l = e.state;
            return u1({}, t55.prototype.createResult.call(this, e, n), {
                fetchNextPage: this.fetchNextPage,
                fetchPreviousPage: this.fetchPreviousPage,
                hasNextPage: B(n, null == (r = l.data) ? void 0 : r.pages),
                hasPreviousPage: _(n, null == (i = l.data) ? void 0 : i.pages),
                isFetchingNextPage: l.isFetching && "forward" === (null == (s = l.fetchMeta) || null == (o = s.fetchMore) ? void 0 : o.direction),
                isFetchingPreviousPage: l.isFetching && "backward" === (null == (a = l.fetchMeta) || null == (c = a.fetchMore) ? void 0 : c.direction)
            });
        }, e40;
    }(W), Z = function(t56) {
        function e41(e, n) {
            var r;
            return (r = t56.call(this) || this).client = e, r.setOptions(n), r.bindMethods(), r.updateResult(), r;
        }
        r1(e41, t56);
        var n18 = e41.prototype;
        return n18.bindMethods = function() {
            this.mutate = this.mutate.bind(this), this.reset = this.reset.bind(this);
        }, n18.setOptions = function(t) {
            this.options = this.client.defaultMutationOptions(t);
        }, n18.onUnsubscribe = function() {
            var t;
            this.listeners.length || null == (t = this.currentMutation) || t.removeObserver(this);
        }, n18.onMutationUpdate = function(t) {
            this.updateResult();
            var e = {
                listeners: !0
            };
            "success" === t.type ? e.onSuccess = !0 : "error" === t.type && (e.onError = !0), this.notify(e);
        }, n18.getCurrentResult = function() {
            return this.currentResult;
        }, n18.reset = function() {
            this.currentMutation = void 0, this.updateResult(), this.notify({
                listeners: !0
            });
        }, n18.mutate = function(t, e) {
            return this.mutateOptions = e, this.currentMutation && this.currentMutation.removeObserver(this), this.currentMutation = this.client.getMutationCache().build(this.client, u1({}, this.options, {
                variables: void 0 !== t ? t : this.options.variables
            })), this.currentMutation.addObserver(this), this.currentMutation.execute();
        }, n18.updateResult = function() {
            var t = this.currentMutation ? this.currentMutation.state : {
                context: void 0,
                data: void 0,
                error: null,
                failureCount: 0,
                isPaused: !1,
                status: "idle",
                variables: void 0
            }, e = u1({}, t, {
                isLoading: "loading" === t.status,
                isSuccess: "success" === t.status,
                isError: "error" === t.status,
                isIdle: "idle" === t.status,
                mutate: this.mutate,
                reset: this.reset
            });
            this.currentResult = e;
        }, n18.notify = function(t57) {
            var e = this;
            A.batch(function() {
                e.mutateOptions && (t57.onSuccess ? (null == e.mutateOptions.onSuccess || e.mutateOptions.onSuccess(e.currentResult.data, e.currentResult.variables, e.currentResult.context), null == e.mutateOptions.onSettled || e.mutateOptions.onSettled(e.currentResult.data, null, e.currentResult.variables, e.currentResult.context)) : t57.onError && (null == e.mutateOptions.onError || e.mutateOptions.onError(e.currentResult.error, e.currentResult.variables, e.currentResult.context), null == e.mutateOptions.onSettled || e.mutateOptions.onSettled(void 0, e.currentResult.error, e.currentResult.variables, e.currentResult.context))), t57.listeners && e.listeners.forEach(function(t) {
                    t(e.currentResult);
                });
            });
        }, e41;
    }(i1);
    function $(t) {
        return t.state.isPaused;
    }
    function tt(t) {
        return "success" === t.state.status;
    }
    function et(t, e42, n) {
        if ("object" == typeof e42 && null !== e42) {
            var r7 = t.getMutationCache(), i7 = t.getQueryCache(), s3 = e42.mutations || [], o = e42.queries || [];
            s3.forEach(function(e) {
                var i;
                r7.build(t, u1({}, null == n || null == (i = n.defaultOptions) ? void 0 : i.mutations, {
                    mutationKey: e.mutationKey
                }), e.state);
            }), o.forEach(function(e) {
                var r, s = i7.get(e.queryHash);
                s ? s.state.dataUpdatedAt < e.state.dataUpdatedAt && s.setState(e.state) : i7.build(t, u1({}, null == n || null == (r = n.defaultOptions) ? void 0 : r.queries, {
                    queryKey: e.queryKey,
                    queryHash: e.queryHash
                }), e.state);
            });
        }
    }
    var nt = n1.createContext(void 0), rt = n1.createContext(!1);
    function it(t) {
        return t && "undefined" != typeof window ? (window.ReactQueryClientContext || (window.ReactQueryClientContext = nt), window.ReactQueryClientContext) : nt;
    }
    var ut = function() {
        var t = n1.useContext(it(n1.useContext(rt)));
        if (!t) throw new Error("No QueryClient set, use QueryClientProvider to set one");
        return t;
    };
    function st() {
        var t = !1;
        return {
            clearReset: function() {
                t = !1;
            },
            reset: function() {
                t = !0;
            },
            isReset: function() {
                return t;
            }
        };
    }
    var ot = n1.createContext(st()), at = function() {
        return n1.useContext(ot);
    };
    function ct(t, e, n) {
        return "function" == typeof e ? e(n) : "boolean" == typeof e ? e : !!t;
    }
    function lt(t58, e43) {
        var r = n1.useRef(!1), i = n1.useState(0)[1], u = ut(), s = at(), o = u.defaultQueryObserverOptions(t58);
        o.optimisticResults = !0, o.onError && (o.onError = A.batchCalls(o.onError)), o.onSuccess && (o.onSuccess = A.batchCalls(o.onSuccess)), o.onSettled && (o.onSettled = A.batchCalls(o.onSettled)), o.suspense && ("number" != typeof o.staleTime && (o.staleTime = 1000), 0 === o.cacheTime && (o.cacheTime = 1)), (o.suspense || o.useErrorBoundary) && (s.isReset() || (o.retryOnMount = !1));
        var a = n1.useState(function() {
            return new e43(u, o);
        })[0], c = a.getOptimisticResult(o);
        if (n1.useEffect(function() {
            r.current = !0, s.clearReset();
            var t59 = a.subscribe(A.batchCalls(function() {
                r.current && i(function(t) {
                    return t + 1;
                });
            }));
            return a.updateResult(), function() {
                r.current = !1, t59();
            };
        }, [
            s,
            a
        ]), n1.useEffect(function() {
            a.setOptions(o, {
                listeners: !1
            });
        }, [
            o,
            a
        ]), o.suspense && c.isLoading) throw a.fetchOptimistic(o).then(function(t) {
            var e = t.data;
            null == o.onSuccess || o.onSuccess(e), null == o.onSettled || o.onSettled(e, null);
        }).catch(function(t) {
            s.clearReset(), null == o.onError || o.onError(t), null == o.onSettled || o.onSettled(void 0, t);
        });
        if (c.isError && !s.isReset() && !c.isFetching && ct(o.suspense, o.useErrorBoundary, c.error)) throw c.error;
        return "tracked" === o.notifyOnChangeProps && (c = a.trackResult(c, o)), c;
    }
    function ht(t, e) {
        var r = ut(), i = n1.useRef(e);
        i.current = e, n1.useMemo(function() {
            t && et(r, t, i.current);
        }, [
            r,
            t
        ]);
    }
    t1.CancelledError = M, t1.Hydrate = function(t) {
        var e = t.children, n = t.options;
        return ht(t.state, n), e;
    }, t1.InfiniteQueryObserver = Y, t1.MutationCache = j, t1.MutationObserver = Z, t1.QueriesObserver = X, t1.QueryCache = T, t1.QueryClient = G, t1.QueryClientProvider = function(t) {
        var e = t.client, r = t.contextSharing, i = void 0 !== r && r, u = t.children;
        n1.useEffect(function() {
            return e.mount(), function() {
                e.unmount();
            };
        }, [
            e
        ]);
        var s = it(i);
        return n1.createElement(rt.Provider, {
            value: i
        }, n1.createElement(s.Provider, {
            value: e
        }, u));
    }, t1.QueryErrorResetBoundary = function(t) {
        var e = t.children, r = n1.useMemo(function() {
            return st();
        }, []);
        return n1.createElement(ot.Provider, {
            value: r
        }, "function" == typeof e ? e(r) : e);
    }, t1.QueryObserver = W, t1.dehydrate = function(t60, e) {
        var n, r, i = [], u = [];
        if (!1 !== (null == (n = e = e || {}) ? void 0 : n.dehydrateMutations)) {
            var s = e.shouldDehydrateMutation || $;
            t60.getMutationCache().getAll().forEach(function(t61) {
                s(t61) && i.push(function(t) {
                    return {
                        mutationKey: t.options.mutationKey,
                        state: t.state
                    };
                }(t61));
            });
        }
        if (!1 !== (null == (r = e) ? void 0 : r.dehydrateQueries)) {
            var o = e.shouldDehydrateQuery || tt;
            t60.getQueryCache().getAll().forEach(function(t62) {
                o(t62) && u.push(function(t) {
                    return {
                        state: t.state,
                        queryKey: t.queryKey,
                        queryHash: t.queryHash
                    };
                }(t62));
            });
        }
        return {
            mutations: i,
            queries: u
        };
    }, t1.focusManager = S1, t1.hashQueryKey = m1, t1.hydrate = et, t1.isCancelledError = w, t1.isError = function(t) {
        return t instanceof Error;
    }, t1.notifyManager = A, t1.onlineManager = Q1, t1.setLogger = function(t) {
        D = t;
    }, t1.useHydrate = ht, t1.useInfiniteQuery = function(t, e, n) {
        return lt(f1(t, e, n), Y);
    }, t1.useIsFetching = function(t63, e) {
        var r = n1.useRef(!1), i = ut(), u = d1(t63, e)[0], s = n1.useState(i.isFetching(u)), o = s[0], a = s[1], c = n1.useRef(u);
        c.current = u;
        var l = n1.useRef(o);
        return l.current = o, n1.useEffect(function() {
            r.current = !0;
            var t64 = i.getQueryCache().subscribe(A.batchCalls(function() {
                if (r.current) {
                    var t = i.isFetching(c.current);
                    l.current !== t && a(t);
                }
            }));
            return function() {
                r.current = !1, t64();
            };
        }, [
            i
        ]), o;
    }, t1.useIsMutating = function(t65, e44) {
        var r = n1.useRef(!1), i = function(t, e) {
            return R1(t) ? u1({}, e, {
                mutationKey: t
            }) : t;
        }(t65, e44), s = ut(), o = n1.useState(s.isMutating(i)), a = o[0], c = o[1], l = n1.useRef(i);
        l.current = i;
        var h = n1.useRef(a);
        return h.current = a, n1.useEffect(function() {
            r.current = !0;
            var t66 = s.getMutationCache().subscribe(A.batchCalls(function() {
                if (r.current) {
                    var t = s.isMutating(l.current);
                    h.current !== t && c(t);
                }
            }));
            return function() {
                r.current = !1, t66();
            };
        }, [
            s
        ]), a;
    }, t1.useMutation = function(t67, e45, r) {
        var i = n1.useRef(!1), s = n1.useState(0)[1], a = function(t, e, n) {
            return R1(t) ? "function" == typeof e ? u1({}, n, {
                mutationKey: t,
                mutationFn: e
            }) : u1({}, e, {
                mutationKey: t
            }) : "function" == typeof t ? u1({}, e, {
                mutationFn: t
            }) : u1({}, t);
        }(t67, e45, r), c = ut(), l = n1.useRef();
        l.current ? l.current.setOptions(a) : l.current = new Z(c, a);
        var h = l.current.getCurrentResult();
        n1.useEffect(function() {
            i.current = !0;
            var t68 = l.current.subscribe(A.batchCalls(function() {
                i.current && s(function(t) {
                    return t + 1;
                });
            }));
            return function() {
                i.current = !1, t68();
            };
        }, []);
        var f = n1.useCallback(function(t, e) {
            l.current.mutate(t, e).catch(o1);
        }, []);
        if (h.error && ct(void 0, l.current.options.useErrorBoundary, h.error)) throw h.error;
        return u1({}, h, {
            mutate: f,
            mutateAsync: h.mutate
        });
    }, t1.useQueries = function(t69) {
        var r = n1.useRef(!1), i = n1.useState(0)[1], u = ut(), s = e1.useMemo(function() {
            return t69.map(function(t) {
                var e = u.defaultQueryObserverOptions(t);
                return e.optimisticResults = !0, e;
            });
        }, [
            t69,
            u
        ]), o = n1.useState(function() {
            return new X(u, s);
        })[0], a = o.getOptimisticResult(s);
        return n1.useEffect(function() {
            r.current = !0;
            var t70 = o.subscribe(A.batchCalls(function() {
                r.current && i(function(t) {
                    return t + 1;
                });
            }));
            return function() {
                r.current = !1, t70();
            };
        }, [
            o
        ]), n1.useEffect(function() {
            o.setQueries(s, {
                listeners: !1
            });
        }, [
            s,
            o
        ]), a;
    }, t1.useQuery = function(t, e, n) {
        return lt(f1(t, e, n), W);
    }, t1.useQueryClient = ut, t1.useQueryErrorResetBoundary = at, Object.defineProperty(t1, "__esModule", {
        value: !0
    });
}); //# sourceMappingURL=react-query.production.min.js.map

//# sourceMappingURL=react-query.production.min.js.map