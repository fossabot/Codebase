"use strict";
!function(t, e) {
    "object" == typeof exports && "undefined" != typeof module ? e(exports) : "function" == typeof define && define.amd ? define([
        "exports"
    ], e) : e((t = t || self).ReactQueryCore = {});
}(void 0, function(t1) {
    "use strict";
    function e1(t, e) {
        t.prototype = Object.create(e.prototype), t.prototype.constructor = t, t.__proto__ = e;
    }
    var n1 = function() {
        function t2() {
            this.listeners = [];
        }
        var e2 = t2.prototype;
        return e2.subscribe = function(t3) {
            var e = this, n = t3 || function() {};
            return this.listeners.push(n), this.onSubscribe(), function() {
                e.listeners = e.listeners.filter(function(t) {
                    return t !== n;
                }), e.onUnsubscribe();
            };
        }, e2.hasListeners = function() {
            return this.listeners.length > 0;
        }, e2.onSubscribe = function() {}, e2.onUnsubscribe = function() {}, t2;
    }();
    function i1() {
        return (i1 = Object.assign || function(t) {
            for(var e = 1; e < arguments.length; e++){
                var n = arguments[e];
                for(var i in n)Object.prototype.hasOwnProperty.call(n, i) && (t[i] = n[i]);
            }
            return t;
        }).apply(this, arguments);
    }
    var r1 = "undefined" == typeof window;
    function s1() {}
    function u1(t) {
        return "number" == typeof t && t >= 0 && t !== 1 / 0;
    }
    function o1(t) {
        return Array.isArray(t) ? t : [
            t
        ];
    }
    function a1(t4, e) {
        return t4.filter(function(t) {
            return -1 === e.indexOf(t);
        });
    }
    function c1(t, e) {
        return Math.max(t + (e || 0) - Date.now(), 0);
    }
    function l1(t, e, n) {
        return O1(t) ? "function" == typeof e ? i1({}, n, {
            queryKey: t,
            queryFn: e
        }) : i1({}, e, {
            queryKey: t
        }) : t;
    }
    function h1(t, e, n) {
        return O1(t) ? [
            i1({}, e, {
                queryKey: t
            }),
            n
        ] : [
            t || {},
            e
        ];
    }
    function f1(t5, e3) {
        var n = t5.active, i = t5.exact, r = t5.fetching, s = t5.inactive, u = t5.predicate, o = t5.queryKey, a = t5.stale;
        if (O1(o)) {
            if (i) {
                if (e3.queryHash !== v1(o, e3.options)) return !1;
            } else if (!y1(e3.queryKey, o)) return !1;
        }
        var c = function(t, e) {
            return !0 === t && !0 === e || null == t && null == e ? "all" : !1 === t && !1 === e ? "none" : (null != t ? t : !e) ? "active" : "inactive";
        }(n, s);
        if ("none" === c) return !1;
        if ("all" !== c) {
            var l = e3.isActive();
            if ("active" === c && !l) return !1;
            if ("inactive" === c && l) return !1;
        }
        return ("boolean" != typeof a || e3.isStale() === a) && ("boolean" != typeof r || e3.isFetching() === r) && !(u && !u(e3));
    }
    function d1(t, e) {
        var n = t.exact, i = t.fetching, r = t.predicate, s = t.mutationKey;
        if (O1(s)) {
            if (!e.options.mutationKey) return !1;
            if (n) {
                if (p1(e.options.mutationKey) !== p1(s)) return !1;
            } else if (!y1(e.options.mutationKey, s)) return !1;
        }
        return ("boolean" != typeof i || "loading" === e.state.status === i) && !(r && !r(e));
    }
    function v1(t, e) {
        return ((null == e ? void 0 : e.queryKeyHashFn) || p1)(t);
    }
    function p1(t6) {
        var e4, n2 = o1(t6);
        return e4 = n2, JSON.stringify(e4, function(t7, e) {
            return b1(e) ? Object.keys(e).sort().reduce(function(t, n) {
                return t[n] = e[n], t;
            }, {}) : e;
        });
    }
    function y1(t8, e5) {
        return (function t(e, n) {
            if (e === n) return !0;
            if (typeof e != typeof n) return !1;
            if (e && n && "object" == typeof e && "object" == typeof n) return !Object.keys(n).some(function(i) {
                return !t(e[i], n[i]);
            });
            return !1;
        })(o1(t8), o1(e5));
    }
    function m1(t, e) {
        if (t === e) return t;
        var n = Array.isArray(t) && Array.isArray(e);
        if (n || b1(t) && b1(e)) {
            for(var i = n ? t.length : Object.keys(t).length, r = n ? e : Object.keys(e), s = r.length, u = n ? [] : {}, o = 0, a = 0; a < s; a++){
                var c = n ? a : r[a];
                u[c] = m1(t[c], e[c]), u[c] === t[c] && o++;
            }
            return i === s && o === i ? t : u;
        }
        return e;
    }
    function b1(t) {
        if (!g1(t)) return !1;
        var e = t.constructor;
        if (void 0 === e) return !0;
        var n = e.prototype;
        return !!g1(n) && !!n.hasOwnProperty("isPrototypeOf");
    }
    function g1(t) {
        return "[object Object]" === Object.prototype.toString.call(t);
    }
    function O1(t) {
        return "string" == typeof t || Array.isArray(t);
    }
    function P1(t9) {
        Promise.resolve().then(t9).catch(function(t) {
            return setTimeout(function() {
                throw t;
            });
        });
    }
    function q1() {
        if ("function" == typeof AbortController) return new AbortController;
    }
    var C1 = new (function(t10) {
        function n3() {
            var e6;
            return (e6 = t10.call(this) || this).setup = function(t) {
                var e;
                if (!r1 && (null == (e = window) ? void 0 : e.addEventListener)) {
                    var n = function() {
                        return t();
                    };
                    return window.addEventListener("visibilitychange", n, !1), window.addEventListener("focus", n, !1), function() {
                        window.removeEventListener("visibilitychange", n), window.removeEventListener("focus", n);
                    };
                }
            }, e6;
        }
        e1(n3, t10);
        var i = n3.prototype;
        return i.onSubscribe = function() {
            this.cleanup || this.setEventListener(this.setup);
        }, i.onUnsubscribe = function() {
            var t;
            this.hasListeners() || (null == (t = this.cleanup) || t.call(this), this.cleanup = void 0);
        }, i.setEventListener = function(t11) {
            var e, n = this;
            this.setup = t11, null == (e = this.cleanup) || e.call(this), this.cleanup = t11(function(t) {
                "boolean" == typeof t ? n.setFocused(t) : n.onFocus();
            });
        }, i.setFocused = function(t) {
            this.focused = t, t && this.onFocus();
        }, i.onFocus = function() {
            this.listeners.forEach(function(t) {
                t();
            });
        }, i.isFocused = function() {
            return "boolean" == typeof this.focused ? this.focused : "undefined" == typeof document || [
                void 0,
                "visible",
                "prerender"
            ].includes(document.visibilityState);
        }, n3;
    }(n1)), R1 = new (function(t12) {
        function n4() {
            var e7;
            return (e7 = t12.call(this) || this).setup = function(t) {
                var e;
                if (!r1 && (null == (e = window) ? void 0 : e.addEventListener)) {
                    var n = function() {
                        return t();
                    };
                    return window.addEventListener("online", n, !1), window.addEventListener("offline", n, !1), function() {
                        window.removeEventListener("online", n), window.removeEventListener("offline", n);
                    };
                }
            }, e7;
        }
        e1(n4, t12);
        var i = n4.prototype;
        return i.onSubscribe = function() {
            this.cleanup || this.setEventListener(this.setup);
        }, i.onUnsubscribe = function() {
            var t;
            this.hasListeners() || (null == (t = this.cleanup) || t.call(this), this.cleanup = void 0);
        }, i.setEventListener = function(t13) {
            var e, n = this;
            this.setup = t13, null == (e = this.cleanup) || e.call(this), this.cleanup = t13(function(t) {
                "boolean" == typeof t ? n.setOnline(t) : n.onOnline();
            });
        }, i.setOnline = function(t) {
            this.online = t, t && this.onOnline();
        }, i.onOnline = function() {
            this.listeners.forEach(function(t) {
                t();
            });
        }, i.isOnline = function() {
            return "boolean" == typeof this.online ? this.online : "undefined" == typeof navigator || void 0 === navigator.onLine || navigator.onLine;
        }, n4;
    }(n1));
    function Q1(t) {
        return Math.min(1000 * Math.pow(2, t), 30000);
    }
    function S(t) {
        return "function" == typeof (null == t ? void 0 : t.cancel);
    }
    var F1 = function(t) {
        this.revert = null == t ? void 0 : t.revert, this.silent = null == t ? void 0 : t.silent;
    };
    function E1(t) {
        return t instanceof F1;
    }
    var M = function(t14) {
        var e8, n, i2, r2, s = this, u = !1;
        this.abort = t14.abort, this.cancel = function(t) {
            return null == e8 ? void 0 : e8(t);
        }, this.cancelRetry = function() {
            u = !0;
        }, this.continueRetry = function() {
            u = !1;
        }, this.continue = function() {
            return null == n ? void 0 : n();
        }, this.failureCount = 0, this.isPaused = !1, this.isResolved = !1, this.isTransportCancelable = !1, this.promise = new Promise(function(t, e) {
            i2 = t, r2 = e;
        });
        var o2 = function(e) {
            s.isResolved || (s.isResolved = !0, null == t14.onSuccess || t14.onSuccess(e), null == n || n(), i2(e));
        }, a = function(e) {
            s.isResolved || (s.isResolved = !0, null == t14.onError || t14.onError(e), null == n || n(), r2(e));
        };
        !function i() {
            if (!s.isResolved) {
                var r3;
                try {
                    r3 = t14.fn();
                } catch (t15) {
                    r3 = Promise.reject(t15);
                }
                e8 = function(t) {
                    if (!s.isResolved && (a(new F1(t)), null == s.abort || s.abort(), S(r3))) try {
                        r3.cancel();
                    } catch (t17) {}
                }, s.isTransportCancelable = S(r3), Promise.resolve(r3).then(o2).catch(function(e9) {
                    var r, o;
                    if (!s.isResolved) {
                        var c, l = null != (r = t14.retry) ? r : 3, h = null != (o = t14.retryDelay) ? o : Q1, f = "function" == typeof h ? h(s.failureCount, e9) : h, d = !0 === l || "number" == typeof l && s.failureCount < l || "function" == typeof l && l(s.failureCount, e9);
                        if (!u && d) s.failureCount++, null == t14.onFail || t14.onFail(s.failureCount, e9), (c = f, new Promise(function(t) {
                            setTimeout(t, c);
                        })).then(function() {
                            if (!C1.isFocused() || !R1.isOnline()) return new Promise(function(e) {
                                n = e, s.isPaused = !0, null == t14.onPause || t14.onPause();
                            }).then(function() {
                                n = void 0, s.isPaused = !1, null == t14.onContinue || t14.onContinue();
                            });
                        }).then(function() {
                            u ? a(e9) : i();
                        });
                        else a(e9);
                    }
                });
            }
        }();
    }, w = new (function() {
        function t18() {
            this.queue = [], this.transactions = 0, this.notifyFn = function(t) {
                t();
            }, this.batchNotifyFn = function(t) {
                t();
            };
        }
        var e10 = t18.prototype;
        return e10.batch = function(t) {
            var e;
            this.transactions++;
            try {
                e = t();
            } finally{
                this.transactions--, this.transactions || this.flush();
            }
            return e;
        }, e10.schedule = function(t) {
            var e = this;
            this.transactions ? this.queue.push(t) : P1(function() {
                e.notifyFn(t);
            });
        }, e10.batchCalls = function(t) {
            var e = this;
            return function() {
                for(var n = arguments.length, i = new Array(n), r = 0; r < n; r++)i[r] = arguments[r];
                e.schedule(function() {
                    t.apply(void 0, i);
                });
            };
        }, e10.flush = function() {
            var t = this, e11 = this.queue;
            this.queue = [], e11.length && P1(function() {
                t.batchNotifyFn(function() {
                    e11.forEach(function(e) {
                        t.notifyFn(e);
                    });
                });
            });
        }, e10.setNotifyFunction = function(t) {
            this.notifyFn = t;
        }, e10.setBatchNotifyFunction = function(t) {
            this.batchNotifyFn = t;
        }, t18;
    }()), A = console;
    function D() {
        return A;
    }
    var x = function() {
        function t19(t) {
            this.abortSignalConsumed = !1, this.hadObservers = !1, this.defaultOptions = t.defaultOptions, this.setOptions(t.options), this.observers = [], this.cache = t.cache, this.queryKey = t.queryKey, this.queryHash = t.queryHash, this.initialState = t.state || this.getDefaultState(this.options), this.state = this.initialState, this.meta = t.meta, this.scheduleGc();
        }
        var e12 = t19.prototype;
        return e12.setOptions = function(t) {
            var e;
            this.options = i1({}, this.defaultOptions, t), this.meta = null == t ? void 0 : t.meta, this.cacheTime = Math.max(this.cacheTime || 0, null != (e = this.options.cacheTime) ? e : 300000);
        }, e12.setDefaultOptions = function(t) {
            this.defaultOptions = t;
        }, e12.scheduleGc = function() {
            var t = this;
            this.clearGcTimeout(), u1(this.cacheTime) && (this.gcTimeout = setTimeout(function() {
                t.optionalRemove();
            }, this.cacheTime));
        }, e12.clearGcTimeout = function() {
            clearTimeout(this.gcTimeout), this.gcTimeout = void 0;
        }, e12.optionalRemove = function() {
            this.observers.length || (this.state.isFetching ? this.hadObservers && this.scheduleGc() : this.cache.remove(this));
        }, e12.setData = function(t20, e13) {
            var n, i, r = this.state.data, s = function(t, e) {
                return "function" == typeof t ? t(e) : t;
            }(t20, r);
            return (null == (n = (i = this.options).isDataEqual) ? void 0 : n.call(i, r, s)) ? s = r : !1 !== this.options.structuralSharing && (s = m1(r, s)), this.dispatch({
                data: s,
                type: "success",
                dataUpdatedAt: null == e13 ? void 0 : e13.updatedAt
            }), s;
        }, e12.setState = function(t, e) {
            this.dispatch({
                type: "setState",
                state: t,
                setStateOptions: e
            });
        }, e12.cancel = function(t) {
            var e, n = this.promise;
            return null == (e = this.retryer) || e.cancel(t), n ? n.then(s1).catch(s1) : Promise.resolve();
        }, e12.destroy = function() {
            this.clearGcTimeout(), this.cancel({
                silent: !0
            });
        }, e12.reset = function() {
            this.destroy(), this.setState(this.initialState);
        }, e12.isActive = function() {
            return this.observers.some(function(t) {
                return !1 !== t.options.enabled;
            });
        }, e12.isFetching = function() {
            return this.state.isFetching;
        }, e12.isStale = function() {
            return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(function(t) {
                return t.getCurrentResult().isStale;
            });
        }, e12.isStaleByTime = function(t) {
            return void 0 === t && (t = 0), this.state.isInvalidated || !this.state.dataUpdatedAt || !c1(this.state.dataUpdatedAt, t);
        }, e12.onFocus = function() {
            var t21, e = this.observers.find(function(t) {
                return t.shouldFetchOnWindowFocus();
            });
            e && e.refetch(), null == (t21 = this.retryer) || t21.continue();
        }, e12.onOnline = function() {
            var t22, e = this.observers.find(function(t) {
                return t.shouldFetchOnReconnect();
            });
            e && e.refetch(), null == (t22 = this.retryer) || t22.continue();
        }, e12.addObserver = function(t) {
            -1 === this.observers.indexOf(t) && (this.observers.push(t), this.hadObservers = !0, this.clearGcTimeout(), this.cache.notify({
                type: "observerAdded",
                query: this,
                observer: t
            }));
        }, e12.removeObserver = function(t) {
            -1 !== this.observers.indexOf(t) && (this.observers = this.observers.filter(function(e) {
                return e !== t;
            }), this.observers.length || (this.retryer && (this.retryer.isTransportCancelable || this.abortSignalConsumed ? this.retryer.cancel({
                revert: !0
            }) : this.retryer.cancelRetry()), this.cacheTime ? this.scheduleGc() : this.cache.remove(this)), this.cache.notify({
                type: "observerRemoved",
                query: this,
                observer: t
            }));
        }, e12.getObserversCount = function() {
            return this.observers.length;
        }, e12.invalidate = function() {
            this.state.isInvalidated || this.dispatch({
                type: "invalidate"
            });
        }, e12.fetch = function(t23, e) {
            var n, i, r, s = this;
            if (this.state.isFetching) {
                if (this.state.dataUpdatedAt && (null == e ? void 0 : e.cancelRefetch)) this.cancel({
                    silent: !0
                });
                else if (this.promise) {
                    var u;
                    return null == (u = this.retryer) || u.continueRetry(), this.promise;
                }
            }
            if (t23 && this.setOptions(t23), !this.options.queryFn) {
                var a = this.observers.find(function(t) {
                    return t.options.queryFn;
                });
                a && this.setOptions(a.options);
            }
            var c = o1(this.queryKey), l = q1(), h = {
                queryKey: c,
                pageParam: void 0,
                meta: this.meta
            };
            Object.defineProperty(h, "signal", {
                enumerable: !0,
                get: function() {
                    if (l) return s.abortSignalConsumed = !0, l.signal;
                }
            });
            var f, d, v = {
                fetchOptions: e,
                options: this.options,
                queryKey: c,
                state: this.state,
                fetchFn: function() {
                    return s.options.queryFn ? (s.abortSignalConsumed = !1, s.options.queryFn(h)) : Promise.reject("Missing queryFn");
                },
                meta: this.meta
            };
            (null == (n = this.options.behavior) ? void 0 : n.onFetch) && (null == (f = this.options.behavior) || f.onFetch(v));
            (this.revertState = this.state, this.state.isFetching && this.state.fetchMeta === (null == (i = v.fetchOptions) ? void 0 : i.meta)) || this.dispatch({
                type: "fetch",
                meta: null == (d = v.fetchOptions) ? void 0 : d.meta
            });
            return this.retryer = new M({
                fn: v.fetchFn,
                abort: null == l || null == (r = l.abort) ? void 0 : r.bind(l),
                onSuccess: function(t) {
                    s.setData(t), null == s.cache.config.onSuccess || s.cache.config.onSuccess(t, s), 0 === s.cacheTime && s.optionalRemove();
                },
                onError: function(t) {
                    E1(t) && t.silent || s.dispatch({
                        type: "error",
                        error: t
                    }), E1(t) || (null == s.cache.config.onError || s.cache.config.onError(t, s), D().error(t)), 0 === s.cacheTime && s.optionalRemove();
                },
                onFail: function() {
                    s.dispatch({
                        type: "failed"
                    });
                },
                onPause: function() {
                    s.dispatch({
                        type: "pause"
                    });
                },
                onContinue: function() {
                    s.dispatch({
                        type: "continue"
                    });
                },
                retry: v.options.retry,
                retryDelay: v.options.retryDelay
            }), this.promise = this.retryer.promise, this.promise;
        }, e12.dispatch = function(t) {
            var e14 = this;
            this.state = this.reducer(this.state, t), w.batch(function() {
                e14.observers.forEach(function(e) {
                    e.onQueryUpdate(t);
                }), e14.cache.notify({
                    query: e14,
                    type: "queryUpdated",
                    action: t
                });
            });
        }, e12.getDefaultState = function(t) {
            var e = "function" == typeof t.initialData ? t.initialData() : t.initialData, n = void 0 !== t.initialData ? "function" == typeof t.initialDataUpdatedAt ? t.initialDataUpdatedAt() : t.initialDataUpdatedAt : 0, i = void 0 !== e;
            return {
                data: e,
                dataUpdateCount: 0,
                dataUpdatedAt: i ? null != n ? n : Date.now() : 0,
                error: null,
                errorUpdateCount: 0,
                errorUpdatedAt: 0,
                fetchFailureCount: 0,
                fetchMeta: null,
                isFetching: !1,
                isInvalidated: !1,
                isPaused: !1,
                status: i ? "success" : "idle"
            };
        }, e12.reducer = function(t, e) {
            var n, r;
            switch(e.type){
                case "failed":
                    return i1({}, t, {
                        fetchFailureCount: t.fetchFailureCount + 1
                    });
                case "pause":
                    return i1({}, t, {
                        isPaused: !0
                    });
                case "continue":
                    return i1({}, t, {
                        isPaused: !1
                    });
                case "fetch":
                    return i1({}, t, {
                        fetchFailureCount: 0,
                        fetchMeta: null != (n = e.meta) ? n : null,
                        isFetching: !0,
                        isPaused: !1
                    }, !t.dataUpdatedAt && {
                        error: null,
                        status: "loading"
                    });
                case "success":
                    return i1({}, t, {
                        data: e.data,
                        dataUpdateCount: t.dataUpdateCount + 1,
                        dataUpdatedAt: null != (r = e.dataUpdatedAt) ? r : Date.now(),
                        error: null,
                        fetchFailureCount: 0,
                        isFetching: !1,
                        isInvalidated: !1,
                        isPaused: !1,
                        status: "success"
                    });
                case "error":
                    var s = e.error;
                    return E1(s) && s.revert && this.revertState ? i1({}, this.revertState) : i1({}, t, {
                        error: s,
                        errorUpdateCount: t.errorUpdateCount + 1,
                        errorUpdatedAt: Date.now(),
                        fetchFailureCount: t.fetchFailureCount + 1,
                        isFetching: !1,
                        isPaused: !1,
                        status: "error"
                    });
                case "invalidate":
                    return i1({}, t, {
                        isInvalidated: !0
                    });
                case "setState":
                    return i1({}, t, e.state);
                default:
                    return t;
            }
        }, t19;
    }(), U = function(t24) {
        function n5(e) {
            var n;
            return (n = t24.call(this) || this).config = e || {}, n.queries = [], n.queriesMap = {}, n;
        }
        e1(n5, t24);
        var i3 = n5.prototype;
        return i3.build = function(t, e, n) {
            var i, r = e.queryKey, s = null != (i = e.queryHash) ? i : v1(r, e), u = this.get(s);
            return u || (u = new x({
                cache: this,
                queryKey: r,
                queryHash: s,
                options: t.defaultQueryOptions(e),
                state: n,
                defaultOptions: t.getQueryDefaults(r),
                meta: e.meta
            }), this.add(u)), u;
        }, i3.add = function(t) {
            this.queriesMap[t.queryHash] || (this.queriesMap[t.queryHash] = t, this.queries.push(t), this.notify({
                type: "queryAdded",
                query: t
            }));
        }, i3.remove = function(t) {
            var e15 = this.queriesMap[t.queryHash];
            e15 && (t.destroy(), this.queries = this.queries.filter(function(e) {
                return e !== t;
            }), e15 === t && delete this.queriesMap[t.queryHash], this.notify({
                type: "queryRemoved",
                query: t
            }));
        }, i3.clear = function() {
            var t = this;
            w.batch(function() {
                t.queries.forEach(function(e) {
                    t.remove(e);
                });
            });
        }, i3.get = function(t) {
            return this.queriesMap[t];
        }, i3.getAll = function() {
            return this.queries;
        }, i3.find = function(t25, e) {
            var n = h1(t25, e)[0];
            return void 0 === n.exact && (n.exact = !0), this.queries.find(function(t) {
                return f1(n, t);
            });
        }, i3.findAll = function(t26, e) {
            var n = h1(t26, e)[0];
            return Object.keys(n).length > 0 ? this.queries.filter(function(t) {
                return f1(n, t);
            }) : this.queries;
        }, i3.notify = function(t) {
            var e16 = this;
            w.batch(function() {
                e16.listeners.forEach(function(e) {
                    e(t);
                });
            });
        }, i3.onFocus = function() {
            var t27 = this;
            w.batch(function() {
                t27.queries.forEach(function(t) {
                    t.onFocus();
                });
            });
        }, i3.onOnline = function() {
            var t28 = this;
            w.batch(function() {
                t28.queries.forEach(function(t) {
                    t.onOnline();
                });
            });
        }, n5;
    }(n1), I = function() {
        function t29(t) {
            this.options = i1({}, t.defaultOptions, t.options), this.mutationId = t.mutationId, this.mutationCache = t.mutationCache, this.observers = [], this.state = t.state || T(), this.meta = t.meta;
        }
        var e17 = t29.prototype;
        return e17.setState = function(t) {
            this.dispatch({
                type: "setState",
                state: t
            });
        }, e17.addObserver = function(t) {
            -1 === this.observers.indexOf(t) && this.observers.push(t);
        }, e17.removeObserver = function(t) {
            this.observers = this.observers.filter(function(e) {
                return e !== t;
            });
        }, e17.cancel = function() {
            return this.retryer ? (this.retryer.cancel(), this.retryer.promise.then(s1).catch(s1)) : Promise.resolve();
        }, e17.continue = function() {
            return this.retryer ? (this.retryer.continue(), this.retryer.promise) : this.execute();
        }, e17.execute = function() {
            var t30, e = this, n6 = "loading" === this.state.status, i = Promise.resolve();
            return n6 || (this.dispatch({
                type: "loading",
                variables: this.options.variables
            }), i = i.then(function() {
                null == e.mutationCache.config.onMutate || e.mutationCache.config.onMutate(e.state.variables, e);
            }).then(function() {
                return null == e.options.onMutate ? void 0 : e.options.onMutate(e.state.variables);
            }).then(function(t) {
                t !== e.state.context && e.dispatch({
                    type: "loading",
                    context: t,
                    variables: e.state.variables
                });
            })), i.then(function() {
                return e.executeMutation();
            }).then(function(n) {
                t30 = n, null == e.mutationCache.config.onSuccess || e.mutationCache.config.onSuccess(t30, e.state.variables, e.state.context, e);
            }).then(function() {
                return null == e.options.onSuccess ? void 0 : e.options.onSuccess(t30, e.state.variables, e.state.context);
            }).then(function() {
                return null == e.options.onSettled ? void 0 : e.options.onSettled(t30, null, e.state.variables, e.state.context);
            }).then(function() {
                return e.dispatch({
                    type: "success",
                    data: t30
                }), t30;
            }).catch(function(t) {
                return null == e.mutationCache.config.onError || e.mutationCache.config.onError(t, e.state.variables, e.state.context, e), D().error(t), Promise.resolve().then(function() {
                    return null == e.options.onError ? void 0 : e.options.onError(t, e.state.variables, e.state.context);
                }).then(function() {
                    return null == e.options.onSettled ? void 0 : e.options.onSettled(void 0, t, e.state.variables, e.state.context);
                }).then(function() {
                    throw e.dispatch({
                        type: "error",
                        error: t
                    }), t;
                });
            });
        }, e17.executeMutation = function() {
            var t, e = this;
            return this.retryer = new M({
                fn: function() {
                    return e.options.mutationFn ? e.options.mutationFn(e.state.variables) : Promise.reject("No mutationFn found");
                },
                onFail: function() {
                    e.dispatch({
                        type: "failed"
                    });
                },
                onPause: function() {
                    e.dispatch({
                        type: "pause"
                    });
                },
                onContinue: function() {
                    e.dispatch({
                        type: "continue"
                    });
                },
                retry: null != (t = this.options.retry) ? t : 0,
                retryDelay: this.options.retryDelay
            }), this.retryer.promise;
        }, e17.dispatch = function(t31) {
            var e18 = this;
            this.state = (function(t, e) {
                switch(e.type){
                    case "failed":
                        return i1({}, t, {
                            failureCount: t.failureCount + 1
                        });
                    case "pause":
                        return i1({}, t, {
                            isPaused: !0
                        });
                    case "continue":
                        return i1({}, t, {
                            isPaused: !1
                        });
                    case "loading":
                        return i1({}, t, {
                            context: e.context,
                            data: void 0,
                            error: null,
                            isPaused: !1,
                            status: "loading",
                            variables: e.variables
                        });
                    case "success":
                        return i1({}, t, {
                            data: e.data,
                            error: null,
                            status: "success",
                            isPaused: !1
                        });
                    case "error":
                        return i1({}, t, {
                            data: void 0,
                            error: e.error,
                            failureCount: t.failureCount + 1,
                            isPaused: !1,
                            status: "error"
                        });
                    case "setState":
                        return i1({}, t, e.state);
                    default:
                        return t;
                }
            })(this.state, t31), w.batch(function() {
                e18.observers.forEach(function(e) {
                    e.onMutationUpdate(t31);
                }), e18.mutationCache.notify(e18);
            });
        }, t29;
    }();
    function T() {
        return {
            context: void 0,
            data: void 0,
            error: null,
            failureCount: 0,
            isPaused: !1,
            status: "idle",
            variables: void 0
        };
    }
    var K = function(t32) {
        function n7(e) {
            var n;
            return (n = t32.call(this) || this).config = e || {}, n.mutations = [], n.mutationId = 0, n;
        }
        e1(n7, t32);
        var i4 = n7.prototype;
        return i4.build = function(t, e, n) {
            var i = new I({
                mutationCache: this,
                mutationId: ++this.mutationId,
                options: t.defaultMutationOptions(e),
                state: n,
                defaultOptions: e.mutationKey ? t.getMutationDefaults(e.mutationKey) : void 0,
                meta: e.meta
            });
            return this.add(i), i;
        }, i4.add = function(t) {
            this.mutations.push(t), this.notify(t);
        }, i4.remove = function(t) {
            this.mutations = this.mutations.filter(function(e) {
                return e !== t;
            }), t.cancel(), this.notify(t);
        }, i4.clear = function() {
            var t = this;
            w.batch(function() {
                t.mutations.forEach(function(e) {
                    t.remove(e);
                });
            });
        }, i4.getAll = function() {
            return this.mutations;
        }, i4.find = function(t) {
            return void 0 === t.exact && (t.exact = !0), this.mutations.find(function(e) {
                return d1(t, e);
            });
        }, i4.findAll = function(t) {
            return this.mutations.filter(function(e) {
                return d1(t, e);
            });
        }, i4.notify = function(t) {
            var e19 = this;
            w.batch(function() {
                e19.listeners.forEach(function(e) {
                    e(t);
                });
            });
        }, i4.onFocus = function() {
            this.resumePausedMutations();
        }, i4.onOnline = function() {
            this.resumePausedMutations();
        }, i4.resumePausedMutations = function() {
            var t33 = this.mutations.filter(function(t) {
                return t.state.isPaused;
            });
            return w.batch(function() {
                return t33.reduce(function(t, e) {
                    return t.then(function() {
                        return e.continue().catch(s1);
                    });
                }, Promise.resolve());
            });
        }, n7;
    }(n1);
    function L() {
        return {
            onFetch: function(t34) {
                t34.fetchFn = function() {
                    var e20, n8, i5, r5, s2, u2, o3, a = null == (e20 = t34.fetchOptions) || null == (n8 = e20.meta) ? void 0 : n8.refetchPage, c = null == (i5 = t34.fetchOptions) || null == (r5 = i5.meta) ? void 0 : r5.fetchMore, l = null == c ? void 0 : c.pageParam, h = "forward" === (null == c ? void 0 : c.direction), f = "backward" === (null == c ? void 0 : c.direction), d = (null == (s2 = t34.state.data) ? void 0 : s2.pages) || [], v = (null == (u2 = t34.state.data) ? void 0 : u2.pageParams) || [], p = q1(), y = null == p ? void 0 : p.signal, m = v, b = !1, g = t34.options.queryFn || function() {
                        return Promise.reject("Missing queryFn");
                    }, O = function(t, e, n, i) {
                        return m = i ? [
                            e
                        ].concat(m) : [].concat(m, [
                            e
                        ]), i ? [
                            n
                        ].concat(t) : [].concat(t, [
                            n
                        ]);
                    }, P = function(e, n, i, r) {
                        if (b) return Promise.reject("Cancelled");
                        if (void 0 === i && !n && e.length) return Promise.resolve(e);
                        var s = {
                            queryKey: t34.queryKey,
                            signal: y,
                            pageParam: i,
                            meta: t34.meta
                        }, u = g(s), o = Promise.resolve(u).then(function(t) {
                            return O(e, i, t, r);
                        });
                        S(u) && (o.cancel = u.cancel);
                        return o;
                    };
                    if (d.length) if (h) {
                        var C = void 0 !== l, R = C ? l : j(t34.options, d);
                        o3 = P(d, C, R);
                    } else if (f) {
                        var Q = void 0 !== l, F = Q ? l : H(t34.options, d);
                        o3 = P(d, Q, F, !0);
                    } else !function() {
                        m = [];
                        var e = void 0 === t34.options.getNextPageParam, n9 = !a || !d[0] || a(d[0], 0, d);
                        o3 = n9 ? P([], e, v[0]) : Promise.resolve(O([], v[0], d[0]));
                        for(var i6 = function(n) {
                            o3 = o3.then(function(i) {
                                if (!a || !d[n] || a(d[n], n, d)) {
                                    var r = e ? v[n] : j(t34.options, i);
                                    return P(i, e, r);
                                }
                                return Promise.resolve(O(i, v[n], d[n]));
                            });
                        }, r6 = 1; r6 < d.length; r6++)i6(r6);
                    }();
                    else o3 = P([]);
                    var E = o3.then(function(t) {
                        return {
                            pages: t,
                            pageParams: m
                        };
                    });
                    return E.cancel = function() {
                        b = !0, null == p || p.abort(), S(o3) && o3.cancel();
                    }, E;
                };
            }
        };
    }
    function j(t, e) {
        return null == t.getNextPageParam ? void 0 : t.getNextPageParam(e[e.length - 1], e);
    }
    function H(t, e) {
        return null == t.getPreviousPageParam ? void 0 : t.getPreviousPageParam(e[0], e);
    }
    function k(t, e) {
        if (t.getNextPageParam && Array.isArray(e)) {
            var n = j(t, e);
            return null != n && !1 !== n;
        }
    }
    function N(t, e) {
        if (t.getPreviousPageParam && Array.isArray(e)) {
            var n = H(t, e);
            return null != n && !1 !== n;
        }
    }
    var _ = function() {
        function t35(t) {
            void 0 === t && (t = {}), this.queryCache = t.queryCache || new U, this.mutationCache = t.mutationCache || new K, this.defaultOptions = t.defaultOptions || {}, this.queryDefaults = [], this.mutationDefaults = [];
        }
        var e21 = t35.prototype;
        return e21.mount = function() {
            var t = this;
            this.unsubscribeFocus = C1.subscribe(function() {
                C1.isFocused() && R1.isOnline() && (t.mutationCache.onFocus(), t.queryCache.onFocus());
            }), this.unsubscribeOnline = R1.subscribe(function() {
                C1.isFocused() && R1.isOnline() && (t.mutationCache.onOnline(), t.queryCache.onOnline());
            });
        }, e21.unmount = function() {
            var t, e;
            null == (t = this.unsubscribeFocus) || t.call(this), null == (e = this.unsubscribeOnline) || e.call(this);
        }, e21.isFetching = function(t, e) {
            var n = h1(t, e)[0];
            return n.fetching = !0, this.queryCache.findAll(n).length;
        }, e21.isMutating = function(t) {
            return this.mutationCache.findAll(i1({}, t, {
                fetching: !0
            })).length;
        }, e21.getQueryData = function(t, e) {
            var n;
            return null == (n = this.queryCache.find(t, e)) ? void 0 : n.state.data;
        }, e21.getQueriesData = function(t36) {
            return this.getQueryCache().findAll(t36).map(function(t) {
                return [
                    t.queryKey,
                    t.state.data
                ];
            });
        }, e21.setQueryData = function(t, e, n) {
            var i = l1(t), r = this.defaultQueryOptions(i);
            return this.queryCache.build(this, r).setData(e, n);
        }, e21.setQueriesData = function(t37, e, n) {
            var i = this;
            return w.batch(function() {
                return i.getQueryCache().findAll(t37).map(function(t) {
                    var r = t.queryKey;
                    return [
                        r,
                        i.setQueryData(r, e, n)
                    ];
                });
            });
        }, e21.getQueryState = function(t, e) {
            var n;
            return null == (n = this.queryCache.find(t, e)) ? void 0 : n.state;
        }, e21.removeQueries = function(t38, e) {
            var n = h1(t38, e)[0], i = this.queryCache;
            w.batch(function() {
                i.findAll(n).forEach(function(t) {
                    i.remove(t);
                });
            });
        }, e21.resetQueries = function(t39, e, n) {
            var r = this, s = h1(t39, e, n), u = s[0], o = s[1], a = this.queryCache, c = i1({}, u, {
                active: !0
            });
            return w.batch(function() {
                return a.findAll(u).forEach(function(t) {
                    t.reset();
                }), r.refetchQueries(c, o);
            });
        }, e21.cancelQueries = function(t40, e, n) {
            var i = this, r = h1(t40, e, n), u = r[0], o = r[1], a = void 0 === o ? {} : o;
            void 0 === a.revert && (a.revert = !0);
            var c = w.batch(function() {
                return i.queryCache.findAll(u).map(function(t) {
                    return t.cancel(a);
                });
            });
            return Promise.all(c).then(s1).catch(s1);
        }, e21.invalidateQueries = function(t41, e, n) {
            var r, s, u, o = this, a = h1(t41, e, n), c = a[0], l = a[1], f = i1({}, c, {
                active: null == (r = null != (s = c.refetchActive) ? s : c.active) || r,
                inactive: null != (u = c.refetchInactive) && u
            });
            return w.batch(function() {
                return o.queryCache.findAll(c).forEach(function(t) {
                    t.invalidate();
                }), o.refetchQueries(f, l);
            });
        }, e21.refetchQueries = function(t42, e, n) {
            var r = this, u = h1(t42, e, n), o = u[0], a = u[1], c = w.batch(function() {
                return r.queryCache.findAll(o).map(function(t) {
                    return t.fetch(void 0, i1({}, a, {
                        meta: {
                            refetchPage: null == o ? void 0 : o.refetchPage
                        }
                    }));
                });
            }), l = Promise.all(c).then(s1);
            return (null == a ? void 0 : a.throwOnError) || (l = l.catch(s1)), l;
        }, e21.fetchQuery = function(t, e, n) {
            var i = l1(t, e, n), r = this.defaultQueryOptions(i);
            void 0 === r.retry && (r.retry = !1);
            var s = this.queryCache.build(this, r);
            return s.isStaleByTime(r.staleTime) ? s.fetch(r) : Promise.resolve(s.state.data);
        }, e21.prefetchQuery = function(t, e, n) {
            return this.fetchQuery(t, e, n).then(s1).catch(s1);
        }, e21.fetchInfiniteQuery = function(t, e, n) {
            var i = l1(t, e, n);
            return i.behavior = L(), this.fetchQuery(i);
        }, e21.prefetchInfiniteQuery = function(t, e, n) {
            return this.fetchInfiniteQuery(t, e, n).then(s1).catch(s1);
        }, e21.cancelMutations = function() {
            var t43 = this, e = w.batch(function() {
                return t43.mutationCache.getAll().map(function(t) {
                    return t.cancel();
                });
            });
            return Promise.all(e).then(s1).catch(s1);
        }, e21.resumePausedMutations = function() {
            return this.getMutationCache().resumePausedMutations();
        }, e21.executeMutation = function(t) {
            return this.mutationCache.build(this, t).execute();
        }, e21.getQueryCache = function() {
            return this.queryCache;
        }, e21.getMutationCache = function() {
            return this.mutationCache;
        }, e21.getDefaultOptions = function() {
            return this.defaultOptions;
        }, e21.setDefaultOptions = function(t) {
            this.defaultOptions = t;
        }, e21.setQueryDefaults = function(t, e22) {
            var n = this.queryDefaults.find(function(e) {
                return p1(t) === p1(e.queryKey);
            });
            n ? n.defaultOptions = e22 : this.queryDefaults.push({
                queryKey: t,
                defaultOptions: e22
            });
        }, e21.getQueryDefaults = function(t) {
            var e23;
            return t ? null == (e23 = this.queryDefaults.find(function(e) {
                return y1(t, e.queryKey);
            })) ? void 0 : e23.defaultOptions : void 0;
        }, e21.setMutationDefaults = function(t, e24) {
            var n = this.mutationDefaults.find(function(e) {
                return p1(t) === p1(e.mutationKey);
            });
            n ? n.defaultOptions = e24 : this.mutationDefaults.push({
                mutationKey: t,
                defaultOptions: e24
            });
        }, e21.getMutationDefaults = function(t) {
            var e25;
            return t ? null == (e25 = this.mutationDefaults.find(function(e) {
                return y1(t, e.mutationKey);
            })) ? void 0 : e25.defaultOptions : void 0;
        }, e21.defaultQueryOptions = function(t) {
            if (null == t ? void 0 : t._defaulted) return t;
            var e = i1({}, this.defaultOptions.queries, this.getQueryDefaults(null == t ? void 0 : t.queryKey), t, {
                _defaulted: !0
            });
            return !e.queryHash && e.queryKey && (e.queryHash = v1(e.queryKey, e)), e;
        }, e21.defaultQueryObserverOptions = function(t) {
            return this.defaultQueryOptions(t);
        }, e21.defaultMutationOptions = function(t) {
            return (null == t ? void 0 : t._defaulted) ? t : i1({}, this.defaultOptions.mutations, this.getMutationDefaults(null == t ? void 0 : t.mutationKey), t, {
                _defaulted: !0
            });
        }, e21.clear = function() {
            this.queryCache.clear(), this.mutationCache.clear();
        }, t35;
    }(), G = function(t44) {
        function n10(e, n) {
            var i;
            return (i = t44.call(this) || this).client = e, i.options = n, i.trackedProps = [], i.previousSelectError = null, i.bindMethods(), i.setOptions(n), i;
        }
        e1(n10, t44);
        var o4 = n10.prototype;
        return o4.bindMethods = function() {
            this.remove = this.remove.bind(this), this.refetch = this.refetch.bind(this);
        }, o4.onSubscribe = function() {
            1 === this.listeners.length && (this.currentQuery.addObserver(this), B(this.currentQuery, this.options) && this.executeFetch(), this.updateTimers());
        }, o4.onUnsubscribe = function() {
            this.listeners.length || this.destroy();
        }, o4.shouldFetchOnReconnect = function() {
            return t = this.currentQuery, !1 !== (e = this.options).enabled && ("always" === e.refetchOnReconnect || !1 !== e.refetchOnReconnect && J(t, e));
            var t, e;
        }, o4.shouldFetchOnWindowFocus = function() {
            return t = this.currentQuery, !1 !== (e = this.options).enabled && ("always" === e.refetchOnWindowFocus || !1 !== e.refetchOnWindowFocus && J(t, e));
            var t, e;
        }, o4.destroy = function() {
            this.listeners = [], this.clearTimers(), this.currentQuery.removeObserver(this);
        }, o4.setOptions = function(t, e) {
            var n = this.options, i = this.currentQuery;
            if (this.options = this.client.defaultQueryObserverOptions(t), void 0 !== this.options.enabled && "boolean" != typeof this.options.enabled) throw new Error("Expected enabled to be a boolean");
            this.options.queryKey || (this.options.queryKey = n.queryKey), this.updateQuery();
            var r = this.hasListeners();
            r && W(this.currentQuery, i, this.options, n) && this.executeFetch(), this.updateResult(e), !r || this.currentQuery === i && this.options.enabled === n.enabled && this.options.staleTime === n.staleTime || this.updateStaleTimeout();
            var s = this.computeRefetchInterval();
            !r || this.currentQuery === i && this.options.enabled === n.enabled && s === this.currentRefetchInterval || this.updateRefetchInterval(s);
        }, o4.getOptimisticResult = function(t) {
            var e = this.client.defaultQueryObserverOptions(t), n = this.client.getQueryCache().build(this.client, e);
            return this.createResult(n, e);
        }, o4.getCurrentResult = function() {
            return this.currentResult;
        }, o4.trackResult = function(t45, e26) {
            var n = this, i = {}, r = function(t) {
                n.trackedProps.includes(t) || n.trackedProps.push(t);
            };
            return Object.keys(t45).forEach(function(e) {
                Object.defineProperty(i, e, {
                    configurable: !1,
                    enumerable: !0,
                    get: function() {
                        return r(e), t45[e];
                    }
                });
            }), (e26.useErrorBoundary || e26.suspense) && r("error"), i;
        }, o4.getNextResult = function(t) {
            var e27 = this;
            return new Promise(function(n, i) {
                var r = e27.subscribe(function(e) {
                    e.isFetching || (r(), e.isError && (null == t ? void 0 : t.throwOnError) ? i(e.error) : n(e));
                });
            });
        }, o4.getCurrentQuery = function() {
            return this.currentQuery;
        }, o4.remove = function() {
            this.client.getQueryCache().remove(this.currentQuery);
        }, o4.refetch = function(t) {
            return this.fetch(i1({}, t, {
                meta: {
                    refetchPage: null == t ? void 0 : t.refetchPage
                }
            }));
        }, o4.fetchOptimistic = function(t) {
            var e = this, n = this.client.defaultQueryObserverOptions(t), i = this.client.getQueryCache().build(this.client, n);
            return i.fetch().then(function() {
                return e.createResult(i, n);
            });
        }, o4.fetch = function(t) {
            var e = this;
            return this.executeFetch(t).then(function() {
                return e.updateResult(), e.currentResult;
            });
        }, o4.executeFetch = function(t) {
            this.updateQuery();
            var e = this.currentQuery.fetch(this.options, t);
            return (null == t ? void 0 : t.throwOnError) || (e = e.catch(s1)), e;
        }, o4.updateStaleTimeout = function() {
            var t = this;
            if (this.clearStaleTimeout(), !r1 && !this.currentResult.isStale && u1(this.options.staleTime)) {
                var e = c1(this.currentResult.dataUpdatedAt, this.options.staleTime) + 1;
                this.staleTimeoutId = setTimeout(function() {
                    t.currentResult.isStale || t.updateResult();
                }, e);
            }
        }, o4.computeRefetchInterval = function() {
            var t;
            return "function" == typeof this.options.refetchInterval ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : null != (t = this.options.refetchInterval) && t;
        }, o4.updateRefetchInterval = function(t) {
            var e = this;
            this.clearRefetchInterval(), this.currentRefetchInterval = t, !r1 && !1 !== this.options.enabled && u1(this.currentRefetchInterval) && 0 !== this.currentRefetchInterval && (this.refetchIntervalId = setInterval(function() {
                (e.options.refetchIntervalInBackground || C1.isFocused()) && e.executeFetch();
            }, this.currentRefetchInterval));
        }, o4.updateTimers = function() {
            this.updateStaleTimeout(), this.updateRefetchInterval(this.computeRefetchInterval());
        }, o4.clearTimers = function() {
            this.clearStaleTimeout(), this.clearRefetchInterval();
        }, o4.clearStaleTimeout = function() {
            clearTimeout(this.staleTimeoutId), this.staleTimeoutId = void 0;
        }, o4.clearRefetchInterval = function() {
            clearInterval(this.refetchIntervalId), this.refetchIntervalId = void 0;
        }, o4.createResult = function(t, e) {
            var n, i = this.currentQuery, r = this.options, s = this.currentResult, u = this.currentResultState, o = this.currentResultOptions, a = t !== i, c = a ? t.state : this.currentQueryInitialState, l = a ? this.currentResult : this.previousQueryResult, h = t.state, f = h.dataUpdatedAt, d = h.error, v = h.errorUpdatedAt, p = h.isFetching, y = h.status, b = !1, g = !1;
            if (e.optimisticResults) {
                var O = this.hasListeners(), P = !O && B(t, e), q = O && W(t, i, e, r);
                (P || q) && (p = !0, f || (y = "loading"));
            }
            if (e.keepPreviousData && !h.dataUpdateCount && (null == l ? void 0 : l.isSuccess) && "error" !== y) n = l.data, f = l.dataUpdatedAt, y = l.status, b = !0;
            else if (e.select && void 0 !== h.data) {
                var C;
                if (s && h.data === (null == u ? void 0 : u.data) && e.select === (null == (C = this.previousSelect) ? void 0 : C.fn) && !this.previousSelectError) n = this.previousSelect.result;
                else try {
                    n = e.select(h.data), !1 !== e.structuralSharing && (n = m1(null == s ? void 0 : s.data, n)), this.previousSelect = {
                        fn: e.select,
                        result: n
                    }, this.previousSelectError = null;
                } catch (t) {
                    D().error(t), d = t, this.previousSelectError = t, v = Date.now(), y = "error";
                }
            } else n = h.data;
            if (void 0 !== e.placeholderData && void 0 === n && ("loading" === y || "idle" === y)) {
                var R;
                if ((null == s ? void 0 : s.isPlaceholderData) && e.placeholderData === (null == o ? void 0 : o.placeholderData)) R = s.data;
                else if (R = "function" == typeof e.placeholderData ? e.placeholderData() : e.placeholderData, e.select && void 0 !== R) try {
                    R = e.select(R), !1 !== e.structuralSharing && (R = m1(null == s ? void 0 : s.data, R)), this.previousSelectError = null;
                } catch (t) {
                    D().error(t), d = t, this.previousSelectError = t, v = Date.now(), y = "error";
                }
                void 0 !== R && (y = "success", n = R, g = !0);
            }
            return {
                status: y,
                isLoading: "loading" === y,
                isSuccess: "success" === y,
                isError: "error" === y,
                isIdle: "idle" === y,
                data: n,
                dataUpdatedAt: f,
                error: d,
                errorUpdatedAt: v,
                failureCount: h.fetchFailureCount,
                isFetched: h.dataUpdateCount > 0 || h.errorUpdateCount > 0,
                isFetchedAfterMount: h.dataUpdateCount > c.dataUpdateCount || h.errorUpdateCount > c.errorUpdateCount,
                isFetching: p,
                isRefetching: p && "loading" !== y,
                isLoadingError: "error" === y && 0 === h.dataUpdatedAt,
                isPlaceholderData: g,
                isPreviousData: b,
                isRefetchError: "error" === y && 0 !== h.dataUpdatedAt,
                isStale: J(t, e),
                refetch: this.refetch,
                remove: this.remove
            };
        }, o4.shouldNotifyListeners = function(t46, e) {
            if (!e) return !0;
            var n11 = this.options, i7 = n11.notifyOnChangeProps, r = n11.notifyOnChangePropsExclusions;
            if (!i7 && !r) return !0;
            if ("tracked" === i7 && !this.trackedProps.length) return !0;
            var s = "tracked" === i7 ? this.trackedProps : i7;
            return Object.keys(t46).some(function(n) {
                var i = n, u = t46[i] !== e[i], o = null == s ? void 0 : s.some(function(t) {
                    return t === n;
                }), a = null == r ? void 0 : r.some(function(t) {
                    return t === n;
                });
                return u && !a && (!s || o);
            });
        }, o4.updateResult = function(t47) {
            var e28 = this.currentResult;
            if (this.currentResult = this.createResult(this.currentQuery, this.options), this.currentResultState = this.currentQuery.state, this.currentResultOptions = this.options, !function(t, e) {
                if (t && !e || e && !t) return !1;
                for(var n in t)if (t[n] !== e[n]) return !1;
                return !0;
            }(this.currentResult, e28)) {
                var n12 = {
                    cache: !0
                };
                !1 !== (null == t47 ? void 0 : t47.listeners) && this.shouldNotifyListeners(this.currentResult, e28) && (n12.listeners = !0), this.notify(i1({}, n12, t47));
            }
        }, o4.updateQuery = function() {
            var t = this.client.getQueryCache().build(this.client, this.options);
            if (t !== this.currentQuery) {
                var e = this.currentQuery;
                this.currentQuery = t, this.currentQueryInitialState = t.state, this.previousQueryResult = this.currentResult, this.hasListeners() && (null == e || e.removeObserver(this), t.addObserver(this));
            }
        }, o4.onQueryUpdate = function(t) {
            var e = {};
            "success" === t.type ? e.onSuccess = !0 : "error" !== t.type || E1(t.error) || (e.onError = !0), this.updateResult(e), this.hasListeners() && this.updateTimers();
        }, o4.notify = function(t48) {
            var e = this;
            w.batch(function() {
                t48.onSuccess ? (null == e.options.onSuccess || e.options.onSuccess(e.currentResult.data), null == e.options.onSettled || e.options.onSettled(e.currentResult.data, null)) : t48.onError && (null == e.options.onError || e.options.onError(e.currentResult.error), null == e.options.onSettled || e.options.onSettled(void 0, e.currentResult.error)), t48.listeners && e.listeners.forEach(function(t) {
                    t(e.currentResult);
                }), t48.cache && e.client.getQueryCache().notify({
                    query: e.currentQuery,
                    type: "observerResultsUpdated"
                });
            });
        }, n10;
    }(n1);
    function B(t49, e29) {
        return (function(t, e) {
            return !(!1 === e.enabled || t.state.dataUpdatedAt || "error" === t.state.status && !1 === e.retryOnMount);
        })(t49, e29) || (function(t, e) {
            return !1 !== e.enabled && t.state.dataUpdatedAt > 0 && ("always" === e.refetchOnMount || !1 !== e.refetchOnMount && J(t, e));
        })(t49, e29);
    }
    function W(t, e, n, i) {
        return !1 !== n.enabled && (t !== e || !1 === i.enabled) && (!n.suspense || "error" !== t.state.status) && J(t, n);
    }
    function J(t, e) {
        return t.isStaleByTime(e.staleTime);
    }
    var z = function(t50) {
        function n13(e, n) {
            var i;
            return (i = t50.call(this) || this).client = e, i.queries = [], i.result = [], i.observers = [], i.observersMap = {}, n && i.setQueries(n), i;
        }
        e1(n13, t50);
        var i8 = n13.prototype;
        return i8.onSubscribe = function() {
            var t = this;
            1 === this.listeners.length && this.observers.forEach(function(e) {
                e.subscribe(function(n) {
                    t.onUpdate(e, n);
                });
            });
        }, i8.onUnsubscribe = function() {
            this.listeners.length || this.destroy();
        }, i8.destroy = function() {
            this.listeners = [], this.observers.forEach(function(t) {
                t.destroy();
            });
        }, i8.setQueries = function(t, e) {
            this.queries = t, this.updateObservers(e);
        }, i8.getCurrentResult = function() {
            return this.result;
        }, i8.getOptimisticResult = function(t51) {
            return this.findMatchingObservers(t51).map(function(t) {
                return t.observer.getOptimisticResult(t.defaultedQueryOptions);
            });
        }, i8.findMatchingObservers = function(t52) {
            var e30 = this, n14 = this.observers, i9 = t52.map(function(t) {
                return e30.client.defaultQueryObserverOptions(t);
            }), r = i9.flatMap(function(t) {
                var e31 = n14.find(function(e) {
                    return e.options.queryHash === t.queryHash;
                });
                return null != e31 ? [
                    {
                        defaultedQueryOptions: t,
                        observer: e31
                    }
                ] : [];
            }), s = r.map(function(t) {
                return t.defaultedQueryOptions.queryHash;
            }), u = i9.filter(function(t) {
                return !s.includes(t.queryHash);
            }), o = n14.filter(function(t) {
                return !r.some(function(e) {
                    return e.observer === t;
                });
            }), a = u.map(function(t, n) {
                if (t.keepPreviousData) {
                    var i = o[n];
                    if (void 0 !== i) return {
                        defaultedQueryOptions: t,
                        observer: i
                    };
                }
                return {
                    defaultedQueryOptions: t,
                    observer: e30.getObserver(t)
                };
            });
            return r.concat(a).sort(function(t, e) {
                return i9.indexOf(t.defaultedQueryOptions) - i9.indexOf(e.defaultedQueryOptions);
            });
        }, i8.getObserver = function(t) {
            var e = this.client.defaultQueryObserverOptions(t), n = this.observersMap[e.queryHash];
            return null != n ? n : new G(this.client, e);
        }, i8.updateObservers = function(t53) {
            var e32 = this;
            w.batch(function() {
                var n15 = e32.observers, i = e32.findMatchingObservers(e32.queries);
                i.forEach(function(e) {
                    return e.observer.setOptions(e.defaultedQueryOptions, t53);
                });
                var r = i.map(function(t) {
                    return t.observer;
                }), s = Object.fromEntries(r.map(function(t) {
                    return [
                        t.options.queryHash,
                        t
                    ];
                })), u = r.map(function(t) {
                    return t.getCurrentResult();
                }), o = r.some(function(t, e) {
                    return t !== n15[e];
                });
                (n15.length !== r.length || o) && (e32.observers = r, e32.observersMap = s, e32.result = u, e32.hasListeners() && (a1(n15, r).forEach(function(t) {
                    t.destroy();
                }), a1(r, n15).forEach(function(t) {
                    t.subscribe(function(n) {
                        e32.onUpdate(t, n);
                    });
                }), e32.notify()));
            });
        }, i8.onUpdate = function(t54, e33) {
            var n16 = this.observers.indexOf(t54);
            -1 !== n16 && (this.result = (function(t, e, n) {
                var i = t.slice(0);
                return i[e] = n, i;
            })(this.result, n16, e33), this.notify());
        }, i8.notify = function() {
            var t = this;
            w.batch(function() {
                t.listeners.forEach(function(e) {
                    e(t.result);
                });
            });
        }, n13;
    }(n1), V = function(t55) {
        function n17(e, n) {
            return t55.call(this, e, n) || this;
        }
        e1(n17, t55);
        var r7 = n17.prototype;
        return r7.bindMethods = function() {
            t55.prototype.bindMethods.call(this), this.fetchNextPage = this.fetchNextPage.bind(this), this.fetchPreviousPage = this.fetchPreviousPage.bind(this);
        }, r7.setOptions = function(e, n) {
            t55.prototype.setOptions.call(this, i1({}, e, {
                behavior: L()
            }), n);
        }, r7.getOptimisticResult = function(e) {
            return e.behavior = L(), t55.prototype.getOptimisticResult.call(this, e);
        }, r7.fetchNextPage = function(t) {
            var e;
            return this.fetch({
                cancelRefetch: null == (e = null == t ? void 0 : t.cancelRefetch) || e,
                throwOnError: null == t ? void 0 : t.throwOnError,
                meta: {
                    fetchMore: {
                        direction: "forward",
                        pageParam: null == t ? void 0 : t.pageParam
                    }
                }
            });
        }, r7.fetchPreviousPage = function(t) {
            var e;
            return this.fetch({
                cancelRefetch: null == (e = null == t ? void 0 : t.cancelRefetch) || e,
                throwOnError: null == t ? void 0 : t.throwOnError,
                meta: {
                    fetchMore: {
                        direction: "backward",
                        pageParam: null == t ? void 0 : t.pageParam
                    }
                }
            });
        }, r7.createResult = function(e, n) {
            var r, s, u, o, a, c, l = e.state;
            return i1({}, t55.prototype.createResult.call(this, e, n), {
                fetchNextPage: this.fetchNextPage,
                fetchPreviousPage: this.fetchPreviousPage,
                hasNextPage: k(n, null == (r = l.data) ? void 0 : r.pages),
                hasPreviousPage: N(n, null == (s = l.data) ? void 0 : s.pages),
                isFetchingNextPage: l.isFetching && "forward" === (null == (u = l.fetchMeta) || null == (o = u.fetchMore) ? void 0 : o.direction),
                isFetchingPreviousPage: l.isFetching && "backward" === (null == (a = l.fetchMeta) || null == (c = a.fetchMore) ? void 0 : c.direction)
            });
        }, n17;
    }(G), X = function(t56) {
        function n18(e, n) {
            var i;
            return (i = t56.call(this) || this).client = e, i.setOptions(n), i.bindMethods(), i.updateResult(), i;
        }
        e1(n18, t56);
        var r = n18.prototype;
        return r.bindMethods = function() {
            this.mutate = this.mutate.bind(this), this.reset = this.reset.bind(this);
        }, r.setOptions = function(t) {
            this.options = this.client.defaultMutationOptions(t);
        }, r.onUnsubscribe = function() {
            var t;
            this.listeners.length || null == (t = this.currentMutation) || t.removeObserver(this);
        }, r.onMutationUpdate = function(t) {
            this.updateResult();
            var e = {
                listeners: !0
            };
            "success" === t.type ? e.onSuccess = !0 : "error" === t.type && (e.onError = !0), this.notify(e);
        }, r.getCurrentResult = function() {
            return this.currentResult;
        }, r.reset = function() {
            this.currentMutation = void 0, this.updateResult(), this.notify({
                listeners: !0
            });
        }, r.mutate = function(t, e) {
            return this.mutateOptions = e, this.currentMutation && this.currentMutation.removeObserver(this), this.currentMutation = this.client.getMutationCache().build(this.client, i1({}, this.options, {
                variables: void 0 !== t ? t : this.options.variables
            })), this.currentMutation.addObserver(this), this.currentMutation.execute();
        }, r.updateResult = function() {
            var t = this.currentMutation ? this.currentMutation.state : {
                context: void 0,
                data: void 0,
                error: null,
                failureCount: 0,
                isPaused: !1,
                status: "idle",
                variables: void 0
            }, e = i1({}, t, {
                isLoading: "loading" === t.status,
                isSuccess: "success" === t.status,
                isError: "error" === t.status,
                isIdle: "idle" === t.status,
                mutate: this.mutate,
                reset: this.reset
            });
            this.currentResult = e;
        }, r.notify = function(t57) {
            var e = this;
            w.batch(function() {
                e.mutateOptions && (t57.onSuccess ? (null == e.mutateOptions.onSuccess || e.mutateOptions.onSuccess(e.currentResult.data, e.currentResult.variables, e.currentResult.context), null == e.mutateOptions.onSettled || e.mutateOptions.onSettled(e.currentResult.data, null, e.currentResult.variables, e.currentResult.context)) : t57.onError && (null == e.mutateOptions.onError || e.mutateOptions.onError(e.currentResult.error, e.currentResult.variables, e.currentResult.context), null == e.mutateOptions.onSettled || e.mutateOptions.onSettled(void 0, e.currentResult.error, e.currentResult.variables, e.currentResult.context))), t57.listeners && e.listeners.forEach(function(t) {
                    t(e.currentResult);
                });
            });
        }, n18;
    }(n1);
    function Y(t) {
        return t.state.isPaused;
    }
    function Z(t) {
        return "success" === t.state.status;
    }
    t1.CancelledError = F1, t1.InfiniteQueryObserver = V, t1.MutationCache = K, t1.MutationObserver = X, t1.QueriesObserver = z, t1.QueryCache = U, t1.QueryClient = _, t1.QueryObserver = G, t1.dehydrate = function(t58, e) {
        var n, i, r = [], s = [];
        if (!1 !== (null == (n = e = e || {}) ? void 0 : n.dehydrateMutations)) {
            var u = e.shouldDehydrateMutation || Y;
            t58.getMutationCache().getAll().forEach(function(t59) {
                u(t59) && r.push(function(t) {
                    return {
                        mutationKey: t.options.mutationKey,
                        state: t.state
                    };
                }(t59));
            });
        }
        if (!1 !== (null == (i = e) ? void 0 : i.dehydrateQueries)) {
            var o = e.shouldDehydrateQuery || Z;
            t58.getQueryCache().getAll().forEach(function(t60) {
                o(t60) && s.push(function(t) {
                    return {
                        state: t.state,
                        queryKey: t.queryKey,
                        queryHash: t.queryHash
                    };
                }(t60));
            });
        }
        return {
            mutations: r,
            queries: s
        };
    }, t1.focusManager = C1, t1.hashQueryKey = p1, t1.hydrate = function(t, e34, n) {
        if ("object" == typeof e34 && null !== e34) {
            var r8 = t.getMutationCache(), s3 = t.getQueryCache(), u3 = e34.mutations || [], o = e34.queries || [];
            u3.forEach(function(e) {
                var s;
                r8.build(t, i1({}, null == n || null == (s = n.defaultOptions) ? void 0 : s.mutations, {
                    mutationKey: e.mutationKey
                }), e.state);
            }), o.forEach(function(e) {
                var r, u = s3.get(e.queryHash);
                u ? u.state.dataUpdatedAt < e.state.dataUpdatedAt && u.setState(e.state) : s3.build(t, i1({}, null == n || null == (r = n.defaultOptions) ? void 0 : r.queries, {
                    queryKey: e.queryKey,
                    queryHash: e.queryHash
                }), e.state);
            });
        }
    }, t1.isCancelledError = E1, t1.isError = function(t) {
        return t instanceof Error;
    }, t1.notifyManager = w, t1.onlineManager = R1, t1.setLogger = function(t) {
        A = t;
    }, Object.defineProperty(t1, "__esModule", {
        value: !0
    });
}); //# sourceMappingURL=react-query-core.production.min.js.map

//# sourceMappingURL=react-query-core.production.min.js.map