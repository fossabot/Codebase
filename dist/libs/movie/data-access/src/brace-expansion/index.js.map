{"version":3,"sources":["../../../../../../libs/movie/data-access/node_modules/brace-expansion/index.js"],"sourcesContent":["var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n"],"names":["concatMap","require","balanced","module","exports","expandTop","escSlash","Math","random","escOpen","escClose","escComma","escPeriod","numeric","str","parseInt","charCodeAt","escapeBraces","split","join","unescapeBraces","parseCommaParts","parts","m","pre","body","post","p","length","postParts","shift","push","apply","substr","expand","map","identity","e","embrace","isPadded","el","test","lte","i","y","gte","isTop","expansions","isNumericSequence","isAlphaSequence","isSequence","isOptions","indexOf","match","n","N","x","width","max","incr","abs","reverse","pad","some","c","String","fromCharCode","need","z","Array","slice","j","k","expansion"],"mappings":"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"}