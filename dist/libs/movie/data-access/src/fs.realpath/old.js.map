{"version":3,"sources":["../../../../../../libs/movie/data-access/node_modules/fs.realpath/old.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n"],"names":["pathModule","require","isWindows","process","platform","fs","DEBUG","env","NODE_DEBUG","test","rethrow","callback","backtrace","Error","debugCallback","missingCallback","err","message","throwDeprecation","noDeprecation","msg","stack","traceDeprecation","console","trace","error","maybeCallback","cb","normalize","nextPartRe","splitRootRe","exports","realpathSync","p","cache","resolve","Object","prototype","hasOwnProperty","call","original","seenLinks","knownHard","pos","current","base","previous","start","m","exec","length","lstatSync","lastIndex","result","resolvedLink","stat","isSymbolicLink","linkTarget","id","dev","toString","ino","statSync","readlinkSync","slice","realpath","nextTick","bind","lstat","LOOP","gotResolvedLink","gotStat","gotTarget","readlink","target"],"mappings":";AAAA,EAAsD,AAAtD,oDAAsD;AACtD,EAAE;AACF,EAA0E,AAA1E,wEAA0E;AAC1E,EAAgE,AAAhE,8DAAgE;AAChE,EAAsE,AAAtE,oEAAsE;AACtE,EAAsE,AAAtE,oEAAsE;AACtE,EAA4E,AAA5E,0EAA4E;AAC5E,EAAqE,AAArE,mEAAqE;AACrE,EAAwB,AAAxB,sBAAwB;AACxB,EAAE;AACF,EAA0E,AAA1E,wEAA0E;AAC1E,EAAyD,AAAzD,uDAAyD;AACzD,EAAE;AACF,EAA0E,AAA1E,wEAA0E;AAC1E,EAA6D,AAA7D,2DAA6D;AAC7D,EAA4E,AAA5E,0EAA4E;AAC5E,EAA2E,AAA3E,yEAA2E;AAC3E,EAAwE,AAAxE,sEAAwE;AACxE,EAA4E,AAA5E,0EAA4E;AAC5E,EAAyC,AAAzC,uCAAyC;AAEzC,GAAG,CAACA,UAAU,GAAGC,OAAO,CAAC,CAAM;AAC/B,GAAG,CAACC,SAAS,GAAGC,OAAO,CAACC,QAAQ,KAAK,CAAO;AAC5C,GAAG,CAACC,EAAE,GAAGJ,OAAO,CAAC,CAAI;AAErB,EAAiE,AAAjE,+DAAiE;AAEjE,GAAG,CAACK,KAAK,GAAGH,OAAO,CAACI,GAAG,CAACC,UAAU,SAASC,IAAI,CAACN,OAAO,CAACI,GAAG,CAACC,UAAU;SAE7DE,OAAO,GAAG,CAAC;IAClB,EAA4E,AAA5E,0EAA4E;IAC5E,EAA8B,AAA9B,4BAA8B;IAC9B,GAAG,CAACC,QAAQ;IACZ,EAAE,EAAEL,KAAK,EAAE,CAAC;QACV,GAAG,CAACM,SAAS,GAAG,GAAG,CAACC,KAAK;QACzBF,QAAQ,GAAGG,aAAa;IAC1B,CAAC,MACCH,QAAQ,GAAGI,eAAe;IAE5B,MAAM,CAACJ,QAAQ;aAENG,aAAa,CAACE,GAAG,EAAE,CAAC;QAC3B,EAAE,EAAEA,GAAG,EAAE,CAAC;YACRJ,SAAS,CAACK,OAAO,GAAGD,GAAG,CAACC,OAAO;YAC/BD,GAAG,GAAGJ,SAAS;YACfG,eAAe,CAACC,GAAG;QACrB,CAAC;IACH,CAAC;aAEQD,eAAe,CAACC,GAAG,EAAE,CAAC;QAC7B,EAAE,EAAEA,GAAG,EAAE,CAAC;YACR,EAAE,EAAEb,OAAO,CAACe,gBAAgB,EAC1B,KAAK,CAACF,GAAG,CAAG,CAA4D,AAA5D,EAA4D,AAA5D,0DAA4D;iBACrE,EAAE,GAAGb,OAAO,CAACgB,aAAa,EAAE,CAAC;gBAChC,GAAG,CAACC,GAAG,GAAG,CAAuB,0BAAIJ,GAAG,CAACK,KAAK,IAAIL,GAAG,CAACC,OAAO;gBAC7D,EAAE,EAAEd,OAAO,CAACmB,gBAAgB,EAC1BC,OAAO,CAACC,KAAK,CAACJ,GAAG;qBAEjBG,OAAO,CAACE,KAAK,CAACL,GAAG;YACrB,CAAC;QACH,CAAC;IACH,CAAC;AACH,CAAC;SAEQM,aAAa,CAACC,EAAE,EAAE,CAAC;IAC1B,MAAM,CAAC,MAAM,CAACA,EAAE,KAAK,CAAU,YAAGA,EAAE,GAAGjB,OAAO;AAChD,CAAC;AAED,GAAG,CAACkB,SAAS,GAAG5B,UAAU,CAAC4B,SAAS;AAEpC,EAAyD,AAAzD,uDAAyD;AACzD,EAAkE,AAAlE,gEAAkE;AAClE,EAAE,EAAE1B,SAAS,EAAE,CAAC;IACd,GAAG,CAAC2B,UAAU;AAChB,CAAC,MAAM,CAAC;IACN,GAAG,CAACA,UAAU;AAChB,CAAC;AAED,EAAwE,AAAxE,sEAAwE;AACxE,EAAE,EAAE3B,SAAS,EAAE,CAAC;IACd,GAAG,CAAC4B,WAAW;AACjB,CAAC,MAAM,CAAC;IACN,GAAG,CAACA,WAAW;AACjB,CAAC;AAEDC,OAAO,CAACC,YAAY,GAAG,QAAQ,CAACA,YAAY,CAACC,CAAC,EAAEC,KAAK,EAAE,CAAC;IACtD,EAAqB,AAArB,mBAAqB;IACrBD,CAAC,GAAGjC,UAAU,CAACmC,OAAO,CAACF,CAAC;IAExB,EAAE,EAAEC,KAAK,IAAIE,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACL,KAAK,EAAED,CAAC,GAAG,CAAC;QAC5D,MAAM,CAACC,KAAK,CAACD,CAAC;IAChB,CAAC;IAED,GAAG,CAACO,QAAQ,GAAGP,CAAC,EACZQ,SAAS,GAAG,CAAC,CAAC,EACdC,SAAS,GAAG,CAAC,CAAC;IAElB,EAAkC,AAAlC,gCAAkC;IAClC,GAAG,CAACC,GAAG;IACP,EAA6D,AAA7D,2DAA6D;IAC7D,GAAG,CAACC,OAAO;IACX,EAA6E,AAA7E,2EAA6E;IAC7E,GAAG,CAACC,IAAI;IACR,EAA6D,AAA7D,2DAA6D;IAC7D,GAAG,CAACC,QAAQ;IAEZC,KAAK;aAEIA,KAAK,GAAG,CAAC;QAChB,EAAkB,AAAlB,gBAAkB;QAClB,GAAG,CAACC,CAAC,GAAGlB,WAAW,CAACmB,IAAI,CAAChB,CAAC;QAC1BU,GAAG,GAAGK,CAAC,CAAC,CAAC,EAAEE,MAAM;QACjBN,OAAO,GAAGI,CAAC,CAAC,CAAC;QACbH,IAAI,GAAGG,CAAC,CAAC,CAAC;QACVF,QAAQ,GAAG,CAAE;QAEb,EAAoE,AAApE,kEAAoE;QACpE,EAAE,EAAE5C,SAAS,KAAKwC,SAAS,CAACG,IAAI,GAAG,CAAC;YAClCxC,EAAE,CAAC8C,SAAS,CAACN,IAAI;YACjBH,SAAS,CAACG,IAAI,IAAI,IAAI;QACxB,CAAC;IACH,CAAC;IAED,EAAmE,AAAnE,iEAAmE;IACnE,EAAS,AAAT,OAAS;IACT,EAAwB,AAAxB,sBAAwB;UACjBF,GAAG,GAAGV,CAAC,CAACiB,MAAM,CAAE,CAAC;QACtB,EAAqB,AAArB,mBAAqB;QACrBrB,UAAU,CAACuB,SAAS,GAAGT,GAAG;QAC1B,GAAG,CAACU,MAAM,GAAGxB,UAAU,CAACoB,IAAI,CAAChB,CAAC;QAC9Ba,QAAQ,GAAGF,OAAO;QAClBA,OAAO,IAAIS,MAAM,CAAC,CAAC;QACnBR,IAAI,GAAGC,QAAQ,GAAGO,MAAM,CAAC,CAAC;QAC1BV,GAAG,GAAGd,UAAU,CAACuB,SAAS;QAE1B,EAA4B,AAA5B,0BAA4B;QAC5B,EAAE,EAAEV,SAAS,CAACG,IAAI,KAAMX,KAAK,IAAIA,KAAK,CAACW,IAAI,MAAMA,IAAI,EAAG,CAAC;YACvD,QAAQ;QACV,CAAC;QAED,GAAG,CAACS,YAAY;QAChB,EAAE,EAAEpB,KAAK,IAAIE,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACL,KAAK,EAAEW,IAAI,GAAG,CAAC;YAC/D,EAAoD,AAApD,kDAAoD;YACpDS,YAAY,GAAGpB,KAAK,CAACW,IAAI;QAC3B,CAAC,MAAM,CAAC;YACN,GAAG,CAACU,IAAI,GAAGlD,EAAE,CAAC8C,SAAS,CAACN,IAAI;YAC5B,EAAE,GAAGU,IAAI,CAACC,cAAc,IAAI,CAAC;gBAC3Bd,SAAS,CAACG,IAAI,IAAI,IAAI;gBACtB,EAAE,EAAEX,KAAK,EAAEA,KAAK,CAACW,IAAI,IAAIA,IAAI;gBAC7B,QAAQ;YACV,CAAC;YAED,EAAyC,AAAzC,uCAAyC;YACzC,EAAyD,AAAzD,uDAAyD;YACzD,GAAG,CAACY,UAAU,GAAG,IAAI;YACrB,EAAE,GAAGvD,SAAS,EAAE,CAAC;gBACf,GAAG,CAACwD,EAAE,GAAGH,IAAI,CAACI,GAAG,CAACC,QAAQ,CAAC,EAAE,IAAI,CAAG,KAAGL,IAAI,CAACM,GAAG,CAACD,QAAQ,CAAC,EAAE;gBAC3D,EAAE,EAAEnB,SAAS,CAACH,cAAc,CAACoB,EAAE,GAAG,CAAC;oBACjCD,UAAU,GAAGhB,SAAS,CAACiB,EAAE;gBAC3B,CAAC;YACH,CAAC;YACD,EAAE,EAAED,UAAU,KAAK,IAAI,EAAE,CAAC;gBACxBpD,EAAE,CAACyD,QAAQ,CAACjB,IAAI;gBAChBY,UAAU,GAAGpD,EAAE,CAAC0D,YAAY,CAAClB,IAAI;YACnC,CAAC;YACDS,YAAY,GAAGtD,UAAU,CAACmC,OAAO,CAACW,QAAQ,EAAEW,UAAU;YACtD,EAAgC,AAAhC,8BAAgC;YAChC,EAAE,EAAEvB,KAAK,EAAEA,KAAK,CAACW,IAAI,IAAIS,YAAY;YACrC,EAAE,GAAGpD,SAAS,EAAEuC,SAAS,CAACiB,EAAE,IAAID,UAAU;QAC5C,CAAC;QAED,EAAoC,AAApC,kCAAoC;QACpCxB,CAAC,GAAGjC,UAAU,CAACmC,OAAO,CAACmB,YAAY,EAAErB,CAAC,CAAC+B,KAAK,CAACrB,GAAG;QAChDI,KAAK;IACP,CAAC;IAED,EAAE,EAAEb,KAAK,EAAEA,KAAK,CAACM,QAAQ,IAAIP,CAAC;IAE9B,MAAM,CAACA,CAAC;AACV,CAAC;AAGDF,OAAO,CAACkC,QAAQ,GAAG,QAAQ,CAACA,QAAQ,CAAChC,CAAC,EAAEC,KAAK,EAAEP,EAAE,EAAE,CAAC;IAClD,EAAE,EAAE,MAAM,CAACA,EAAE,KAAK,CAAU,WAAE,CAAC;QAC7BA,EAAE,GAAGD,aAAa,CAACQ,KAAK;QACxBA,KAAK,GAAG,IAAI;IACd,CAAC;IAED,EAAqB,AAArB,mBAAqB;IACrBD,CAAC,GAAGjC,UAAU,CAACmC,OAAO,CAACF,CAAC;IAExB,EAAE,EAAEC,KAAK,IAAIE,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACL,KAAK,EAAED,CAAC,GAAG,CAAC;QAC5D,MAAM,CAAC9B,OAAO,CAAC+D,QAAQ,CAACvC,EAAE,CAACwC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAEjC,KAAK,CAACD,CAAC;IACrD,CAAC;IAED,GAAG,CAACO,QAAQ,GAAGP,CAAC,EACZQ,SAAS,GAAG,CAAC,CAAC,EACdC,SAAS,GAAG,CAAC,CAAC;IAElB,EAAkC,AAAlC,gCAAkC;IAClC,GAAG,CAACC,GAAG;IACP,EAA6D,AAA7D,2DAA6D;IAC7D,GAAG,CAACC,OAAO;IACX,EAA6E,AAA7E,2EAA6E;IAC7E,GAAG,CAACC,KAAI;IACR,EAA6D,AAA7D,2DAA6D;IAC7D,GAAG,CAACC,QAAQ;IAEZC,KAAK;aAEIA,KAAK,GAAG,CAAC;QAChB,EAAkB,AAAlB,gBAAkB;QAClB,GAAG,CAACC,CAAC,GAAGlB,WAAW,CAACmB,IAAI,CAAChB,CAAC;QAC1BU,GAAG,GAAGK,CAAC,CAAC,CAAC,EAAEE,MAAM;QACjBN,OAAO,GAAGI,CAAC,CAAC,CAAC;QACbH,KAAI,GAAGG,CAAC,CAAC,CAAC;QACVF,QAAQ,GAAG,CAAE;QAEb,EAAoE,AAApE,kEAAoE;QACpE,EAAE,EAAE5C,SAAS,KAAKwC,SAAS,CAACG,KAAI,GAAG,CAAC;YAClCxC,EAAE,CAAC+D,KAAK,CAACvB,KAAI,EAAE,QAAQ,CAAC7B,GAAG,EAAE,CAAC;gBAC5B,EAAE,EAAEA,GAAG,EAAE,MAAM,CAACW,EAAE,CAACX,GAAG;gBACtB0B,SAAS,CAACG,KAAI,IAAI,IAAI;gBACtBwB,IAAI;YACN,CAAC;QACH,CAAC,MAAM,CAAC;YACNlE,OAAO,CAAC+D,QAAQ,CAACG,IAAI;QACvB,CAAC;IACH,CAAC;IAED,EAAmE,AAAnE,iEAAmE;IACnE,EAAS,AAAT,OAAS;aACAA,IAAI,GAAG,CAAC;QACf,EAAmC,AAAnC,iCAAmC;QACnC,EAAE,EAAE1B,GAAG,IAAIV,CAAC,CAACiB,MAAM,EAAE,CAAC;YACpB,EAAE,EAAEhB,KAAK,EAAEA,KAAK,CAACM,QAAQ,IAAIP,CAAC;YAC9B,MAAM,CAACN,EAAE,CAAC,IAAI,EAAEM,CAAC;QACnB,CAAC;QAED,EAAqB,AAArB,mBAAqB;QACrBJ,UAAU,CAACuB,SAAS,GAAGT,GAAG;QAC1B,GAAG,CAACU,MAAM,GAAGxB,UAAU,CAACoB,IAAI,CAAChB,CAAC;QAC9Ba,QAAQ,GAAGF,OAAO;QAClBA,OAAO,IAAIS,MAAM,CAAC,CAAC;QACnBR,KAAI,GAAGC,QAAQ,GAAGO,MAAM,CAAC,CAAC;QAC1BV,GAAG,GAAGd,UAAU,CAACuB,SAAS;QAE1B,EAA4B,AAA5B,0BAA4B;QAC5B,EAAE,EAAEV,SAAS,CAACG,KAAI,KAAMX,KAAK,IAAIA,KAAK,CAACW,KAAI,MAAMA,KAAI,EAAG,CAAC;YACvD,MAAM,CAAC1C,OAAO,CAAC+D,QAAQ,CAACG,IAAI;QAC9B,CAAC;QAED,EAAE,EAAEnC,KAAK,IAAIE,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACL,KAAK,EAAEW,KAAI,GAAG,CAAC;YAC/D,EAA+C,AAA/C,6CAA+C;YAC/C,MAAM,CAACyB,eAAe,CAACpC,KAAK,CAACW,KAAI;QACnC,CAAC;QAED,MAAM,CAACxC,EAAE,CAAC+D,KAAK,CAACvB,KAAI,EAAE0B,OAAO;IAC/B,CAAC;aAEQA,OAAO,CAACvD,IAAG,EAAEuC,IAAI,EAAE,CAAC;QAC3B,EAAE,EAAEvC,IAAG,EAAE,MAAM,CAACW,EAAE,CAACX,IAAG;QAEtB,EAA+C,AAA/C,6CAA+C;QAC/C,EAAE,GAAGuC,IAAI,CAACC,cAAc,IAAI,CAAC;YAC3Bd,SAAS,CAACG,KAAI,IAAI,IAAI;YACtB,EAAE,EAAEX,KAAK,EAAEA,KAAK,CAACW,KAAI,IAAIA,KAAI;YAC7B,MAAM,CAAC1C,OAAO,CAAC+D,QAAQ,CAACG,IAAI;QAC9B,CAAC;QAED,EAA0C,AAA1C,wCAA0C;QAC1C,EAAqD,AAArD,mDAAqD;QACrD,EAAyD,AAAzD,uDAAyD;QACzD,EAAE,GAAGnE,SAAS,EAAE,CAAC;YACf,GAAG,CAACwD,EAAE,GAAGH,IAAI,CAACI,GAAG,CAACC,QAAQ,CAAC,EAAE,IAAI,CAAG,KAAGL,IAAI,CAACM,GAAG,CAACD,QAAQ,CAAC,EAAE;YAC3D,EAAE,EAAEnB,SAAS,CAACH,cAAc,CAACoB,EAAE,GAAG,CAAC;gBACjC,MAAM,CAACc,SAAS,CAAC,IAAI,EAAE/B,SAAS,CAACiB,EAAE,GAAGb,KAAI;YAC5C,CAAC;QACH,CAAC;QACDxC,EAAE,CAACkD,IAAI,CAACV,KAAI,EAAE,QAAQ,CAAC7B,IAAG,EAAE,CAAC;YAC3B,EAAE,EAAEA,IAAG,EAAE,MAAM,CAACW,EAAE,CAACX,IAAG;YAEtBX,EAAE,CAACoE,QAAQ,CAAC5B,KAAI,EAAE,QAAQ,CAAC7B,GAAG,EAAE0D,MAAM,EAAE,CAAC;gBACvC,EAAE,GAAGxE,SAAS,EAAEuC,SAAS,CAACiB,EAAE,IAAIgB,MAAM;gBACtCF,SAAS,CAACxD,GAAG,EAAE0D,MAAM;YACvB,CAAC;QACH,CAAC;IACH,CAAC;aAEQF,SAAS,CAACxD,GAAG,EAAE0D,MAAM,EAAE7B,IAAI,EAAE,CAAC;QACrC,EAAE,EAAE7B,GAAG,EAAE,MAAM,CAACW,EAAE,CAACX,GAAG;QAEtB,GAAG,CAACsC,YAAY,GAAGtD,UAAU,CAACmC,OAAO,CAACW,QAAQ,EAAE4B,MAAM;QACtD,EAAE,EAAExC,KAAK,EAAEA,KAAK,CAACW,IAAI,IAAIS,YAAY;QACrCgB,eAAe,CAAChB,YAAY;IAC9B,CAAC;aAEQgB,eAAe,CAAChB,YAAY,EAAE,CAAC;QACtC,EAAoC,AAApC,kCAAoC;QACpCrB,CAAC,GAAGjC,UAAU,CAACmC,OAAO,CAACmB,YAAY,EAAErB,CAAC,CAAC+B,KAAK,CAACrB,GAAG;QAChDI,KAAK;IACP,CAAC;AACH,CAAC"}