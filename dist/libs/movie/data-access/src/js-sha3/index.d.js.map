{"version":3,"sources":["../../../../../../libs/movie/data-access/node_modules/js-sha3/index.d.ts"],"sourcesContent":["type Message = string | number[] | ArrayBuffer | Uint8Array;\n\ninterface Hasher {\n  /**\n   * Update hash\n   *\n   * @param message The message you want to hash.\n   */\n  update(message: Message): Hasher;\n\n  /**\n   * Return hash in hex string.\n   */\n  hex(): string;\n\n  /**\n   * Return hash in hex string.\n   */\n  toString(): string;\n\n  /**\n   * Return hash in ArrayBuffer.\n   */\n  arrayBuffer(): ArrayBuffer;\n\n  /**\n   * Return hash in integer array.\n   */\n  digest(): number[];\n\n  /**\n   * Return hash in integer array.\n   */\n  array(): number[];\n}\n\ninterface Hash {\n  /**\n   * Hash and return hex string.\n   *\n   * @param message The message you want to hash.\n   */\n  (message: Message): string;\n\n  /**\n   * Hash and return hex string.\n   *\n   * @param message The message you want to hash.\n   */\n  hex(message: Message): string;\n\n  /**\n   * Hash and return ArrayBuffer.\n   *\n   * @param message The message you want to hash.\n   */\n  arrayBuffer(message: Message): ArrayBuffer;\n\n  /**\n   * Hash and return integer array.\n   *\n   * @param message The message you want to hash.\n   */\n  digest(message: Message): number[];\n\n  /**\n   * Hash and return integer array.\n   *\n   * @param message The message you want to hash.\n   */\n  array(message: Message): number[];\n\n  /**\n   * Create a hash object.\n   */\n  create(): Hasher;\n\n  /**\n   * Create a hash object and hash message.\n   *\n   * @param message The message you want to hash.\n   */\n  update(message: Message): Hasher;\n}\n\ninterface ShakeHash {\n  /**\n   * Hash and return hex string.\n   *\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   */\n  (message: Message, outputBits: number): string;\n\n  /**\n   * Hash and return hex string.\n   *\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   */\n  hex(message: Message, outputBits: number): string;\n\n  /**\n   * Hash and return ArrayBuffer.\n   *\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   */\n  arrayBuffer(message: Message, outputBits: number): ArrayBuffer;\n\n  /**\n   * Hash and return integer array.\n   *\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   */\n  digest(message: Message, outputBits: number): number[];\n\n  /**\n   * Hash and return integer array.\n   *\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   */\n  array(message: Message, outputBits: number): number[];\n\n  /**\n   * Create a hash object.\n   *\n   * @param outputBits The length of output.\n   * @param outputBits The length of output.\n   */\n  create(outputBits: number): Hasher;\n\n  /**\n   * Create a hash object and hash message.\n   *\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   */\n  update(message: Message, outputBits: number): Hasher;\n}\n\ninterface CshakeHash {\n  /**\n   * Hash and return hex string.\n   *\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   * @param functionName The function name string.\n   * @param customization The customization string.\n   */\n  (message: Message, outputBits: number, functionName: Message, customization: Message): string;\n\n  /**\n   * Hash and return hex string.\n   *\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   * @param functionName The function name string.\n   * @param customization The customization string.\n   */\n  hex(message: Message, outputBits: number, functionName: Message, customization: Message): string;\n\n  /**\n   * Hash and return ArrayBuffer.\n   *\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   * @param functionName The function name string.\n   * @param customization The customization string.\n   */\n  arrayBuffer(message: Message, outputBits: number, functionName: Message, customization: Message): ArrayBuffer;\n\n  /**\n   * Hash and return integer array.\n   *\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   * @param functionName The function name string.\n   * @param customization The customization string.\n   */\n  digest(message: Message, outputBits: number, functionName: Message, customization: Message): number[];\n\n  /**\n   * Hash and return integer array.\n   *\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   * @param functionName The function name string.\n   * @param customization The customization string.\n   */\n  array(message: Message, outputBits: number, functionName: Message, customization: Message): number[];\n\n  /**\n   * Create a hash object.\n   *\n   * @param outputBits The length of output.\n   * @param outputBits The length of output.\n   */\n  create(outputBits: number): Hasher;\n\n  /**\n   * Create a hash object.\n   *\n   * @param outputBits The length of output.\n   * @param functionName The function name string.\n   * @param customization The customization string.\n   */\n  create(outputBits: number, functionName: Message, customization: Message): Hasher;\n\n  /**\n   * Create a hash object and hash message.\n   *\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   * @param functionName The function name string.\n   * @param customization The customization string.\n   */\n  update(message: Message, outputBits: number, functionName: Message, customization: Message): Hasher;\n}\n\ninterface KmacHash {\n  /**\n   * Hash and return hex string.\n   *\n   * @param key The key string.\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   * @param customization The customization string.\n   */\n  (key: Message, message: Message, outputBits: number, customization: Message): string;\n\n  /**\n   * Hash and return hex string.\n   *\n   * @param key The key string.\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   * @param customization The customization string.\n   */\n  hex(key: Message, message: Message, outputBits: number, customization: Message): string;\n\n  /**\n   * Hash and return ArrayBuffer.\n   *\n   * @param key The key string.\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   * @param customization The customization string.\n   */\n  arrayBuffer(key: Message, message: Message, outputBits: number, customization: Message): ArrayBuffer;\n\n  /**\n   * Hash and return integer array.\n   *\n   * @param key The key string.\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   * @param customization The customization string.\n   */\n  digest(key: Message, message: Message, outputBits: number, customization: Message): number[];\n\n  /**\n   * Hash and return integer array.\n   *\n   * @param key The key string.\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   * @param customization The customization string.\n   */\n  array(key: Message, message: Message, outputBits: number, customization: Message): number[];\n\n  /**\n   * Create a hash object.\n   *\n   * @param key The key string.\n   * @param outputBits The length of output.\n   * @param customization The customization string.\n   */\n  create(key: Message, outputBits: number, customization: Message): Hasher;\n\n  /**\n   * Create a hash object and hash message.\n   *\n   * @param key The key string.\n   * @param message The message you want to hash.\n   * @param outputBits The length of output.\n   * @param customization The customization string.\n   */\n  update(key: Message, message: Message, outputBits: number, customization: Message): Hasher;\n}\n\nexport var sha3_512: Hash;\nexport var sha3_384: Hash;\nexport var sha3_256: Hash;\nexport var sha3_224: Hash;\nexport var keccak_512: Hash;\nexport var keccak_384: Hash;\nexport var keccak_256: Hash;\nexport var keccak_224: Hash;\nexport var keccak512: Hash;\nexport var keccak384: Hash;\nexport var keccak256: Hash;\nexport var keccak224: Hash;\nexport var shake_128: ShakeHash;\nexport var shake_256: ShakeHash;\nexport var shake128: ShakeHash;\nexport var shake256: ShakeHash;\nexport var cshake_128: CshakeHash;\nexport var cshake_256: CshakeHash;\nexport var cshake128: CshakeHash;\nexport var cshake256: CshakeHash;\nexport var kmac_128: KmacHash;\nexport var kmac_256: KmacHash;\nexport var kmac128: KmacHash;\nexport var kmac256: KmacHash;\n"],"names":["sha3_512","sha3_384","sha3_256","sha3_224","keccak_512","keccak_384","keccak_256","keccak_224","keccak512","keccak384","keccak256","keccak224","shake_128","shake_256","shake128","shake256","cshake_128","cshake_256","cshake128","cshake256","kmac_128","kmac_256","kmac128","kmac256"],"mappings":";;AAqSO,GAAG,CAACA,QAAQ;QAARA,QAAQ,GAARA,QAAQ;AACZ,GAAG,CAACC,QAAQ;QAARA,QAAQ,GAARA,QAAQ;AACZ,GAAG,CAACC,QAAQ;QAARA,QAAQ,GAARA,QAAQ;AACZ,GAAG,CAACC,QAAQ;QAARA,QAAQ,GAARA,QAAQ;AACZ,GAAG,CAACC,UAAU;QAAVA,UAAU,GAAVA,UAAU;AACd,GAAG,CAACC,UAAU;QAAVA,UAAU,GAAVA,UAAU;AACd,GAAG,CAACC,UAAU;QAAVA,UAAU,GAAVA,UAAU;AACd,GAAG,CAACC,UAAU;QAAVA,UAAU,GAAVA,UAAU;AACd,GAAG,CAACC,SAAS;QAATA,SAAS,GAATA,SAAS;AACb,GAAG,CAACC,SAAS;QAATA,SAAS,GAATA,SAAS;AACb,GAAG,CAACC,SAAS;QAATA,SAAS,GAATA,SAAS;AACb,GAAG,CAACC,SAAS;QAATA,SAAS,GAATA,SAAS;AACb,GAAG,CAACC,SAAS;QAATA,SAAS,GAATA,SAAS;AACb,GAAG,CAACC,SAAS;QAATA,SAAS,GAATA,SAAS;AACb,GAAG,CAACC,QAAQ;QAARA,QAAQ,GAARA,QAAQ;AACZ,GAAG,CAACC,QAAQ;QAARA,QAAQ,GAARA,QAAQ;AACZ,GAAG,CAACC,UAAU;QAAVA,UAAU,GAAVA,UAAU;AACd,GAAG,CAACC,UAAU;QAAVA,UAAU,GAAVA,UAAU;AACd,GAAG,CAACC,SAAS;QAATA,SAAS,GAATA,SAAS;AACb,GAAG,CAACC,SAAS;QAATA,SAAS,GAATA,SAAS;AACb,GAAG,CAACC,QAAQ;QAARA,QAAQ,GAARA,QAAQ;AACZ,GAAG,CAACC,QAAQ;QAARA,QAAQ,GAARA,QAAQ;AACZ,GAAG,CAACC,OAAO;QAAPA,OAAO,GAAPA,OAAO;AACX,GAAG,CAACC,OAAO;QAAPA,OAAO,GAAPA,OAAO"}