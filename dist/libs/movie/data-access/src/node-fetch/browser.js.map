{"version":3,"sources":["../../../../../../libs/movie/data-access/node_modules/node-fetch/browser.js"],"sourcesContent":["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;"],"names":["getGlobal","self","window","global","Error","module","exports","fetch","default","bind","Headers","Request","Response"],"mappings":"AAAA,CAAY;AAEZ,EAA+C,AAA/C,6CAA+C;AAC/C,GAAG,CAACA,SAAS,GAAG,QAAQ,GAAI,CAAC;IAC5B,EAAsD,AAAtD,oDAAsD;IACtD,EAA8B,AAA9B,4BAA8B;IAC9B,EAAsD,AAAtD,oDAAsD;IACtD,EAAE,EAAE,MAAM,CAACC,IAAI,KAAK,CAAW,YAAE,CAAC;QAAC,MAAM,CAACA,IAAI;IAAE,CAAC;IACjD,EAAE,EAAE,MAAM,CAACC,MAAM,KAAK,CAAW,YAAE,CAAC;QAAC,MAAM,CAACA,MAAM;IAAE,CAAC;IACrD,EAAE,EAAE,MAAM,CAACC,MAAM,KAAK,CAAW,YAAE,CAAC;QAAC,MAAM,CAACA,MAAM;IAAE,CAAC;IACrD,KAAK,CAAC,GAAG,CAACC,KAAK,CAAC,CAAgC;AACjD,CAAC;AAED,GAAG,CAACD,MAAM,GAAGH,SAAS;AAEtBK,MAAM,CAACC,OAAO,GAAGA,OAAO,GAAGH,MAAM,CAACI,KAAK;AAEvC,EAAqC,AAArC,mCAAqC;AACrC,EAAE,EAAEJ,MAAM,CAACI,KAAK,EAAE,CAAC;IAClBD,OAAO,CAACE,OAAO,GAAGL,MAAM,CAACI,KAAK,CAACE,IAAI,CAACN,MAAM;AAC3C,CAAC;AAEDG,OAAO,CAACI,OAAO,GAAGP,MAAM,CAACO,OAAO;AAChCJ,OAAO,CAACK,OAAO,GAAGR,MAAM,CAACQ,OAAO;AAChCL,OAAO,CAACM,QAAQ,GAAGT,MAAM,CAACS,QAAQ"}