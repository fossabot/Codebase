{"version":3,"sources":["../../../../../../../../../../libs/movie/data-access/node_modules/@supabase/realtime-js/dist/module/lib/timer.d.ts"],"sourcesContent":["/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    callback: Function;\n    timerCalc: Function;\n    timer: number | undefined;\n    tries: number;\n    constructor(callback: Function, timerCalc: Function);\n    reset(): void;\n    scheduleTimeout(): void;\n}\n//# sourceMappingURL=timer.d.ts.map"],"names":["Timer"],"mappings":";;AAYe,GAAK,CAACA,KAAK,SAALA,KAAK;CAS1B,CAAmC,AAAnC,EAAmC,AAAnC,iCAAmC;;kBATdA,KAAK"}