{"version":3,"sources":["../../../../../../../../../libs/movie/data-access/node_modules/@supabase/realtime-js/dist/main/RealtimeSubscription.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"./lib/constants\");\nconst push_1 = __importDefault(require(\"./lib/push\"));\nconst timer_1 = __importDefault(require(\"./lib/timer\"));\nclass RealtimeSubscription {\n    constructor(topic, params = {}, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = [];\n        this.state = constants_1.CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.timeout = this.socket.timeout;\n        this.joinPush = new push_1.default(this, constants_1.CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new timer_1.default(() => this.rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = constants_1.CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this.onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this.joinRef()}`);\n            this.state = constants_1.CHANNEL_STATES.closed;\n            this.socket.remove(this);\n        });\n        this.onError((reason) => {\n            if (this.isLeaving() || this.isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = constants_1.CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this.isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = constants_1.CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.on(constants_1.CHANNEL_EVENTS.reply, (payload, ref) => {\n            this.trigger(this.replyEventName(ref), payload);\n        });\n    }\n    rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this.rejoin();\n        }\n    }\n    subscribe(timeout = this.timeout) {\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            this.joinedOnce = true;\n            this.rejoin(timeout);\n            return this.joinPush;\n        }\n    }\n    onClose(callback) {\n        this.on(constants_1.CHANNEL_EVENTS.close, callback);\n    }\n    onError(callback) {\n        this.on(constants_1.CHANNEL_EVENTS.error, (reason) => callback(reason));\n    }\n    on(event, callback) {\n        this.bindings.push({ event, callback });\n    }\n    off(event) {\n        this.bindings = this.bindings.filter((bind) => bind.event !== event);\n    }\n    canPush() {\n        return this.socket.isConnected() && this.isJoined();\n    }\n    push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new push_1.default(this, event, payload, timeout);\n        if (this.canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = constants_1.CHANNEL_STATES.leaving;\n        let onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this.trigger(constants_1.CHANNEL_EVENTS.close, 'leave', this.joinRef());\n        };\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        let leavePush = new push_1.default(this, constants_1.CHANNEL_EVENTS.leave, {}, timeout);\n        leavePush.receive('ok', () => onClose()).receive('timeout', () => onClose());\n        leavePush.send();\n        if (!this.canPush()) {\n            leavePush.trigger('ok', {});\n        }\n        return leavePush;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     */\n    onMessage(event, payload, ref) {\n        return payload;\n    }\n    isMember(topic) {\n        return this.topic === topic;\n    }\n    joinRef() {\n        return this.joinPush.ref;\n    }\n    rejoin(timeout = this.timeout) {\n        if (this.isLeaving()) {\n            return;\n        }\n        this.socket.leaveOpenTopic(this.topic);\n        this.state = constants_1.CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    trigger(event, payload, ref) {\n        let { close, error, leave, join } = constants_1.CHANNEL_EVENTS;\n        let events = [close, error, leave, join];\n        if (ref && events.indexOf(event) >= 0 && ref !== this.joinRef()) {\n            return;\n        }\n        let handledPayload = this.onMessage(event, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        this.bindings\n            .filter((bind) => {\n            // Bind all events if the user specifies a wildcard.\n            if (bind.event === '*') {\n                return event === (payload === null || payload === void 0 ? void 0 : payload.type);\n            }\n            else {\n                return bind.event === event;\n            }\n        })\n            .map((bind) => bind.callback(handledPayload, ref));\n    }\n    replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    isClosed() {\n        return this.state === constants_1.CHANNEL_STATES.closed;\n    }\n    isErrored() {\n        return this.state === constants_1.CHANNEL_STATES.errored;\n    }\n    isJoined() {\n        return this.state === constants_1.CHANNEL_STATES.joined;\n    }\n    isJoining() {\n        return this.state === constants_1.CHANNEL_STATES.joining;\n    }\n    isLeaving() {\n        return this.state === constants_1.CHANNEL_STATES.leaving;\n    }\n}\nexports.default = RealtimeSubscription;\n//# sourceMappingURL=RealtimeSubscription.js.map"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","constants_1","require","push_1","timer_1","RealtimeSubscription","rejoinUntilConnected","rejoinTimer","scheduleTimeout","socket","isConnected","rejoin","subscribe","timeout","joinedOnce","joinPush","onClose","callback","on","CHANNEL_EVENTS","close","onError","error","reason","event","bindings","push","off","filter","bind","canPush","isJoined","payload","topic","pushEvent","default","send","startTimeout","pushBuffer","updateJoinPayload","updatePayload","unsubscribe","state","CHANNEL_STATES","leaving","log","trigger","joinRef","destroy","leavePush","leave","receive","onMessage","ref","isMember","isLeaving","leaveOpenTopic","joining","resend","join","events","indexOf","handledPayload","type","map","replyEventName","isClosed","closed","isErrored","errored","joined","isJoining","params","reconnectAfterMs","reset","forEach","remove","reply"],"mappings":"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"}