{"version":3,"sources":["../../../../../../../../../../libs/movie/data-access/node_modules/@supabase/realtime-js/dist/module/lib/push.d.ts"],"sourcesContent":["import RealtimeSubscription from '../RealtimeSubscription';\nexport default class Push {\n    channel: RealtimeSubscription;\n    event: string;\n    payload: {\n        [key: string]: unknown;\n    };\n    timeout: number;\n    sent: boolean;\n    timeoutTimer: number | undefined;\n    ref: string;\n    receivedResp: {\n        status: string;\n        response: Function;\n    } | null;\n    recHooks: {\n        status: string;\n        callback: Function;\n    }[];\n    refEvent: string | null;\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel: RealtimeSubscription, event: string, payload?: {\n        [key: string]: unknown;\n    }, timeout?: number);\n    resend(timeout: number): void;\n    send(): void;\n    updatePayload(payload: {\n        [key: string]: unknown;\n    }): void;\n    receive(status: string, callback: Function): this;\n    startTimeout(): void;\n    trigger(status: string, response: any): void;\n    destroy(): void;\n    private _cancelRefEvent;\n    private _cancelTimeout;\n    private _matchReceive;\n    private _hasReceived;\n}\n//# sourceMappingURL=push.d.ts.map"],"names":["Push"],"mappings":";;AACe,GAAK,CAACA,IAAI,SAAJA,IAAI;CA4CzB,CAAkC,AAAlC,EAAkC,AAAlC,gCAAkC;;kBA5CbA,IAAI"}