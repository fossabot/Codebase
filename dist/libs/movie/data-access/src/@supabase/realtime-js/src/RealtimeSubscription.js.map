{"version":3,"sources":["../../../../../../../../libs/movie/data-access/node_modules/@supabase/realtime-js/src/RealtimeSubscription.ts"],"sourcesContent":["import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants'\nimport Push from './lib/push'\nimport RealtimeClient from './RealtimeClient'\nimport Timer from './lib/timer'\n\nexport default class RealtimeSubscription {\n  bindings: any[] = []\n  timeout: number\n  state = CHANNEL_STATES.closed\n  joinedOnce = false\n  joinPush: Push\n  rejoinTimer: Timer\n  pushBuffer: Push[] = []\n\n  constructor(\n    public topic: string,\n    public params: { [key: string]: unknown } = {},\n    public socket: RealtimeClient\n  ) {\n    this.timeout = this.socket.timeout\n    this.joinPush = new Push(\n      this,\n      CHANNEL_EVENTS.join,\n      this.params,\n      this.timeout\n    )\n    this.rejoinTimer = new Timer(\n      () => this.rejoinUntilConnected(),\n      this.socket.reconnectAfterMs\n    )\n    this.joinPush.receive('ok', () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach((pushEvent: Push) => pushEvent.send())\n      this.pushBuffer = []\n    })\n    this.onClose(() => {\n      this.rejoinTimer.reset()\n      this.socket.log('channel', `close ${this.topic} ${this.joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket.remove(this)\n    })\n    this.onError((reason: string) => {\n      if (this.isLeaving() || this.isClosed()) {\n        return\n      }\n      this.socket.log('channel', `error ${this.topic}`, reason)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.joinPush.receive('timeout', () => {\n      if (!this.isJoining()) {\n        return\n      }\n      this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.on(CHANNEL_EVENTS.reply, (payload: any, ref: string) => {\n      this.trigger(this.replyEventName(ref), payload)\n    })\n  }\n\n  rejoinUntilConnected() {\n    this.rejoinTimer.scheduleTimeout()\n    if (this.socket.isConnected()) {\n      this.rejoin()\n    }\n  }\n\n  subscribe(timeout = this.timeout) {\n    if (this.joinedOnce) {\n      throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`\n    } else {\n      this.joinedOnce = true\n      this.rejoin(timeout)\n      return this.joinPush\n    }\n  }\n\n  onClose(callback: Function) {\n    this.on(CHANNEL_EVENTS.close, callback)\n  }\n\n  onError(callback: Function) {\n    this.on(CHANNEL_EVENTS.error, (reason: string) => callback(reason))\n  }\n\n  on(event: string, callback: Function) {\n    this.bindings.push({ event, callback })\n  }\n\n  off(event: string) {\n    this.bindings = this.bindings.filter((bind) => bind.event !== event)\n  }\n\n  canPush() {\n    return this.socket.isConnected() && this.isJoined()\n  }\n\n  push(event: CHANNEL_EVENTS, payload: any, timeout = this.timeout) {\n    if (!this.joinedOnce) {\n      throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`\n    }\n    let pushEvent = new Push(this, event, payload, timeout)\n    if (this.canPush()) {\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  updateJoinPayload(payload: { [key: string]: unknown }): void {\n    this.joinPush.updatePayload(payload)\n  }\n\n  /**\n   * Leaves the channel\n   *\n   * Unsubscribes from server events, and instructs channel to terminate on server.\n   * Triggers onClose() hooks.\n   *\n   * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n   * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n   */\n  unsubscribe(timeout = this.timeout) {\n    this.state = CHANNEL_STATES.leaving\n    let onClose = () => {\n      this.socket.log('channel', `leave ${this.topic}`)\n      this.trigger(CHANNEL_EVENTS.close, 'leave', this.joinRef())\n    }\n    // Destroy joinPush to avoid connection timeouts during unscription phase\n    this.joinPush.destroy()\n\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout)\n    leavePush.receive('ok', () => onClose()).receive('timeout', () => onClose())\n    leavePush.send()\n    if (!this.canPush()) {\n      leavePush.trigger('ok', {})\n    }\n\n    return leavePush\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling before dispatching to the channel callbacks.\n   * Must return the payload, modified or unmodified.\n   */\n  onMessage(event: string, payload: any, ref?: string) {\n    return payload\n  }\n\n  isMember(topic: string) {\n    return this.topic === topic\n  }\n\n  joinRef() {\n    return this.joinPush.ref\n  }\n\n  rejoin(timeout = this.timeout) {\n    if (this.isLeaving()) {\n      return\n    }\n    this.socket.leaveOpenTopic(this.topic)\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  trigger(event: string, payload?: any, ref?: string) {\n    let { close, error, leave, join } = CHANNEL_EVENTS\n    let events: string[] = [close, error, leave, join]\n    if (ref && events.indexOf(event) >= 0 && ref !== this.joinRef()) {\n      return\n    }\n    let handledPayload = this.onMessage(event, payload, ref)\n    if (payload && !handledPayload) {\n      throw 'channel onMessage callbacks must return the payload, modified or unmodified'\n    }\n\n    this.bindings\n      .filter((bind) => {\n        // Bind all events if the user specifies a wildcard.\n        if (bind.event === '*') {\n          return event === payload?.type\n        } else {\n          return bind.event === event\n        }\n      })\n      .map((bind) => bind.callback(handledPayload, ref))\n  }\n\n  replyEventName(ref: string) {\n    return `chan_reply_${ref}`\n  }\n\n  isClosed() {\n    return this.state === CHANNEL_STATES.closed\n  }\n  isErrored() {\n    return this.state === CHANNEL_STATES.errored\n  }\n  isJoined() {\n    return this.state === CHANNEL_STATES.joined\n  }\n  isJoining() {\n    return this.state === CHANNEL_STATES.joining\n  }\n  isLeaving() {\n    return this.state === CHANNEL_STATES.leaving\n  }\n}\n"],"names":["RealtimeSubscription","rejoinUntilConnected","rejoinTimer","scheduleTimeout","socket","isConnected","rejoin","subscribe","timeout","joinedOnce","joinPush","onClose","callback","on","CHANNEL_EVENTS","close","onError","error","reason","event","bindings","push","off","filter","bind","canPush","isJoined","payload","topic","pushEvent","Push","send","startTimeout","pushBuffer","updateJoinPayload","updatePayload","unsubscribe","state","CHANNEL_STATES","leaving","log","trigger","joinRef","destroy","leavePush","leave","receive","onMessage","ref","isMember","isLeaving","leaveOpenTopic","joining","resend","join","events","indexOf","handledPayload","type","map","replyEventName","isClosed","closed","isErrored","errored","joined","isJoining","params","Timer","reconnectAfterMs","reset","forEach","remove","reply"],"mappings":"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"}