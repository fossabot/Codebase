{"version":3,"sources":["../../../../../../../../libs/movie/data-access/node_modules/@supabase/realtime-js/src/RealtimeClient.ts"],"sourcesContent":["import {\n  VSN,\n  CHANNEL_EVENTS,\n  TRANSPORTS,\n  SOCKET_STATES,\n  DEFAULT_TIMEOUT,\n  WS_CLOSE_NORMAL,\n  DEFAULT_HEADERS,\n} from './lib/constants'\nimport Timer from './lib/timer'\nimport RealtimeSubscription from './RealtimeSubscription'\nimport { w3cwebsocket as WebSocket } from 'websocket'\nimport Serializer from './lib/serializer'\n\nexport type Options = {\n  transport?: WebSocket\n  timeout?: number\n  heartbeatIntervalMs?: number\n  longpollerTimeout?: number\n  logger?: Function\n  encode?: Function\n  decode?: Function\n  reconnectAfterMs?: Function\n  headers?: { [key: string]: string }\n  params?: { [key: string]: string }\n}\ntype Message = {\n  topic: string\n  event: string\n  payload: any\n  ref: string\n}\n\nconst noop = () => {}\n\nexport default class RealtimeClient {\n  accessToken: string | null = null\n  channels: RealtimeSubscription[] = []\n  endPoint: string = ''\n  headers?: { [key: string]: string } = DEFAULT_HEADERS\n  params?: { [key: string]: string } = {}\n  timeout: number = DEFAULT_TIMEOUT\n  transport: any = WebSocket\n  heartbeatIntervalMs: number = 30000\n  longpollerTimeout: number = 20000\n  heartbeatTimer: ReturnType<typeof setInterval> | undefined = undefined\n  pendingHeartbeatRef: string | null = null\n  ref: number = 0\n  reconnectTimer: Timer\n  logger: Function = noop\n  encode: Function\n  decode: Function\n  reconnectAfterMs: Function\n  conn: WebSocket | null = null\n  sendBuffer: Function[] = []\n  serializer: Serializer = new Serializer()\n  stateChangeCallbacks: {\n    open: Function[]\n    close: Function[]\n    error: Function[]\n    message: Function[]\n  } = {\n    open: [],\n    close: [],\n    error: [],\n    message: [],\n  }\n\n  /**\n   * Initializes the Socket\n   *\n   * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n   * @param options.transport The Websocket Transport, for example WebSocket.\n   * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n   * @param options.params The optional params to pass when connecting.\n   * @param options.headers The optional headers to pass when connecting.\n   * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n   * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n   * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n   * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n   * @param options.longpollerTimeout The maximum timeout of a long poll AJAX request. Defaults to 20s (double the server long poll timer).\n   * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n   */\n  constructor(endPoint: string, options?: Options) {\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`\n\n    if (options?.params) this.params = options.params\n    if (options?.headers) this.headers = { ...this.headers, ...options.headers }\n    if (options?.timeout) this.timeout = options.timeout\n    if (options?.logger) this.logger = options.logger\n    if (options?.transport) this.transport = options.transport\n    if (options?.heartbeatIntervalMs)\n      this.heartbeatIntervalMs = options.heartbeatIntervalMs\n    if (options?.longpollerTimeout)\n      this.longpollerTimeout = options.longpollerTimeout\n\n    this.reconnectAfterMs = options?.reconnectAfterMs\n      ? options.reconnectAfterMs\n      : (tries: number) => {\n          return [1000, 2000, 5000, 10000][tries - 1] || 10000\n        }\n    this.encode = options?.encode\n      ? options.encode\n      : (payload: JSON, callback: Function) => {\n          return callback(JSON.stringify(payload))\n        }\n    this.decode = options?.decode\n      ? options.decode\n      : this.serializer.decode.bind(this.serializer)\n    this.reconnectTimer = new Timer(async () => {\n      await this.disconnect()\n      this.connect()\n    }, this.reconnectAfterMs)\n  }\n\n  /**\n   * Connects the socket.\n   */\n  connect() {\n    if (this.conn) {\n      return\n    }\n\n    this.conn = new this.transport(this.endPointURL(), [], null, this.headers)\n    if (this.conn) {\n      // this.conn.timeout = this.longpollerTimeout // TYPE ERROR\n      this.conn.binaryType = 'arraybuffer'\n      this.conn.onopen = () => this._onConnOpen()\n      this.conn.onerror = (error) => this._onConnError(error)\n      this.conn.onmessage = (event) => this.onConnMessage(event)\n      this.conn.onclose = (event) => this._onConnClose(event)\n    }\n  }\n\n  /**\n   * Disconnects the socket.\n   *\n   * @param code A numeric status code to send on disconnect.\n   * @param reason A custom reason for the disconnect.\n   */\n  disconnect(\n    code?: number,\n    reason?: string\n  ): Promise<{ error: Error | null; data: boolean }> {\n    return new Promise((resolve, _reject) => {\n      try {\n        if (this.conn) {\n          this.conn.onclose = function () {} // noop\n          if (code) {\n            this.conn.close(code, reason || '')\n          } else {\n            this.conn.close()\n          }\n          this.conn = null\n          // remove open handles\n          this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n          this.reconnectTimer.reset()\n        }\n        resolve({ error: null, data: true })\n      } catch (error) {\n        resolve({ error: error as Error, data: false })\n      }\n    })\n  }\n\n  /**\n   * Logs the message. Override `this.logger` for specialized logging.\n   */\n  log(kind: string, msg: string, data?: any) {\n    this.logger(kind, msg, data)\n  }\n\n  /**\n   * Registers a callback for connection state change event.\n   * @param callback A function to be called when the event occurs.\n   *\n   * @example\n   *    socket.onOpen(() => console.log(\"Socket opened.\"))\n   */\n  onOpen(callback: Function) {\n    this.stateChangeCallbacks.open.push(callback)\n  }\n\n  /**\n   * Registers a callbacks for connection state change events.\n   * @param callback A function to be called when the event occurs.\n   *\n   * @example\n   *    socket.onOpen(() => console.log(\"Socket closed.\"))\n   */\n  onClose(callback: Function) {\n    this.stateChangeCallbacks.close.push(callback)\n  }\n\n  /**\n   * Registers a callback for connection state change events.\n   * @param callback A function to be called when the event occurs.\n   *\n   * @example\n   *    socket.onOpen((error) => console.log(\"An error occurred\"))\n   */\n  onError(callback: Function) {\n    this.stateChangeCallbacks.error.push(callback)\n  }\n\n  /**\n   * Calls a function any time a message is received.\n   * @param callback A function to be called when the event occurs.\n   *\n   * @example\n   *    socket.onMessage((message) => console.log(message))\n   */\n  onMessage(callback: Function) {\n    this.stateChangeCallbacks.message.push(callback)\n  }\n\n  /**\n   * Returns the current state of the socket.\n   */\n  connectionState() {\n    switch (this.conn && this.conn.readyState) {\n      case SOCKET_STATES.connecting:\n        return 'connecting'\n      case SOCKET_STATES.open:\n        return 'open'\n      case SOCKET_STATES.closing:\n        return 'closing'\n      default:\n        return 'closed'\n    }\n  }\n\n  /**\n   * Retuns `true` is the connection is open.\n   */\n  isConnected() {\n    return this.connectionState() === 'open'\n  }\n\n  /**\n   * Removes a subscription from the socket.\n   *\n   * @param channel An open subscription.\n   */\n  remove(channel: RealtimeSubscription) {\n    this.channels = this.channels.filter(\n      (c: RealtimeSubscription) => c.joinRef() !== channel.joinRef()\n    )\n  }\n\n  channel(topic: string, chanParams = {}) {\n    let chan = new RealtimeSubscription(topic, chanParams, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  push(data: Message) {\n    let { topic, event, payload, ref } = data\n    let callback = () => {\n      this.encode(data, (result: any) => {\n        this.conn?.send(result)\n      })\n    }\n    this.log('push', `${topic} ${event} (${ref})`, payload)\n    if (this.isConnected()) {\n      callback()\n    } else {\n      this.sendBuffer.push(callback)\n    }\n  }\n\n  onConnMessage(rawMessage: any) {\n    this.decode(rawMessage.data, (msg: Message) => {\n      let { topic, event, payload, ref } = msg\n      if (ref && ref === this.pendingHeartbeatRef) {\n        this.pendingHeartbeatRef = null\n      } else if (event === payload?.type) {\n        this._resetHeartbeat()\n      }\n\n      this.log(\n        'receive',\n        `${payload.status || ''} ${topic} ${event} ${\n          (ref && '(' + ref + ')') || ''\n        }`,\n        payload\n      )\n      this.channels\n        .filter((channel: RealtimeSubscription) => channel.isMember(topic))\n        .forEach((channel: RealtimeSubscription) =>\n          channel.trigger(event, payload, ref)\n        )\n      this.stateChangeCallbacks.message.forEach((callback) => callback(msg))\n    })\n  }\n\n  /**\n   * Returns the URL of the websocket.\n   */\n  endPointURL() {\n    return this._appendParams(\n      this.endPoint,\n      Object.assign({}, this.params, { vsn: VSN })\n    )\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   */\n  makeRef() {\n    let newRef = this.ref + 1\n    if (newRef === this.ref) {\n      this.ref = 0\n    } else {\n      this.ref = newRef\n    }\n\n    return this.ref.toString()\n  }\n\n  /**\n   * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n   *\n   * @param token A JWT string.\n   */\n  setAuth(token: string | null) {\n    this.accessToken = token\n\n    try {\n      this.channels.forEach((channel) => {\n        token && channel.updateJoinPayload({ user_token: token })\n\n        if (channel.joinedOnce && channel.isJoined()) {\n          channel.push(CHANNEL_EVENTS.access_token, { access_token: token })\n        }\n      })\n    } catch (error) {\n      console.log('setAuth error', error)\n    }\n  }\n\n  leaveOpenTopic(topic: string): void {\n    let dupChannel = this.channels.find(\n      (c) => c.topic === topic && (c.isJoined() || c.isJoining())\n    )\n    if (dupChannel) {\n      this.log('transport', `leaving duplicate topic \"${topic}\"`)\n      dupChannel.unsubscribe()\n    }\n  }\n\n  private _onConnOpen() {\n    this.log('transport', `connected to ${this.endPointURL()}`)\n    this._flushSendBuffer()\n    this.reconnectTimer.reset()\n    this._resetHeartbeat()\n    this.stateChangeCallbacks.open.forEach((callback) => callback())!\n  }\n\n  private _onConnClose(event: any) {\n    this.log('transport', 'close', event)\n    this._triggerChanError()\n    this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n    this.reconnectTimer.scheduleTimeout()\n    this.stateChangeCallbacks.close.forEach((callback) => callback(event))\n  }\n\n  private _onConnError(error: Error) {\n    this.log('transport', error.message)\n    this._triggerChanError()\n    this.stateChangeCallbacks.error.forEach((callback) => callback(error))\n  }\n\n  private _triggerChanError() {\n    this.channels.forEach((channel: RealtimeSubscription) =>\n      channel.trigger(CHANNEL_EVENTS.error)\n    )\n  }\n\n  private _appendParams(url: string, params: { [key: string]: string }) {\n    if (Object.keys(params).length === 0) {\n      return url\n    }\n    const prefix = url.match(/\\?/) ? '&' : '?'\n    const query = new URLSearchParams(params)\n\n    return `${url}${prefix}${query}`\n  }\n\n  private _flushSendBuffer() {\n    if (this.isConnected() && this.sendBuffer.length > 0) {\n      this.sendBuffer.forEach((callback) => callback())\n      this.sendBuffer = []\n    }\n  }\n\n  private _resetHeartbeat() {\n    this.pendingHeartbeatRef = null\n    this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n    this.heartbeatTimer = setInterval(\n      () => this._sendHeartbeat(),\n      this.heartbeatIntervalMs\n    )\n  }\n\n  private _sendHeartbeat() {\n    if (!this.isConnected()) {\n      return\n    }\n    if (this.pendingHeartbeatRef) {\n      this.pendingHeartbeatRef = null\n      this.log(\n        'transport',\n        'heartbeat timeout. Attempting to re-establish connection'\n      )\n      this.conn?.close(WS_CLOSE_NORMAL, 'hearbeat timeout')\n      return\n    }\n    this.pendingHeartbeatRef = this.makeRef()\n    this.push({\n      topic: 'phoenix',\n      event: 'heartbeat',\n      payload: {},\n      ref: this.pendingHeartbeatRef,\n    })\n    this.setAuth(this.accessToken)\n  }\n}\n"],"names":["noop","RealtimeClient","connect","conn","transport","endPointURL","headers","binaryType","onopen","_onConnOpen","onerror","error","_onConnError","onmessage","event","onConnMessage","onclose","_onConnClose","disconnect","code","reason","Promise","resolve","_reject","close","heartbeatTimer","clearInterval","reconnectTimer","reset","data","log","kind","msg","logger","onOpen","callback","stateChangeCallbacks","open","push","onClose","onError","onMessage","message","connectionState","readyState","SOCKET_STATES","connecting","closing","isConnected","remove","channel","channels","filter","c","joinRef","topic","chanParams","chan","RealtimeSubscription","payload","ref","encode","result","send","sendBuffer","rawMessage","decode","pendingHeartbeatRef","type","_resetHeartbeat","status","isMember","forEach","trigger","_appendParams","endPoint","Object","assign","params","vsn","VSN","makeRef","newRef","toString","setAuth","token","accessToken","updateJoinPayload","user_token","joinedOnce","isJoined","CHANNEL_EVENTS","access_token","console","leaveOpenTopic","dupChannel","find","isJoining","unsubscribe","_flushSendBuffer","_triggerChanError","scheduleTimeout","url","keys","length","prefix","match","query","URLSearchParams","setInterval","_sendHeartbeat","heartbeatIntervalMs","WS_CLOSE_NORMAL","options","DEFAULT_HEADERS","timeout","DEFAULT_TIMEOUT","WebSocket","longpollerTimeout","undefined","serializer","Serializer","TRANSPORTS","websocket","reconnectAfterMs","tries","JSON","stringify","bind","Timer"],"mappings":"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"}