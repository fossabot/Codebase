{"version":3,"sources":["../../../../../../../../../../libs/movie/data-access/node_modules/@supabase/supabase-js/dist/module/lib/SupabaseRealtimeClient.js"],"sourcesContent":["import { Transformers } from '@supabase/realtime-js';\nexport class SupabaseRealtimeClient {\n    constructor(socket, headers, schema, tableName) {\n        const chanParams = {};\n        const topic = tableName === '*' ? `realtime:${schema}` : `realtime:${schema}:${tableName}`;\n        const userToken = headers['Authorization'].split(' ')[1];\n        if (userToken) {\n            chanParams['user_token'] = userToken;\n        }\n        this.subscription = socket.channel(topic, chanParams);\n    }\n    getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n    /**\n     * The event you want to listen to.\n     *\n     * @param event The event\n     * @param callback A callback function that is called whenever the event occurs.\n     */\n    on(event, callback) {\n        this.subscription.on(event, (payload) => {\n            let enrichedPayload = {\n                schema: payload.schema,\n                table: payload.table,\n                commit_timestamp: payload.commit_timestamp,\n                eventType: payload.type,\n                new: {},\n                old: {},\n                errors: payload.errors,\n            };\n            enrichedPayload = Object.assign(Object.assign({}, enrichedPayload), this.getPayloadRecords(payload));\n            callback(enrichedPayload);\n        });\n        return this;\n    }\n    /**\n     * Enables the subscription.\n     */\n    subscribe(callback = () => { }) {\n        this.subscription.onError((e) => callback('SUBSCRIPTION_ERROR', e));\n        this.subscription.onClose(() => callback('CLOSED'));\n        this.subscription\n            .subscribe()\n            .receive('ok', () => callback('SUBSCRIBED'))\n            .receive('error', (e) => callback('SUBSCRIPTION_ERROR', e))\n            .receive('timeout', () => callback('RETRYING_AFTER_TIMEOUT'));\n        return this.subscription;\n    }\n}\n//# sourceMappingURL=SupabaseRealtimeClient.js.map"],"names":["SupabaseRealtimeClient","getPayloadRecords","payload","records","new","old","type","Transformers","convertChangeData","columns","record","old_record","on","event","callback","subscription","enrichedPayload","schema","table","commit_timestamp","eventType","errors","Object","assign","subscribe","onError","e","onClose","receive","socket","headers","tableName","chanParams","topic","userToken","split","channel"],"mappings":";AAA6B,GAAuB,CAAvB,WAAuB;AAC7C,GAAK,CAACA,sBAAsB,SAAtBA,sBAAsB;IAU/BC,iBAAiB,CAACC,OAAO,EAAE,CAAC;QACxB,KAAK,CAACC,OAAO,GAAG,CAAC;YACbC,GAAG,EAAE,CAAC,CAAC;YACPC,GAAG,EAAE,CAAC,CAAC;QACX,CAAC;QACD,EAAE,EAAEH,OAAO,CAACI,IAAI,KAAK,CAAQ,WAAIJ,OAAO,CAACI,IAAI,KAAK,CAAQ,SAAE,CAAC;YACzDH,OAAO,CAACC,GAAG,GAAGG,WAAY,cAACC,iBAAiB,CAACN,OAAO,CAACO,OAAO,EAAEP,OAAO,CAACQ,MAAM;QAChF,CAAC;QACD,EAAE,EAAER,OAAO,CAACI,IAAI,KAAK,CAAQ,WAAIJ,OAAO,CAACI,IAAI,KAAK,CAAQ,SAAE,CAAC;YACzDH,OAAO,CAACE,GAAG,GAAGE,WAAY,cAACC,iBAAiB,CAACN,OAAO,CAACO,OAAO,EAAEP,OAAO,CAACS,UAAU;QACpF,CAAC;QACD,MAAM,CAACR,OAAO;IAClB,CAAC;IACD,EAKG,AALH;;;;;KAKG,AALH,EAKG,CACHS,EAAE,CAACC,KAAK,EAAEC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAACC,YAAY,CAACH,EAAE,CAACC,KAAK,GAAGX,OAAO,GAAK,CAAC;YACtC,GAAG,CAACc,eAAe,GAAG,CAAC;gBACnBC,MAAM,EAAEf,OAAO,CAACe,MAAM;gBACtBC,KAAK,EAAEhB,OAAO,CAACgB,KAAK;gBACpBC,gBAAgB,EAAEjB,OAAO,CAACiB,gBAAgB;gBAC1CC,SAAS,EAAElB,OAAO,CAACI,IAAI;gBACvBF,GAAG,EAAE,CAAC,CAAC;gBACPC,GAAG,EAAE,CAAC,CAAC;gBACPgB,MAAM,EAAEnB,OAAO,CAACmB,MAAM;YAC1B,CAAC;YACDL,eAAe,GAAGM,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEP,eAAe,GAAG,IAAI,CAACf,iBAAiB,CAACC,OAAO;YAClGY,QAAQ,CAACE,eAAe;QAC5B,CAAC;QACD,MAAM,CAAC,IAAI;IACf,CAAC;IACD,EAEG,AAFH;;KAEG,AAFH,EAEG,CACHQ,SAAS,CAACV,QAAQ,OAAS,CAAC,AAAC,CAAC,EAAE,CAAC;QAC7B,IAAI,CAACC,YAAY,CAACU,OAAO,EAAEC,CAAC,GAAKZ,QAAQ,CAAC,CAAoB,qBAAEY,CAAC;;QACjE,IAAI,CAACX,YAAY,CAACY,OAAO,KAAOb,QAAQ,CAAC,CAAQ;;QACjD,IAAI,CAACC,YAAY,CACZS,SAAS,GACTI,OAAO,CAAC,CAAI,SAAQd,QAAQ,CAAC,CAAY;UACzCc,OAAO,CAAC,CAAO,SAAGF,CAAC,GAAKZ,QAAQ,CAAC,CAAoB,qBAAEY,CAAC;UACxDE,OAAO,CAAC,CAAS,cAAQd,QAAQ,CAAC,CAAwB;;QAC/D,MAAM,CAAC,IAAI,CAACC,YAAY;IAC5B,CAAC;gBAxDWc,MAAM,EAAEC,OAAO,EAAEb,MAAM,EAAEc,SAAS,CAAE,CAAC;QAC7C,KAAK,CAACC,UAAU,GAAG,CAAC,CAAC;QACrB,KAAK,CAACC,KAAK,GAAGF,SAAS,KAAK,CAAG,MAAI,SAAS,EAAEd,MAAM,MAAM,SAAS,EAAEA,MAAM,CAAC,CAAC,EAAEc,SAAS;QACxF,KAAK,CAACG,SAAS,GAAGJ,OAAO,CAAC,CAAe,gBAAEK,KAAK,CAAC,CAAG,IAAE,CAAC;QACvD,EAAE,EAAED,SAAS,EAAE,CAAC;YACZF,UAAU,CAAC,CAAY,eAAIE,SAAS;QACxC,CAAC;QACD,IAAI,CAACnB,YAAY,GAAGc,MAAM,CAACO,OAAO,CAACH,KAAK,EAAED,UAAU;IACxD,CAAC;CAkDL,CAAkD,AAAlD,EAAkD,AAAlD,gDAAkD;;QA3DrChC,sBAAsB,GAAtBA,sBAAsB"}