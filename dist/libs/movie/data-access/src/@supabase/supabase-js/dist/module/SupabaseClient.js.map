{"version":3,"sources":["../../../../../../../../../libs/movie/data-access/node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants';\nimport { stripTrailingSlash, isBrowser } from './lib/helpers';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\nimport { SupabaseQueryBuilder } from './lib/SupabaseQueryBuilder';\nimport { SupabaseStorageClient } from '@supabase/storage-js';\nimport { PostgrestClient } from '@supabase/postgrest-js';\nimport { RealtimeClient } from '@supabase/realtime-js';\nconst DEFAULT_OPTIONS = {\n    schema: 'public',\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    multiTab: true,\n    headers: DEFAULT_HEADERS,\n};\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.headers Any additional headers to send with each network request.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n     * @param options.fetch A custom fetch implementation.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        const _supabaseUrl = stripTrailingSlash(supabaseUrl);\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.restUrl = `${_supabaseUrl}/rest/v1`;\n        this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace('http', 'ws');\n        this.authUrl = `${_supabaseUrl}/auth/v1`;\n        this.storageUrl = `${_supabaseUrl}/storage/v1`;\n        this.schema = settings.schema;\n        this.multiTab = settings.multiTab;\n        this.fetch = settings.fetch;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), options === null || options === void 0 ? void 0 : options.headers);\n        this.auth = this._initSupabaseAuthClient(settings);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, settings.realtime));\n        this._listenForAuthEvents();\n        this._listenForMultiTabEvents();\n        // In the future we might allow the user to pass in a logger to receive these events.\n        // this.realtime.onOpen(() => console.log('OPEN'))\n        // this.realtime.onClose(() => console.log('CLOSED'))\n        // this.realtime.onError((e: Error) => console.log('Socket error', e))\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */\n    get storage() {\n        return new SupabaseStorageClient(this.storageUrl, this._getAuthHeaders(), this.fetch);\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table The table name to operate on.\n     */\n    from(table) {\n        const url = `${this.restUrl}/${table}`;\n        return new SupabaseQueryBuilder(url, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n            realtime: this.realtime,\n            table,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     * @param head   When set to true, no data will be returned.\n     * @param count  Count algorithm to use to count rows in a table.\n     *\n     */\n    rpc(fn, params, { head = false, count = null, } = {}) {\n        const rest = this._initPostgRESTClient();\n        return rest.rpc(fn, params, { head, count });\n    }\n    /**\n     * Closes and removes all subscriptions and returns a list of removed\n     * subscriptions and their errors.\n     */\n    removeAllSubscriptions() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const allSubs = this.getSubscriptions().slice();\n            const allSubPromises = allSubs.map((sub) => this.removeSubscription(sub));\n            const allRemovedSubs = yield Promise.all(allSubPromises);\n            return allRemovedSubs.map(({ error }, i) => {\n                return {\n                    data: { subscription: allSubs[i] },\n                    error,\n                };\n            });\n        });\n    }\n    /**\n     * Closes and removes a subscription and returns the number of open subscriptions.\n     *\n     * @param subscription The subscription you want to close and remove.\n     */\n    removeSubscription(subscription) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { error } = yield this._closeSubscription(subscription);\n            const allSubs = this.getSubscriptions();\n            const openSubCount = allSubs.filter((chan) => chan.isJoined()).length;\n            if (allSubs.length === 0)\n                yield this.realtime.disconnect();\n            return { data: { openSubscriptions: openSubCount }, error };\n        });\n    }\n    _closeSubscription(subscription) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let error = null;\n            if (!subscription.isClosed()) {\n                const { error: unsubError } = yield this._unsubscribeSubscription(subscription);\n                error = unsubError;\n            }\n            this.realtime.remove(subscription);\n            return { error };\n        });\n    }\n    _unsubscribeSubscription(subscription) {\n        return new Promise((resolve) => {\n            subscription\n                .unsubscribe()\n                .receive('ok', () => resolve({ error: null }))\n                .receive('error', (error) => resolve({ error }))\n                .receive('timeout', () => resolve({ error: new Error('timed out') }));\n        });\n    }\n    /**\n     * Returns an array of all your subscriptions.\n     */\n    getSubscriptions() {\n        return this.realtime.channels;\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, localStorage, headers, fetch, }) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new SupabaseAuthClient({\n            url: this.authUrl,\n            headers: Object.assign(Object.assign({}, headers), authHeaders),\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            localStorage,\n            fetch,\n        });\n    }\n    _initRealtimeClient(options) {\n        return new RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), { params: Object.assign(Object.assign({}, options === null || options === void 0 ? void 0 : options.params), { apikey: this.supabaseKey }) }));\n    }\n    _initPostgRESTClient() {\n        return new PostgrestClient(this.restUrl, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n            fetch: this.fetch,\n        });\n    }\n    _getAuthHeaders() {\n        var _a, _b;\n        const headers = this.headers;\n        const authBearer = (_b = (_a = this.auth.session()) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n        headers['apikey'] = this.supabaseKey;\n        headers['Authorization'] = `Bearer ${authBearer}`;\n        return headers;\n    }\n    _listenForMultiTabEvents() {\n        if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            return null;\n        }\n        try {\n            return window === null || window === void 0 ? void 0 : window.addEventListener('storage', (e) => {\n                var _a, _b, _c;\n                if (e.key === STORAGE_KEY) {\n                    const newSession = JSON.parse(String(e.newValue));\n                    const accessToken = (_b = (_a = newSession === null || newSession === void 0 ? void 0 : newSession.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined;\n                    const previousAccessToken = (_c = this.auth.session()) === null || _c === void 0 ? void 0 : _c.access_token;\n                    if (!accessToken) {\n                        this._handleTokenChanged('SIGNED_OUT', accessToken, 'STORAGE');\n                    }\n                    else if (!previousAccessToken && accessToken) {\n                        this._handleTokenChanged('SIGNED_IN', accessToken, 'STORAGE');\n                    }\n                    else if (previousAccessToken !== accessToken) {\n                        this._handleTokenChanged('TOKEN_REFRESHED', accessToken, 'STORAGE');\n                    }\n                }\n            });\n        }\n        catch (error) {\n            console.error('_listenForMultiTabEvents', error);\n            return null;\n        }\n    }\n    _listenForAuthEvents() {\n        let { data } = this.auth.onAuthStateChange((event, session) => {\n            this._handleTokenChanged(event, session === null || session === void 0 ? void 0 : session.access_token, 'CLIENT');\n        });\n        return data;\n    }\n    _handleTokenChanged(event, token, source) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n            this.changedAccessToken !== token) {\n            // Token has changed\n            this.realtime.setAuth(token);\n            // Ideally we should call this.auth.recoverSession() - need to make public\n            // to trigger a \"SIGNED_IN\" event on this client.\n            if (source == 'STORAGE')\n                this.auth.setAuth(token);\n            this.changedAccessToken = token;\n        }\n        else if (event === 'SIGNED_OUT' || event === 'USER_DELETED') {\n            // Token is removed\n            this.realtime.setAuth(this.supabaseKey);\n            if (source == 'STORAGE')\n                this.auth.signOut();\n        }\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","DEFAULT_OPTIONS","schema","autoRefreshToken","persistSession","detectSessionInUrl","multiTab","headers","DEFAULT_HEADERS","SupabaseClient","storage","SupabaseStorageClient","storageUrl","_getAuthHeaders","fetch","from","table","url","restUrl","SupabaseQueryBuilder","realtime","rpc","fn","params","head","count","rest","_initPostgRESTClient","removeAllSubscriptions","allSubs","getSubscriptions","slice","allSubPromises","map","sub","removeSubscription","allRemovedSubs","all","error","i","data","subscription","_closeSubscription","openSubCount","filter","chan","isJoined","length","disconnect","openSubscriptions","isClosed","unsubError","_unsubscribeSubscription","remove","unsubscribe","receive","Error","channels","_initSupabaseAuthClient","localStorage","authHeaders","Authorization","supabaseKey","apikey","SupabaseAuthClient","authUrl","Object","assign","_initRealtimeClient","options","RealtimeClient","realtimeUrl","PostgrestClient","_a","_b","authBearer","auth","session","access_token","_listenForMultiTabEvents","isBrowser","window","addEventListener","_c","key","STORAGE_KEY","newSession","JSON","parse","String","newValue","accessToken","currentSession","undefined","previousAccessToken","_handleTokenChanged","console","_listenForAuthEvents","onAuthStateChange","event","token","source","changedAccessToken","setAuth","signOut","supabaseUrl","_supabaseUrl","stripTrailingSlash","settings","replace"],"mappings":"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"}