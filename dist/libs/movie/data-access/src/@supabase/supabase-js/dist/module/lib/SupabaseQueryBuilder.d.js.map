{"version":3,"sources":["../../../../../../../../../../libs/movie/data-access/node_modules/@supabase/supabase-js/dist/module/lib/SupabaseQueryBuilder.d.ts"],"sourcesContent":["import { PostgrestQueryBuilder } from '@supabase/postgrest-js';\nimport { SupabaseRealtimeClient } from './SupabaseRealtimeClient';\nimport { RealtimeClient } from '@supabase/realtime-js';\nimport { Fetch, GenericObject, SupabaseEventTypes, SupabaseRealtimePayload } from './types';\nexport declare class SupabaseQueryBuilder<T> extends PostgrestQueryBuilder<T> {\n    private _subscription;\n    private _realtime;\n    private _headers;\n    private _schema;\n    private _table;\n    constructor(url: string, { headers, schema, realtime, table, fetch, }: {\n        headers?: GenericObject;\n        schema: string;\n        realtime: RealtimeClient;\n        table: string;\n        fetch?: Fetch;\n    });\n    /**\n     * Subscribe to realtime changes in your database.\n     * @param event The database event which you would like to receive updates for, or you can use the special wildcard `*` to listen to all changes.\n     * @param callback A callback that will handle the payload that is sent whenever your database changes.\n     */\n    on(event: SupabaseEventTypes, callback: (payload: SupabaseRealtimePayload<T>) => void): SupabaseRealtimeClient;\n}\n//# sourceMappingURL=SupabaseQueryBuilder.d.ts.map"],"names":[],"mappings":";AAAsC,GAAwB,CAAxB,YAAwB"}