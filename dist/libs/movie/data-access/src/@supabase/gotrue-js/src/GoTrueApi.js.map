{"version":3,"sources":["../../../../../../../../libs/movie/data-access/node_modules/@supabase/gotrue-js/src/GoTrueApi.ts"],"sourcesContent":["import { Fetch, get, post, put, remove } from './lib/fetch'\nimport {\n  Session,\n  Provider,\n  AdminUserAttributes,\n  UserAttributes,\n  CookieOptions,\n  User,\n  OpenIDConnectCredentials,\n} from './lib/types'\nimport { COOKIE_OPTIONS } from './lib/constants'\nimport { setCookies, getCookieString } from './lib/cookies'\nimport { expiresAt } from './lib/helpers'\n\nimport type { ApiError } from './lib/types'\nexport default class GoTrueApi {\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected cookieOptions: CookieOptions\n  protected fetch?: Fetch\n\n  constructor({\n    url = '',\n    headers = {},\n    cookieOptions,\n    fetch,\n  }: {\n    url: string\n    headers?: {\n      [key: string]: string\n    }\n    cookieOptions?: CookieOptions\n    fetch?: Fetch\n  }) {\n    this.url = url\n    this.headers = headers\n    this.cookieOptions = { ...COOKIE_OPTIONS, ...cookieOptions }\n    this.fetch = fetch\n  }\n\n  /**\n   * Create a temporary object with all configured headers and\n   * adds the Authorization token to be used on request methods\n   * @param jwt A valid, logged-in JWT.\n   */\n  private _createRequestHeaders(jwt: string) {\n    const headers = { ...this.headers }\n    headers['Authorization'] = `Bearer ${jwt}`\n    return headers\n  }\n\n  private cookieName() {\n    return this.cookieOptions.name ?? ''\n  }\n\n  /**\n   * Generates the relevant login URL for a third-party provider.\n   * @param provider One of the providers supported by GoTrue.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param scopes A space-separated list of scopes granted to the OAuth application.\n   */\n  getUrlForProvider(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n    }\n  ) {\n    const urlParams: string[] = [`provider=${encodeURIComponent(provider)}`]\n    if (options?.redirectTo) {\n      urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`)\n    }\n    if (options?.scopes) {\n      urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`)\n    }\n    return `${this.url}/authorize?${urlParams.join('&')}`\n  }\n\n  /**\n   * Creates a new user using their email address.\n   * @param email The email address of the user.\n   * @param password The password of the user.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param data Optional user metadata.\n   *\n   * @returns A logged-in session if the server has \"autoconfirm\" ON\n   * @returns A user if the server has \"autoconfirm\" OFF\n   */\n  async signUpWithEmail(\n    email: string,\n    password: string,\n    options: {\n      redirectTo?: string\n      data?: object\n      captchaToken?: string\n    } = {}\n  ): Promise<{ data: Session | User | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      let queryString = ''\n      if (options.redirectTo) {\n        queryString = '?redirect_to=' + encodeURIComponent(options.redirectTo)\n      }\n      const data = await post(\n        this.fetch,\n        `${this.url}/signup${queryString}`,\n        {\n          email,\n          password,\n          data: options.data,\n          gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n        },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Logs in an existing user using their email address.\n   * @param email The email address of the user.\n   * @param password The password of the user.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   */\n  async signInWithEmail(\n    email: string,\n    password: string,\n    options: {\n      redirectTo?: string\n    } = {}\n  ): Promise<{ data: Session | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      let queryString = '?grant_type=password'\n      if (options.redirectTo) {\n        queryString += '&redirect_to=' + encodeURIComponent(options.redirectTo)\n      }\n      const data = await post(\n        this.fetch,\n        `${this.url}/token${queryString}`,\n        { email, password },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Signs up a new user using their phone number and a password.\n   * @param phone The phone number of the user.\n   * @param password The password of the user.\n   * @param data Optional user metadata.\n   */\n  async signUpWithPhone(\n    phone: string,\n    password: string,\n    options: {\n      data?: object\n      captchaToken?: string\n    } = {}\n  ): Promise<{ data: Session | User | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      const data = await post(\n        this.fetch,\n        `${this.url}/signup`,\n        {\n          phone,\n          password,\n          data: options.data,\n          gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n        },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Logs in an existing user using their phone number and password.\n   * @param phone The phone number of the user.\n   * @param password The password of the user.\n   */\n  async signInWithPhone(\n    phone: string,\n    password: string\n  ): Promise<{ data: Session | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      const queryString = '?grant_type=password'\n      const data = await post(\n        this.fetch,\n        `${this.url}/token${queryString}`,\n        { phone, password },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Logs in an OpenID Connect user using their id_token.\n   * @param id_token The IDToken of the user.\n   * @param nonce The nonce of the user. The nonce is a random value generated by the developer (= yourself) before the initial grant is started. You should check the OpenID Connect specification for details. https://openid.net/developers/specs/\n   * @param provider The provider of the user.\n   * @param client_id The clientID of the user.\n   * @param issuer The issuer of the user.\n   */\n  async signInWithOpenIDConnect({\n    id_token,\n    nonce,\n    client_id,\n    issuer,\n    provider,\n  }: OpenIDConnectCredentials): Promise<{ data: Session | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      const queryString = '?grant_type=id_token'\n      const data = await post(\n        this.fetch,\n        `${this.url}/token${queryString}`,\n        { id_token, nonce, client_id, issuer, provider },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Sends a magic login link to an email address.\n   * @param email The email address of the user.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   */\n  async sendMagicLinkEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      captchaToken?: string\n    } = {}\n  ): Promise<{ data: {} | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      let queryString = ''\n      if (options.redirectTo) {\n        queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo)\n      }\n      const data = await post(\n        this.fetch,\n        `${this.url}/magiclink${queryString}`,\n        { email, gotrue_meta_security: { hcaptcha_token: options.captchaToken } },\n        { headers }\n      )\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Sends a mobile OTP via SMS. Will register the account if it doesn't already exist\n   * @param phone The user's phone number WITH international prefix\n   */\n  async sendMobileOTP(\n    phone: string,\n    options: {\n      captchaToken?: string\n    } = {}\n  ): Promise<{ data: {} | null; error: ApiError | null }> {\n    try {\n      let headers = { ...this.headers }\n      const data = await post(\n        this.fetch,\n        `${this.url}/otp`,\n        { phone, gotrue_meta_security: { hcaptcha_token: options.captchaToken } },\n        { headers }\n      )\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   */\n  async signOut(jwt: string): Promise<{ error: ApiError | null }> {\n    try {\n      await post(\n        this.fetch,\n        `${this.url}/logout`,\n        {},\n        { headers: this._createRequestHeaders(jwt), noResolveJson: true }\n      )\n      return { error: null }\n    } catch (e) {\n      return { error: e as ApiError }\n    }\n  }\n\n  /**\n   * Send User supplied Mobile OTP to be verified\n   * @param phone The user's phone number WITH international prefix\n   * @param token token that user was sent to their mobile phone\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   */\n  async verifyMobileOTP(\n    phone: string,\n    token: string,\n    options: {\n      redirectTo?: string\n    } = {}\n  ): Promise<{ data: Session | User | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      const data = await post(\n        this.fetch,\n        `${this.url}/verify`,\n        { phone, token, type: 'sms', redirect_to: options.redirectTo },\n        { headers }\n      )\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Sends an invite link to an email address.\n   * @param email The email address of the user.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param data Optional user metadata\n   */\n  async inviteUserByEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      data?: object\n    } = {}\n  ): Promise<{ data: User | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      let queryString = ''\n      if (options.redirectTo) {\n        queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo)\n      }\n      const data = await post(\n        this.fetch,\n        `${this.url}/invite${queryString}`,\n        { email, data: options.data },\n        { headers }\n      )\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Sends a reset request to an email address.\n   * @param email The email address of the user.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   */\n  async resetPasswordForEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      captchaToken?: string\n    } = {}\n  ): Promise<{ data: {} | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      let queryString = ''\n      if (options.redirectTo) {\n        queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo)\n      }\n      const data = await post(\n        this.fetch,\n        `${this.url}/recover${queryString}`,\n        { email, gotrue_meta_security: { hcaptcha_token: options.captchaToken } },\n        { headers }\n      )\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Generates a new JWT.\n   * @param refreshToken A valid refresh token that was returned on login.\n   */\n  async refreshAccessToken(\n    refreshToken: string\n  ): Promise<{ data: Session | null; error: ApiError | null }> {\n    try {\n      const data: any = await post(\n        this.fetch,\n        `${this.url}/token?grant_type=refresh_token`,\n        { refresh_token: refreshToken },\n        { headers: this.headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Set/delete the auth cookie based on the AuthChangeEvent.\n   * Works for Next.js & Express (requires cookie-parser middleware).\n   * @param req The request object.\n   * @param res The response object.\n   */\n  setAuthCookie(req: any, res: any) {\n    if (req.method !== 'POST') {\n      res.setHeader('Allow', 'POST')\n      res.status(405).end('Method Not Allowed')\n    }\n    const { event, session } = req.body\n\n    if (!event) throw new Error('Auth event missing!')\n    if (event === 'SIGNED_IN') {\n      if (!session) throw new Error('Auth session missing!')\n      setCookies(\n        req,\n        res,\n        [\n          { key: 'access-token', value: session.access_token },\n          { key: 'refresh-token', value: session.refresh_token },\n        ].map((token) => ({\n          name: `${this.cookieName()}-${token.key}`,\n          value: token.value,\n          domain: this.cookieOptions.domain,\n          maxAge: this.cookieOptions.lifetime ?? 0,\n          path: this.cookieOptions.path,\n          sameSite: this.cookieOptions.sameSite,\n        }))\n      )\n    }\n    if (event === 'SIGNED_OUT') {\n      setCookies(\n        req,\n        res,\n        ['access-token', 'refresh-token'].map((key) => ({\n          name: `${this.cookieName()}-${key}`,\n          value: '',\n          maxAge: -1,\n        }))\n      )\n    }\n    res.status(200).json({})\n  }\n\n  /**\n   * Deletes the Auth Cookies and redirects to the\n   * @param req The request object.\n   * @param res The response object.\n   * @param options Optionally specify a `redirectTo` URL in the options.\n   */\n  deleteAuthCookie(req: any, res: any, { redirectTo = '/' }: { redirectTo?: string }) {\n    setCookies(\n      req,\n      res,\n      ['access-token', 'refresh-token'].map((key) => ({\n        name: `${this.cookieName()}-${key}`,\n        value: '',\n        maxAge: -1,\n      }))\n    )\n    return res.redirect(307, redirectTo)\n  }\n\n  /**\n   * Helper method to generate the Auth Cookie string for you in case you can't use `setAuthCookie`.\n   * @param req The request object.\n   * @param res The response object.\n   * @returns The Cookie string that needs to be set as the value for the `Set-Cookie` header.\n   */\n  getAuthCookieString(req: any, res: any): string[] {\n    if (req.method !== 'POST') {\n      res.setHeader('Allow', 'POST')\n      res.status(405).end('Method Not Allowed')\n    }\n    const { event, session } = req.body\n\n    if (!event) throw new Error('Auth event missing!')\n    if (event === 'SIGNED_IN') {\n      if (!session) throw new Error('Auth session missing!')\n      return getCookieString(\n        req,\n        res,\n        [\n          { key: 'access-token', value: session.access_token },\n          { key: 'refresh-token', value: session.refresh_token },\n        ].map((token) => ({\n          name: `${this.cookieName()}-${token.key}`,\n          value: token.value,\n          domain: this.cookieOptions.domain,\n          maxAge: this.cookieOptions.lifetime ?? 0,\n          path: this.cookieOptions.path,\n          sameSite: this.cookieOptions.sameSite,\n        }))\n      )\n    }\n    if (event === 'SIGNED_OUT') {\n      return getCookieString(\n        req,\n        res,\n        ['access-token', 'refresh-token'].map((key) => ({\n          name: `${this.cookieName()}-${key}`,\n          value: '',\n          maxAge: -1,\n        }))\n      )\n    }\n    return res.getHeader('Set-Cookie')\n  }\n\n  /**\n   * Generates links to be sent via email or other.\n   * @param type The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n   * @param email The user's email.\n   * @param password User password. For signup only.\n   * @param data Optional user metadata. For signup only.\n   * @param redirectTo The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n   */\n  async generateLink(\n    type: 'signup' | 'magiclink' | 'recovery' | 'invite',\n    email: string,\n    options: {\n      password?: string\n      data?: object\n      redirectTo?: string\n    } = {}\n  ): Promise<{ data: Session | User | null; error: ApiError | null }> {\n    try {\n      const data: any = await post(\n        this.fetch,\n        `${this.url}/admin/generate_link`,\n        {\n          type,\n          email,\n          password: options.password,\n          data: options.data,\n          redirect_to: options.redirectTo,\n        },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  // User Admin API\n\n  /**\n   * Creates a new user.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   *\n   * @param attributes The data you want to create the user with.\n   */\n  async createUser(\n    attributes: AdminUserAttributes\n  ): Promise<\n    { user: null; data: null; error: ApiError } | { user: User; data: User; error: null }\n  > {\n    try {\n      const data: any = await post(this.fetch, `${this.url}/admin/users`, attributes, {\n        headers: this.headers,\n      })\n      return { user: data, data, error: null }\n    } catch (e) {\n      return { user: null, data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Get a list of users.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async listUsers(): Promise<{ data: null; error: ApiError } | { data: User[]; error: null }> {\n    try {\n      const data: any = await get(this.fetch, `${this.url}/admin/users`, {\n        headers: this.headers,\n      })\n      return { data: data.users, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Get user by id.\n   *\n   * @param uid The user's unique identifier\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async getUserById(\n    uid: string\n  ): Promise<{ data: null; error: ApiError } | { data: User; error: null }> {\n    try {\n      const data: any = await get(this.fetch, `${this.url}/admin/users/${uid}`, {\n        headers: this.headers,\n      })\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Get user by reading the cookie from the request.\n   * Works for Next.js & Express (requires cookie-parser middleware).\n   */\n  async getUserByCookie(\n    req: any,\n    res?: any\n  ): Promise<{\n    token: string | null\n    user: User | null\n    data: User | null\n    error: ApiError | null\n  }> {\n    try {\n      if (!req.cookies) {\n        throw new Error(\n          'Not able to parse cookies! When using Express make sure the cookie-parser middleware is in use!'\n        )\n      }\n\n      const access_token = req.cookies[`${this.cookieName()}-access-token`]\n      const refresh_token = req.cookies[`${this.cookieName()}-refresh-token`]\n\n      if (!access_token) {\n        throw new Error('No cookie found!')\n      }\n\n      const { user, error: getUserError } = await this.getUser(access_token)\n      if (getUserError) {\n        if (!refresh_token) throw new Error('No refresh_token cookie found!')\n        if (!res)\n          throw new Error('You need to pass the res object to automatically refresh the session!')\n        const { data, error } = await this.refreshAccessToken(refresh_token)\n        if (error) {\n          throw error\n        } else if (data) {\n          setCookies(\n            req,\n            res,\n            [\n              { key: 'access-token', value: data.access_token },\n              { key: 'refresh-token', value: data.refresh_token! },\n            ].map((token) => ({\n              name: `${this.cookieName()}-${token.key}`,\n              value: token.value,\n              domain: this.cookieOptions.domain,\n              maxAge: this.cookieOptions.lifetime ?? 0,\n              path: this.cookieOptions.path,\n              sameSite: this.cookieOptions.sameSite,\n            }))\n          )\n          return { token: data.access_token, user: data.user, data: data.user, error: null }\n        }\n      }\n      return { token: access_token, user: user, data: user, error: null }\n    } catch (e) {\n      return { token: null, user: null, data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Updates the user data.\n   *\n   * @param attributes The data you want to update.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async updateUserById(\n    uid: string,\n    attributes: AdminUserAttributes\n  ): Promise<{ user: User | null; data: User | null; error: ApiError | null }> {\n    try {\n      this //\n      const data: any = await put(this.fetch, `${this.url}/admin/users/${uid}`, attributes, {\n        headers: this.headers,\n      })\n      return { user: data, data, error: null }\n    } catch (e) {\n      return { user: null, data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Delete a user. Requires a `service_role` key.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   *\n   * @param uid The user uid you want to remove.\n   */\n  async deleteUser(\n    uid: string\n  ): Promise<{ user: User | null; data: User | null; error: ApiError | null }> {\n    try {\n      const data: any = await remove(\n        this.fetch,\n        `${this.url}/admin/users/${uid}`,\n        {},\n        {\n          headers: this.headers,\n        }\n      )\n      return { user: data, data, error: null }\n    } catch (e) {\n      return { user: null, data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Gets the current user details.\n   *\n   * This method is called by the GoTrueClient `update` where\n   * the jwt is set to this.currentSession.access_token\n   * and therefore, acts like getting the currently authenticated used\n   *\n   * @param jwt A valid, logged-in JWT. Typically, the access_token for the currentSession\n   */\n  async getUser(\n    jwt: string\n  ): Promise<{ user: User | null; data: User | null; error: ApiError | null }> {\n    try {\n      const data: any = await get(this.fetch, `${this.url}/user`, {\n        headers: this._createRequestHeaders(jwt),\n      })\n      return { user: data, data, error: null }\n    } catch (e) {\n      return { user: null, data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Updates the user data.\n   * @param jwt A valid, logged-in JWT.\n   * @param attributes The data you want to update.\n   */\n  async updateUser(\n    jwt: string,\n    attributes: UserAttributes\n  ): Promise<{ user: User | null; data: User | null; error: ApiError | null }> {\n    try {\n      const data: any = await put(this.fetch, `${this.url}/user`, attributes, {\n        headers: this._createRequestHeaders(jwt),\n      })\n      return { user: data, data, error: null }\n    } catch (e) {\n      return { user: null, data: null, error: e as ApiError }\n    }\n  }\n}\n"],"names":["GoTrueApi","_createRequestHeaders","jwt","headers","cookieName","cookieOptions","name","getUrlForProvider","provider","options","urlParams","encodeURIComponent","redirectTo","push","scopes","url","join","signUpWithEmail","email","password","queryString","data","post","fetch","gotrue_meta_security","hcaptcha_token","captchaToken","session","expires_in","expires_at","expiresAt","error","e","signInWithEmail","signUpWithPhone","phone","signInWithPhone","signInWithOpenIDConnect","id_token","nonce","client_id","issuer","sendMagicLinkEmail","sendMobileOTP","signOut","noResolveJson","verifyMobileOTP","token","type","redirect_to","inviteUserByEmail","resetPasswordForEmail","refreshAccessToken","refreshToken","refresh_token","setAuthCookie","req","res","method","setHeader","status","end","event","body","Error","setCookies","key","value","access_token","map","domain","maxAge","lifetime","path","sameSite","json","deleteAuthCookie","redirect","getAuthCookieString","getCookieString","getHeader","generateLink","createUser","attributes","user","listUsers","get","users","getUserById","uid","getUserByCookie","cookies","getUserError","getUser","updateUserById","put","deleteUser","remove","updateUser","COOKIE_OPTIONS"],"mappings":"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"}