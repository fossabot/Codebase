{"version":3,"sources":["../../../../../../../../libs/movie/data-access/node_modules/@supabase/gotrue-js/src/GoTrueClient.ts"],"sourcesContent":["import GoTrueApi from './GoTrueApi'\nimport { isBrowser, getParameterByName, uuid } from './lib/helpers'\nimport { GOTRUE_URL, DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants'\nimport { polyfillGlobalThis } from './lib/polyfills'\nimport { Fetch } from './lib/fetch'\n\nimport type {\n  ApiError,\n  Session,\n  User,\n  UserAttributes,\n  Provider,\n  Subscription,\n  AuthChangeEvent,\n  CookieOptions,\n  UserCredentials,\n  VerifyOTPParams,\n  OpenIDConnectCredentials,\n} from './lib/types'\n\npolyfillGlobalThis() // Make \"globalThis\" available\n\nconst DEFAULT_OPTIONS = {\n  url: GOTRUE_URL,\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  multiTab: true,\n  headers: DEFAULT_HEADERS,\n}\n\ntype AnyFunction = (...args: any[]) => any\ntype MaybePromisify<T> = T | Promise<T>\n\ntype PromisifyMethods<T> = {\n  [K in keyof T]: T[K] extends AnyFunction\n    ? (...args: Parameters<T[K]>) => MaybePromisify<ReturnType<T[K]>>\n    : T[K]\n}\n\ntype SupportedStorage = PromisifyMethods<Pick<Storage, 'getItem' | 'setItem' | 'removeItem'>>\n\nexport default class GoTrueClient {\n  /**\n   * Namespace for the GoTrue API methods.\n   * These can be used for example to get a user from a JWT in a server environment or reset a user's password.\n   */\n  api: GoTrueApi\n  /**\n   * The currently logged in user or null.\n   */\n  protected currentUser: User | null\n  /**\n   * The session object for the currently logged in user or null.\n   */\n  protected currentSession: Session | null\n\n  protected autoRefreshToken: boolean\n  protected persistSession: boolean\n  protected localStorage: SupportedStorage\n  protected multiTab: boolean\n  protected stateChangeEmitters: Map<string, Subscription> = new Map()\n  protected refreshTokenTimer?: ReturnType<typeof setTimeout>\n\n  /**\n   * Create a new client for use in the browser.\n   * @param options.url The URL of the GoTrue server.\n   * @param options.headers Any additional headers to send to the GoTrue server.\n   * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n   * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n   * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n   * @param options.localStorage Provide your own local storage implementation to use instead of the browser's local storage.\n   * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n   * @param options.cookieOptions\n   * @param options.fetch A custom fetch implementation.\n   */\n  constructor(options: {\n    url?: string\n    headers?: { [key: string]: string }\n    detectSessionInUrl?: boolean\n    autoRefreshToken?: boolean\n    persistSession?: boolean\n    localStorage?: SupportedStorage\n    multiTab?: boolean\n    cookieOptions?: CookieOptions\n    fetch?: Fetch\n  }) {\n    const settings = { ...DEFAULT_OPTIONS, ...options }\n    this.currentUser = null\n    this.currentSession = null\n    this.autoRefreshToken = settings.autoRefreshToken\n    this.persistSession = settings.persistSession\n    this.multiTab = settings.multiTab\n    this.localStorage = settings.localStorage || globalThis.localStorage\n    this.api = new GoTrueApi({\n      url: settings.url,\n      headers: settings.headers,\n      cookieOptions: settings.cookieOptions,\n      fetch: settings.fetch,\n    })\n    this._recoverSession()\n    this._recoverAndRefresh()\n    this._listenForMultiTabEvents()\n\n    if (settings.detectSessionInUrl && isBrowser() && !!getParameterByName('access_token')) {\n      // Handle the OAuth redirect\n      this.getSessionFromUrl({ storeSession: true }).then(({ error }) => {\n        if (error) {\n          console.error('Error getting session from URL.', error)\n        }\n      })\n    }\n  }\n\n  /**\n   * Creates a new user.\n   * @type UserCredentials\n   * @param email The user's email address.\n   * @param password The user's password.\n   * @param phone The user's phone number.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param data Optional user metadata.\n   */\n  async signUp(\n    { email, password, phone }: UserCredentials,\n    options: {\n      redirectTo?: string\n      data?: object\n      captchaToken?: string\n    } = {}\n  ): Promise<{\n    user: User | null\n    session: Session | null\n    error: ApiError | null\n  }> {\n    try {\n      this._removeSession()\n\n      const { data, error } =\n        phone && password\n          ? await this.api.signUpWithPhone(phone!, password!, {\n              data: options.data,\n              captchaToken: options.captchaToken,\n            })\n          : await this.api.signUpWithEmail(email!, password!, {\n              redirectTo: options.redirectTo,\n              data: options.data,\n              captchaToken: options.captchaToken,\n            })\n\n      if (error) {\n        throw error\n      }\n\n      if (!data) {\n        throw 'An error occurred on sign up.'\n      }\n\n      let session: Session | null = null\n      let user: User | null = null\n\n      if ((data as Session).access_token) {\n        session = data as Session\n        user = session.user as User\n        this._saveSession(session)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n\n      if ((data as User).id) {\n        user = data as User\n      }\n\n      return { user, session, error: null }\n    } catch (e) {\n      return { user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Log in an existing user, or login via a third-party provider.\n   * @type UserCredentials\n   * @param email The user's email address.\n   * @param password The user's password.\n   * @param refreshToken A valid refresh token that was returned on login.\n   * @param provider One of the providers supported by GoTrue.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param scopes A space-separated list of scopes granted to the OAuth application.\n   */\n  async signIn(\n    { email, phone, password, refreshToken, provider, oidc }: UserCredentials,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      captchaToken?: string\n    } = {}\n  ): Promise<{\n    session: Session | null\n    user: User | null\n    provider?: Provider\n    url?: string | null\n    error: ApiError | null\n  }> {\n    try {\n      this._removeSession()\n\n      if (email && !password) {\n        const { error } = await this.api.sendMagicLinkEmail(email, {\n          redirectTo: options.redirectTo,\n          captchaToken: options.captchaToken,\n        })\n        return { user: null, session: null, error }\n      }\n      if (email && password) {\n        return this._handleEmailSignIn(email, password, {\n          redirectTo: options.redirectTo,\n        })\n      }\n      if (phone && !password) {\n        const { error } = await this.api.sendMobileOTP(phone, {\n          captchaToken: options.captchaToken,\n        })\n        return { user: null, session: null, error }\n      }\n      if (phone && password) {\n        return this._handlePhoneSignIn(phone, password)\n      }\n      if (refreshToken) {\n        // currentSession and currentUser will be updated to latest on _callRefreshToken using the passed refreshToken\n        const { error } = await this._callRefreshToken(refreshToken)\n        if (error) throw error\n\n        return {\n          user: this.currentUser,\n          session: this.currentSession,\n          error: null,\n        }\n      }\n      if (provider) {\n        return this._handleProviderSignIn(provider, {\n          redirectTo: options.redirectTo,\n          scopes: options.scopes,\n        })\n      }\n      if (oidc) {\n        return this._handleOpenIDConnectSignIn(oidc)\n      }\n      throw new Error(\n        `You must provide either an email, phone number, a third-party provider or OpenID Connect.`\n      )\n    } catch (e) {\n      return { user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Log in a user given a User supplied OTP received via mobile.\n   * @param phone The user's phone number.\n   * @param token The user's password.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   */\n  async verifyOTP(\n    { phone, token }: VerifyOTPParams,\n    options: {\n      redirectTo?: string\n    } = {}\n  ): Promise<{\n    user: User | null\n    session: Session | null\n    error: ApiError | null\n  }> {\n    try {\n      this._removeSession()\n\n      const { data, error } = await this.api.verifyMobileOTP(phone, token, options)\n\n      if (error) {\n        throw error\n      }\n\n      if (!data) {\n        throw 'An error occurred on token verification.'\n      }\n\n      let session: Session | null = null\n      let user: User | null = null\n\n      if ((data as Session).access_token) {\n        session = data as Session\n        user = session.user as User\n        this._saveSession(session)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n\n      if ((data as User).id) {\n        user = data as User\n      }\n\n      return { user, session, error: null }\n    } catch (e) {\n      return { user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Inside a browser context, `user()` will return the user data, if there is a logged in user.\n   *\n   * For server-side management, you can get a user through `auth.api.getUserByCookie()`\n   */\n  user(): User | null {\n    return this.currentUser\n  }\n\n  /**\n   * Returns the session data, if there is an active session.\n   */\n  session(): Session | null {\n    return this.currentSession\n  }\n\n  /**\n   * Force refreshes the session including the user data in case it was updated in a different session.\n   */\n  async refreshSession(): Promise<{\n    data: Session | null\n    user: User | null\n    error: ApiError | null\n  }> {\n    try {\n      if (!this.currentSession?.access_token) throw new Error('Not logged in.')\n\n      // currentSession and currentUser will be updated to latest on _callRefreshToken\n      const { error } = await this._callRefreshToken()\n      if (error) throw error\n\n      return { data: this.currentSession, user: this.currentUser, error: null }\n    } catch (e) {\n      return { data: null, user: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Updates user data, if there is a logged in user.\n   */\n  async update(\n    attributes: UserAttributes\n  ): Promise<{ data: User | null; user: User | null; error: ApiError | null }> {\n    try {\n      if (!this.currentSession?.access_token) throw new Error('Not logged in.')\n\n      const { user, error } = await this.api.updateUser(\n        this.currentSession.access_token,\n        attributes\n      )\n      if (error) throw error\n      if (!user) throw Error('Invalid user data.')\n\n      const session = { ...this.currentSession, user }\n      this._saveSession(session)\n      this._notifyAllSubscribers('USER_UPDATED')\n\n      return { data: user, user, error: null }\n    } catch (e) {\n      return { data: null, user: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Sets the session data from refresh_token and returns current Session and Error\n   * @param refresh_token a JWT token\n   */\n  async setSession(\n    refresh_token: string\n  ): Promise<{ session: Session | null; error: ApiError | null }> {\n    try {\n      if (!refresh_token) {\n        throw new Error('No current session.')\n      }\n      const { data, error } = await this.api.refreshAccessToken(refresh_token)\n      if (error) {\n        return { session: null, error: error }\n      }\n\n      this._saveSession(data!)\n      this._notifyAllSubscribers('SIGNED_IN')\n      return { session: data, error: null }\n    } catch (e) {\n      return { error: e as ApiError, session: null }\n    }\n  }\n\n  /**\n   * Overrides the JWT on the current client. The JWT will then be sent in all subsequent network requests.\n   * @param access_token a jwt access token\n   */\n  setAuth(access_token: string): Session {\n    this.currentSession = {\n      ...this.currentSession,\n      access_token,\n      token_type: 'bearer',\n      user: null,\n    }\n\n    return this.currentSession\n  }\n\n  /**\n   * Gets the session data from a URL string\n   * @param options.storeSession Optionally store the session in the browser\n   */\n  async getSessionFromUrl(options?: {\n    storeSession?: boolean\n  }): Promise<{ data: Session | null; error: ApiError | null }> {\n    try {\n      if (!isBrowser()) throw new Error('No browser detected.')\n\n      const error_description = getParameterByName('error_description')\n      if (error_description) throw new Error(error_description)\n\n      const provider_token = getParameterByName('provider_token')\n      const access_token = getParameterByName('access_token')\n      if (!access_token) throw new Error('No access_token detected.')\n      const expires_in = getParameterByName('expires_in')\n      if (!expires_in) throw new Error('No expires_in detected.')\n      const refresh_token = getParameterByName('refresh_token')\n      if (!refresh_token) throw new Error('No refresh_token detected.')\n      const token_type = getParameterByName('token_type')\n      if (!token_type) throw new Error('No token_type detected.')\n\n      const timeNow = Math.round(Date.now() / 1000)\n      const expires_at = timeNow + parseInt(expires_in)\n\n      const { user, error } = await this.api.getUser(access_token)\n      if (error) throw error\n\n      const session: Session = {\n        provider_token,\n        access_token,\n        expires_in: parseInt(expires_in),\n        expires_at,\n        refresh_token,\n        token_type,\n        user: user!,\n      }\n      if (options?.storeSession) {\n        this._saveSession(session)\n        const recoveryMode = getParameterByName('type')\n        this._notifyAllSubscribers('SIGNED_IN')\n        if (recoveryMode === 'recovery') {\n          this._notifyAllSubscribers('PASSWORD_RECOVERY')\n        }\n      }\n      // Remove tokens from URL\n      window.location.hash = ''\n\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n   * and log them out - removing all items from localstorage and then trigger a \"SIGNED_OUT\" event.\n   *\n   * For server-side management, you can disable sessions by passing a JWT through to `auth.api.signOut(JWT: string)`\n   */\n  async signOut(): Promise<{ error: ApiError | null }> {\n    const accessToken = this.currentSession?.access_token\n    this._removeSession()\n    this._notifyAllSubscribers('SIGNED_OUT')\n    if (accessToken) {\n      const { error } = await this.api.signOut(accessToken)\n      if (error) return { error }\n    }\n    return { error: null }\n  }\n\n  /**\n   * Receive a notification every time an auth event happens.\n   * @returns {Subscription} A subscription object which can be used to unsubscribe itself.\n   */\n  onAuthStateChange(callback: (event: AuthChangeEvent, session: Session | null) => void): {\n    data: Subscription | null\n    error: ApiError | null\n  } {\n    try {\n      const id: string = uuid()\n      const subscription: Subscription = {\n        id,\n        callback,\n        unsubscribe: () => {\n          this.stateChangeEmitters.delete(id)\n        },\n      }\n      this.stateChangeEmitters.set(id, subscription)\n      return { data: subscription, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  private async _handleEmailSignIn(\n    email: string,\n    password: string,\n    options: {\n      redirectTo?: string\n    } = {}\n  ) {\n    try {\n      const { data, error } = await this.api.signInWithEmail(email, password, {\n        redirectTo: options.redirectTo,\n      })\n      if (error || !data) return { data: null, user: null, session: null, error }\n\n      if (data?.user?.confirmed_at || data?.user?.email_confirmed_at) {\n        this._saveSession(data)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n\n      return { data, user: data.user, session: data, error: null }\n    } catch (e) {\n      return { data: null, user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  private async _handlePhoneSignIn(phone: string, password: string) {\n    try {\n      const { data, error } = await this.api.signInWithPhone(phone, password)\n      if (error || !data) return { data: null, user: null, session: null, error }\n\n      if (data?.user?.phone_confirmed_at) {\n        this._saveSession(data)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n\n      return { data, user: data.user, session: data, error: null }\n    } catch (e) {\n      return { data: null, user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  private _handleProviderSignIn(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n    } = {}\n  ) {\n    const url: string = this.api.getUrlForProvider(provider, {\n      redirectTo: options.redirectTo,\n      scopes: options.scopes,\n    })\n\n    try {\n      // try to open on the browser\n      if (isBrowser()) {\n        window.location.href = url\n      }\n      return { provider, url, data: null, session: null, user: null, error: null }\n    } catch (e) {\n      // fallback to returning the URL\n      if (url) return { provider, url, data: null, session: null, user: null, error: null }\n      return { data: null, user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  private async _handleOpenIDConnectSignIn({\n    id_token,\n    nonce,\n    client_id,\n    issuer,\n    provider,\n  }: OpenIDConnectCredentials): Promise<{\n    session: Session | null\n    user: User | null\n    error: ApiError | null\n  }> {\n    if (id_token && nonce && ((client_id && issuer) || provider)) {\n      try {\n        const { data, error } = await this.api.signInWithOpenIDConnect({\n          id_token,\n          nonce,\n          client_id,\n          issuer,\n          provider,\n        })\n        if (error || !data) return { user: null, session: null, error }\n        this._saveSession(data)\n        this._notifyAllSubscribers('SIGNED_IN')\n        return { user: data.user, session: data, error: null }\n      } catch (e) {\n        return { user: null, session: null, error: e as ApiError }\n      }\n    }\n    throw new Error(`You must provide a OpenID Connect provider with your id token and nonce.`)\n  }\n\n  /**\n   * Attempts to get the session from LocalStorage\n   * Note: this should never be async (even for React Native), as we need it to return immediately in the constructor.\n   */\n  private _recoverSession() {\n    try {\n      const json = isBrowser() && this.localStorage?.getItem(STORAGE_KEY)\n      if (!json || typeof json !== 'string') {\n        return null\n      }\n\n      const data = JSON.parse(json)\n      const { currentSession, expiresAt } = data\n      const timeNow = Math.round(Date.now() / 1000)\n\n      if (expiresAt >= timeNow && currentSession?.user) {\n        this._saveSession(currentSession)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n    } catch (error) {\n      console.log('error', error)\n    }\n  }\n\n  /**\n   * Recovers the session from LocalStorage and refreshes\n   * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n   */\n  private async _recoverAndRefresh() {\n    try {\n      const json = isBrowser() && (await this.localStorage.getItem(STORAGE_KEY))\n      if (!json) {\n        return null\n      }\n\n      const data = JSON.parse(json)\n      const { currentSession, expiresAt } = data\n      const timeNow = Math.round(Date.now() / 1000)\n\n      if (expiresAt < timeNow) {\n        if (this.autoRefreshToken && currentSession.refresh_token) {\n          const { error } = await this._callRefreshToken(currentSession.refresh_token)\n          if (error) {\n            console.log(error.message)\n            await this._removeSession()\n          }\n        } else {\n          this._removeSession()\n        }\n      } else if (!currentSession || !currentSession.user) {\n        console.log('Current session is missing data.')\n        this._removeSession()\n      } else {\n        // should be handled on _recoverSession method already\n        // But we still need the code here to accommodate for AsyncStorage e.g. in React native\n        this._saveSession(currentSession)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n    } catch (err) {\n      console.error(err)\n      return null\n    }\n  }\n\n  private async _callRefreshToken(refresh_token = this.currentSession?.refresh_token) {\n    try {\n      if (!refresh_token) {\n        throw new Error('No current session.')\n      }\n      const { data, error } = await this.api.refreshAccessToken(refresh_token)\n      if (error) throw error\n      if (!data) throw Error('Invalid session data.')\n\n      this._saveSession(data)\n      this._notifyAllSubscribers('TOKEN_REFRESHED')\n      this._notifyAllSubscribers('SIGNED_IN')\n\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  private _notifyAllSubscribers(event: AuthChangeEvent) {\n    this.stateChangeEmitters.forEach((x) => x.callback(event, this.currentSession))\n  }\n\n  /**\n   * set currentSession and currentUser\n   * process to _startAutoRefreshToken if possible\n   */\n  private _saveSession(session: Session) {\n    this.currentSession = session\n    this.currentUser = session.user\n\n    const expiresAt = session.expires_at\n    if (expiresAt) {\n      const timeNow = Math.round(Date.now() / 1000)\n      const expiresIn = expiresAt - timeNow\n      const refreshDurationBeforeExpires = expiresIn > 60 ? 60 : 0.5\n      this._startAutoRefreshToken((expiresIn - refreshDurationBeforeExpires) * 1000)\n    }\n\n    // Do we need any extra check before persist session\n    // access_token or user ?\n    if (this.persistSession && session.expires_at) {\n      this._persistSession(this.currentSession)\n    }\n  }\n\n  private _persistSession(currentSession: Session) {\n    const data = { currentSession, expiresAt: currentSession.expires_at }\n    isBrowser() && this.localStorage.setItem(STORAGE_KEY, JSON.stringify(data))\n  }\n\n  private async _removeSession() {\n    this.currentSession = null\n    this.currentUser = null\n    if (this.refreshTokenTimer) clearTimeout(this.refreshTokenTimer)\n    isBrowser() && (await this.localStorage.removeItem(STORAGE_KEY))\n  }\n\n  /**\n   * Clear and re-create refresh token timer\n   * @param value time intervals in milliseconds\n   */\n  private _startAutoRefreshToken(value: number) {\n    if (this.refreshTokenTimer) clearTimeout(this.refreshTokenTimer)\n    if (value <= 0 || !this.autoRefreshToken) return\n\n    this.refreshTokenTimer = setTimeout(() => this._callRefreshToken(), value)\n    if (typeof this.refreshTokenTimer.unref === 'function') this.refreshTokenTimer.unref()\n  }\n\n  /**\n   * Listens for changes to LocalStorage and updates the current session.\n   */\n  private _listenForMultiTabEvents() {\n    if (!this.multiTab || !isBrowser() || !window?.addEventListener) {\n      // console.debug('Auth multi-tab support is disabled.')\n      return false\n    }\n\n    try {\n      window?.addEventListener('storage', (e: StorageEvent) => {\n        if (e.key === STORAGE_KEY) {\n          const newSession = JSON.parse(String(e.newValue))\n          if (newSession?.currentSession?.access_token) {\n            this._recoverAndRefresh()\n            this._notifyAllSubscribers('SIGNED_IN')\n          } else {\n            this._removeSession()\n            this._notifyAllSubscribers('SIGNED_OUT')\n          }\n        }\n      })\n    } catch (error) {\n      console.error('_listenForMultiTabEvents', error)\n    }\n  }\n}\n"],"names":["polyfillGlobalThis","DEFAULT_OPTIONS","url","GOTRUE_URL","autoRefreshToken","persistSession","detectSessionInUrl","multiTab","headers","DEFAULT_HEADERS","GoTrueClient","signUp","email","password","phone","options","_removeSession","data","error","api","signUpWithPhone","captchaToken","signUpWithEmail","redirectTo","session","user","access_token","_saveSession","_notifyAllSubscribers","id","e","signIn","refreshToken","provider","oidc","sendMagicLinkEmail","_handleEmailSignIn","sendMobileOTP","_handlePhoneSignIn","_callRefreshToken","currentUser","currentSession","_handleProviderSignIn","scopes","_handleOpenIDConnectSignIn","Error","verifyOTP","token","verifyMobileOTP","refreshSession","update","attributes","updateUser","setSession","refresh_token","refreshAccessToken","setAuth","token_type","getSessionFromUrl","isBrowser","error_description","getParameterByName","provider_token","expires_in","timeNow","Math","round","Date","now","expires_at","parseInt","getUser","storeSession","recoveryMode","window","location","hash","signOut","accessToken","onAuthStateChange","callback","uuid","subscription","unsubscribe","stateChangeEmitters","delete","set","signInWithEmail","confirmed_at","email_confirmed_at","signInWithPhone","phone_confirmed_at","getUrlForProvider","href","id_token","nonce","client_id","issuer","signInWithOpenIDConnect","_recoverSession","json","localStorage","getItem","STORAGE_KEY","JSON","parse","expiresAt","console","log","_recoverAndRefresh","message","err","event","forEach","x","expiresIn","refreshDurationBeforeExpires","_startAutoRefreshToken","_persistSession","setItem","stringify","refreshTokenTimer","clearTimeout","removeItem","value","setTimeout","unref","_listenForMultiTabEvents","addEventListener","key","newSession","String","newValue","Map","settings","globalThis","GoTrueApi","cookieOptions","fetch","then"],"mappings":"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"}